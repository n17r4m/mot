{"version":3,"sources":["/tools/isobuild/package-source.js"],"names":["module1","module","Builder","watch","require","default","v","SourceArch","PackageNamespace","PackageNpm","PackageCordova","PackageAPI","TEST_FILENAME_REGEXPS","APP_TEST_FILENAME_REGEXPS","isTestFilePath","convertColonsInPath","convert","optimisticReadFile","optimisticHashOrNull","optimisticStatOrNull","optimisticReadMeteorIgnore","_","sourcemap","files","utils","buildmessage","meteorNpm","archinfo","catalog","packageVersionParser","compiler","Profile","AUTO_TEST_PREFIX","isTestName","name","nameStart","slice","length","genTestName","loadOrderSort","sourceProcessorSet","arch","isTemplate","memoize","filename","classification","classifyFilename","type","sourceProcessors","Error","legacyIsTemplate","a","b","isTemplate_a","pathBasename","isTemplate_b","ismain_a","indexOf","ismain_b","islib_a","pathSep","islib_b","a_parts","split","b_parts","len_a","len_b","i","a_part","b_part","splitConstraint","c","parsed","parsePackageConstraint","package","constraint","constraintString","getExcerptFromReadme","text","commonmark","reader","DocParser","parse","relevantNodes","any","children","child","isHeader","t","push","isEmpty","textLines","start","start_line","stop","last","end_line","excerpt","join","replace","SymlinkLoopChecker","constructor","sourceRoot","_seenPaths","check","relDir","quietly","absPath","pathJoin","realPath","realpath","e","code","has","error","PackageSource","self","serveRoot","metadata","docsExplicitlyProvided","version","versionExplicitlyProvided","architectures","pluginInfo","pluginWatchSet","WatchSet","npmDependencies","npmDiscards","npmCacheDirectory","cordovaDependencies","testName","isTest","debugOnly","prodOnly","testOnly","includeTool","isCore","extend","prototype","initEmpty","initFromOptions","options","sources","ensureOnlyValidVersions","forCordova","isString","npmDir","map","source","relPath","sourceArch","kind","uses","use","getFiles","localNodeModulesDirs","_checkCrossUnibuildVersionConstraints","initFromPackageDir","dir","assertInCapture","isPortable","initFromPackageDirOptions","documentation","inCheckout","packDir","getCurrentToolsDir","pathDirname","exists","packageFileHashes","Object","create","packageJsPath","packageJsCode","pkgJsonPath","pkgJsonStat","isFile","watchPackageFiles","watchSet","each","hash","path","addFile","Package","Npm","Cordova","runJavaScript","toString","symbols","exception","_fileAndDepLoader","_dependencies","validatePackageName","versionParserError","message","api","buildingIsopackets","markBoundary","console","log","stack","ALL_ARCHES","assets","doNotDepOnSelf","dep","label","implies","releaseRecords","setFromRel","newConstraint","releaseRecord","packages","reduce","x","y","pathResolve","_discards","process","env","NO_METEOR_PACKAGE","alreadyDependsOnMeteor","find","u","unshift","result","relPathToSourceObj","forEach","sourceObj","_findSources","isApp","fileOptions","_inferFileOptions","lazy","declaredExports","exports","_hasTests","_readAndWatchDirectory","include","exclude","names","readAndWatchDirectory","initFromAppDir","projectContext","ignoreFiles","appDir","projectDir","projectConstraintsFile","eachConstraint","projectWatchSet","getProjectWatchSet","platformList","getCordovaPlatforms","findOptions","loopChecker","sort","_findAssets","origAppDir","getOriginalAppDirForTestPackages","origNodeModulesDir","origNodeModulesStat","statOrNull","isDirectory","sourcePath","local","merge","global","testCommandMetadata","isAppTest","isTestFile","dirs","transpile","matches","endsWith","bare","_findSourcesCache","sourceReadOptions","appReadDirectoryOptions","Array","apply","controlFiles","anyLevelExcludes","topLevelExcludes","nodeModulesReadOptions","concat","baseCacheKey","JSON","stringify","excludes","key","value","isRegExp","flags","makeCacheKey","dotMeteorIgnoreFiles","depth","inNodeModules","cacheKey","absDir","ignore","readOptions","difference","subdirectories","keys","ignoreDir","removeIgnoredFilesFrom","array","target","item","pathRelative","startsWith","ignores","nodeModulesDir","subdir","test","withCache","assetDir","assetDirs","isEqual","shift","substr","assetsAndSubdirs","normalize","containsPlugins","getDependencyMetadata","ret","_computeDependencyMetadata","logError","getPackagesToLoadFirst","packageMap","processUse","weak","unordered","isIsobuildFeaturePackage","packageInfo","getInfo","info","spec","parsedSpec","getExports","exp","arches","processReadme","assertInJob","fullReadme","readFile","err","errorMessage","contents","sha256","dependencies","allConstraints","failed","implied","skipWeak","skipUnordered","references","d","reference","withoutSpecificOs","partial","constraints","uniq","displayName"],"mappings":"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","file":"tools/isobuild/package-source.js.map","sourcesContent":["var _ = require('underscore');\nvar sourcemap = require('source-map');\n\nvar files = require('../fs/files.js');\nvar utils = require('../utils/utils.js');\nvar watch = require('../fs/watch.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar meteorNpm = require('./meteor-npm.js');\nimport Builder from './builder.js';\nvar archinfo = require('../utils/archinfo.js');\nvar catalog = require('../packaging/catalog/catalog.js');\nvar packageVersionParser = require('../packaging/package-version-parser.js');\nvar compiler = require('./compiler.js');\nvar Profile = require('../tool-env/profile.js').Profile;\n\nimport SourceArch from './source-arch.js';\nimport { PackageNamespace } from \"./package-namespace.js\";\nimport { PackageNpm } from \"./package-npm.js\";\nimport { PackageCordova } from \"./package-cordova.js\";\nimport { PackageAPI } from \"./package-api.js\";\n\nimport {\n  TEST_FILENAME_REGEXPS,\n  APP_TEST_FILENAME_REGEXPS,\n  isTestFilePath } from './test-files.js';\n\nimport {\n  convert as convertColonsInPath\n} from '../utils/colon-converter.js';\n\nimport {\n  optimisticReadFile,\n  optimisticHashOrNull,\n  optimisticStatOrNull,\n  optimisticReadMeteorIgnore,\n} from \"../fs/optimistic.js\";\n\n// XXX: This is a medium-term hack, to avoid having the user set a package name\n// & test-name in package.describe. We will change this in the new control file\n// world in some way.\nvar AUTO_TEST_PREFIX = \"local-test:\";\nvar isTestName = function (name) {\n  var nameStart = name.slice(0, AUTO_TEST_PREFIX.length);\n  return nameStart === AUTO_TEST_PREFIX;\n};\nvar genTestName = function (name) {\n  return AUTO_TEST_PREFIX + name;\n};\n\n// Returns a sort comparator to order files into load order.\nvar loadOrderSort = function (sourceProcessorSet, arch) {\n  const isTemplate = _.memoize((filename) => {\n    const classification = sourceProcessorSet.classifyFilename(filename, arch);\n    switch (classification.type) {\n    case 'extension':\n    case 'filename':\n      if (! classification.sourceProcessors) {\n        // This is *.js, not a template. #HardcodeJs\n        return false;\n      }\n      if (classification.sourceProcessors.length > 1) {\n        throw Error(\"conflicts in compiler?\");\n      }\n      return classification.sourceProcessors[0].isTemplate;\n\n    case 'legacy-handler':\n      return classification.legacyIsTemplate;\n\n    case 'wrong-arch':\n    case 'unmatched':\n    case 'meteor-ignore':\n      return false;\n\n    default:\n      throw Error(`surprising type ${classification.type} for ${filename}`);\n    }\n  });\n\n  return function (a, b) {\n    // XXX MODERATELY SIZED HACK --\n    // push template files ahead of everything else. this is\n    // important because the user wants to be able to say\n    //   Template.foo.events = { ... }\n    // in a JS file and not have to worry about ordering it\n    // before the corresponding .html file.\n    //\n    // maybe all of the templates should go in one file?\n    var isTemplate_a = isTemplate(files.pathBasename(a));\n    var isTemplate_b = isTemplate(files.pathBasename(b));\n    if (isTemplate_a !== isTemplate_b) {\n      return (isTemplate_a ? -1 : 1);\n    }\n\n    // main.* loaded last\n    var ismain_a = (files.pathBasename(a).indexOf('main.') === 0);\n    var ismain_b = (files.pathBasename(b).indexOf('main.') === 0);\n    if (ismain_a !== ismain_b) {\n      return (ismain_a ? 1 : -1);\n    }\n\n    // /lib/ loaded first\n    var islib_a = (a.indexOf(files.pathSep + 'lib' + files.pathSep) !== -1 ||\n                   a.indexOf('lib' + files.pathSep) === 0);\n    var islib_b = (b.indexOf(files.pathSep + 'lib' + files.pathSep) !== -1 ||\n                   b.indexOf('lib' + files.pathSep) === 0);\n    if (islib_a !== islib_b) {\n      return (islib_a ? -1 : 1);\n    }\n\n    var a_parts = a.split(files.pathSep);\n    var b_parts = b.split(files.pathSep);\n\n    // deeper paths loaded first.\n    var len_a = a_parts.length;\n    var len_b = b_parts.length;\n    if (len_a < len_b) {\n      return 1;\n    }\n    if (len_b < len_a) {\n      return -1;\n    }\n\n    // Otherwise compare path components lexicographically.\n    for (var i = 0; i < len_a; ++i) {\n      var a_part = a_parts[i];\n      var b_part = b_parts[i];\n      if (a_part < b_part) {\n        return -1;\n      }\n      if (b_part < a_part) {\n        return 1;\n      }\n    }\n\n    // Never reached unless there are somehow duplicate paths.\n    return 0;\n  };\n};\n\nvar splitConstraint = function (c) {\n  // XXX print error better (w/ buildmessage?)?\n  var parsed = utils.parsePackageConstraint(c);\n  return { package: parsed.package,\n           constraint: parsed.constraintString || null };\n};\n\n// Given the text of a README.md file, excerpts the text between the first and\n// second heading.\n//\n// Specifically - if there is text between the document name, and the first\n// subheading, it will take that text. If there is no text there, and only text\n// after the first subheading, it will take that text. It won't look any deeper\n// than that (in case the user intentionally wants to leave the section blank\n// for some reason). Skips lines that start with an exclamation point.\nvar getExcerptFromReadme = function (text) {\n  // Don't waste time parsing if the document is empty.\n  if (! text) {\n    return \"\";\n  }\n\n  // Split into lines with Commonmark.\n  var commonmark = require('commonmark');\n  var reader = new commonmark.DocParser();\n  var parsed = reader.parse(text);\n\n  // Commonmark will parse the Markdown into an array of nodes. These are the\n  // nodes that represent the text between the first and second heading.\n  var relevantNodes = [];\n\n  // Go through the document until we get the nodes that we are looking for,\n  // then stop.\n  _.any(parsed.children, function (child) {\n    var isHeader = (child.t === \"Header\");\n    // Don't excerpt anything before the first header.\n    if (! isHeader) {\n      // If we are currently in the middle of excerpting, continue doing that\n      // until we hit hit a header (and this is not a header). Otherwise, if\n      // this is text, we should begin to excerpt it.\n      relevantNodes.push(child);\n    } else if (! _.isEmpty(relevantNodes) && isHeader) {\n      // We have been excerpting, and came across a header. That means\n      // that we are done.\n      return true;\n    }\n    return false;\n  });\n\n  // If we have not found anything, we are done.\n  if (_.isEmpty(relevantNodes)) {\n    return \"\";\n  }\n\n  // For now, we will do the simple thing of just taking the raw markdown from\n  // the start of the excerpt to the end.\n  var textLines = text.split(\"\\n\");\n  var start = relevantNodes[0].start_line - 1;\n  var stop = _.last(relevantNodes).end_line;\n  // XXX: There is a bug in commonmark that happens when processing the last\n  // node in the document. Here is the github issue:\n  // https://github.com/jgm/CommonMark/issues/276\n  // Remove this workaround when the issue is fixed.\n  if (stop === _.last(parsed.children).end_line) {\n    stop++;\n  }\n  var excerpt = textLines.slice(start, stop).join(\"\\n\");\n\n  // Strip the preceeding and trailing new lines.\n  return excerpt.replace(/^\\n+|\\n+$/g, \"\");\n};\n\nclass SymlinkLoopChecker {\n  constructor(sourceRoot) {\n    this.sourceRoot = sourceRoot;\n    this._seenPaths = {};\n  }\n\n  check(relDir, quietly = true) {\n    const absPath = files.pathJoin(this.sourceRoot, relDir);\n\n    try {\n      var realPath = files.realpath(absPath);\n    } catch (e) {\n      if (!e || e.code !== 'ELOOP') {\n        throw e;\n      }\n      // else leave realPath undefined\n    }\n\n    if (! realPath || _.has(this._seenPaths, realPath)) {\n      if (! quietly) {\n        buildmessage.error(\"Symlink cycle detected at \" + relDir);\n      }\n\n      return true;\n    }\n\n    this._seenPaths[realPath] = true;\n\n    return false;\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// PackageSource\n///////////////////////////////////////////////////////////////////////////////\n\nvar PackageSource = function () {\n  var self = this;\n\n  // The name of the package, or null for an app pseudo-package or\n  // collection. The package's exports will reside in Package.<name>.\n  // When it is null it is linked like an application instead of like\n  // a package.\n  self.name = null;\n\n  // The path relative to which all source file paths are interpreted\n  // in this package. Also used to compute the location of the\n  // package's .npm directory (npm shrinkwrap state).\n  self.sourceRoot = null;\n\n  // Path that will be prepended to the URLs of all resources emitted\n  // by this package (assuming they don't end up getting\n  // concatenated). For non-web targets, the only effect this will\n  // have is to change the actual on-disk paths of the files in the\n  // bundle, for those that care to open up the bundle and look (but\n  // it's still nice to get it right).\n  self.serveRoot = null;\n\n  // Package metadata. Keys are 'summary', 'git' and 'documentation'. Currently\n  // all of these are optional.\n  self.metadata = {};\n  self.docsExplicitlyProvided = false;\n\n  // Package version as a meteor-version string. Optional; not all packages\n  // (for example, the app) have versions.\n  // XXX when we have names, maybe we want to say that all packages\n  // with names have versions? certainly the reverse is true\n  self.version = null;\n  self.versionExplicitlyProvided = false;\n\n  // Available architectures of this package. Array of SourceArch.\n  self.architectures = [];\n\n  // The information necessary to build the plugins in this\n  // package. Map from plugin name to object with keys 'name', 'use',\n  // 'sources', and 'npmDependencies'.\n  self.pluginInfo = {};\n\n  // Analogous to watchSet in SourceArch but for plugins. At this\n  // stage will typically contain just 'package.js'.\n  self.pluginWatchSet = new watch.WatchSet;\n\n  // npm packages used by this package (on os.* architectures only).\n  // Map from npm package name to the required version of the package\n  // as a string.\n  self.npmDependencies = {};\n\n  // Files to be stripped from the installed NPM dependency tree. See the\n  // Npm.strip comment below for further usage information.\n  self.npmDiscards = null;\n\n  // Absolute path to a directory on disk that serves as a cache for\n  // the npm dependencies, so we don't have to fetch them on every\n  // build. Required not just if we have npmDependencies, but if we\n  // ever could have had them in the past.\n  self.npmCacheDirectory = null;\n\n  // cordova plugins used by this package (on os.* architectures only).\n  // Map from cordova plugin name to the required version of the package\n  // as a string.\n  self.cordovaDependencies = {};\n\n  // If this package has a corresponding test package (for example,\n  // underscore-test), defined in the same package.js file, store its value\n  // here.\n  self.testName = null;\n\n  // Test packages are dealt with differently in the linker (and not published\n  // to the catalog), so we need to keep track of them.\n  self.isTest = false;\n\n  // Some packages belong to a test framework and should never be bundled into\n  // production. A package with this flag should not be picked up by the bundler\n  // for production builds.\n  self.debugOnly = false;\n\n  // A package marked prodOnly is ONLY picked up by the bundler for production\n  // builds.\n  self.prodOnly = false;\n\n  // A package marked testOnly is ONLY picked up by the bundler as\n  // part of the `meteor test` command.\n  self.testOnly = false;\n\n  // If this is set, we will take the currently running git checkout and bundle\n  // the meteor tool from it inside this package as a tool. We will include\n  // built copies of all known isopackets.\n  self.includeTool = false;\n\n  // Is this a core package? Core packages don't record version files, because\n  // core packages are only ever run from checkout. For the preview release,\n  // core packages do not need to specify their versions at publication (since\n  // there isn't likely to be any exciting version skew yet), but we will\n  // specify the correct restrictions at 0.90.\n  // XXX: 0.90 package versions.\n  self.isCore = false;\n};\n\n\n_.extend(PackageSource.prototype, {\n  // Make a dummy (empty) packageSource that contains nothing of interest.\n  // XXX: Do we need this\n  initEmpty: function (name) {\n    var self = this;\n    self.name = name;\n  },\n\n  // Programmatically initialize a PackageSource from scratch.\n  //\n  // Unlike user-facing methods of creating a package\n  // (initFromPackageDir, initFromAppDir) this does not implicitly add\n  // a dependency on the 'meteor' package. If you want such a\n  // dependency then you must add it yourself.\n  //\n  // If called inside a buildmessage job, it will keep going if things\n  // go wrong. Be sure to call jobHasMessages to see if it actually\n  // succeeded.\n  //\n  // The architecture is hardcoded to be \"os\".\n  //\n  // Note that this does not set a version on the package!\n  //\n  // Options:\n  // - sourceRoot (required if sources present)\n  // - serveRoot (required if sources present)\n  // - use\n  // - sources (array of paths or relPath/fileOptions objects), note that this\n  // doesn't support assets at this time. If you want to pass assets here, you\n  // should add a new option to this function called `assets`.\n  // - npmDependencies\n  // - cordovaDependencies\n  // - npmDir\n  // - localNodeModulesDirs\n  initFromOptions: function (name, options) {\n    var self = this;\n    self.name = name;\n\n    if (options.sources && ! _.isEmpty(options.sources) &&\n        (! options.sourceRoot || ! options.serveRoot)) {\n      throw new Error(\"When source files are given, sourceRoot and \" +\n                      \"serveRoot must be specified\");\n    }\n\n    // sourceRoot is a relative file system path, one slash identifies a root\n    // relative to some starting location\n    self.sourceRoot = options.sourceRoot || files.pathSep;\n    // serveRoot is actually a part of a url path, root here is a forward slash\n    self.serveRoot = options.serveRoot || '/';\n\n    utils.ensureOnlyValidVersions(options.npmDependencies, {forCordova: false});\n    self.npmDependencies = options.npmDependencies;\n\n    // If options.npmDir is a string, make sure it contains no colons.\n    self.npmCacheDirectory = _.isString(options.npmDir)\n      ? convertColonsInPath(options.npmDir)\n      : options.npmDir;\n\n    utils.ensureOnlyValidVersions(options.cordovaDependencies, {forCordova: true});\n    self.cordovaDependencies = options.cordovaDependencies;\n\n    const sources = options.sources.map((source) => {\n      if (typeof source === \"string\") {\n        return {\n          relPath: source\n        };\n      }\n\n      return source;\n    });\n\n    const sourceArch = new SourceArch(self, {\n      kind: options.kind,\n      arch: \"os\",\n      sourceRoot: self.sourceRoot,\n      uses: _.map(options.use, splitConstraint),\n      getFiles() {\n        return {\n          sources: sources\n        }\n      }\n    });\n\n    if (options.localNodeModulesDirs) {\n      _.extend(sourceArch.localNodeModulesDirs,\n               options.localNodeModulesDirs);\n    }\n\n    self.architectures.push(sourceArch);\n\n    if (! self._checkCrossUnibuildVersionConstraints()) {\n      throw new Error(\"only one unibuild, so how can consistency check fail?\");\n    }\n  },\n\n  // Initialize a PackageSource from a package.js-style package directory. Uses\n  // the name field provided and the name/test fields in the package.js file to\n  // figre out if this is a test package (load from onTest) or a use package\n  // (load from onUse).\n  //\n  // name: name of the package.\n  // dir: location of directory on disk.\n  // options:\n  // - name: override the name of this package with a different name.\n  // - buildingIsopackets: true if this is being scanned in the process\n  //   of building isopackets\n  initFromPackageDir: Profile(\"PackageSource#initFromPackageDir\", function (dir, options) {\n    var self = this;\n    buildmessage.assertInCapture();\n    var isPortable = true;\n    options = options || {};\n    var initFromPackageDirOptions = options;\n\n    // If we know what package we are initializing, we pass in a\n    // name. Otherwise, we are intializing the base package specified by 'name:'\n    // field in Package.Describe. In that case, it is clearly not a test\n    // package. (Though we could be initializing a specific package without it\n    // being a test, for a variety of reasons).\n    if (options.name) {\n      self.isTest = isTestName(options.name);\n      self.name = options.name;\n    }\n\n    // Give the package a default version. We do not set\n    // versionExplicitlyProvided unless the package configuration file actually\n    // sets a version.\n    self.version = \"0.0.0\";\n\n    // To make the transition to using README.md files in Isobuild easier, we\n    // initialize the documentation directory to README.md by default.\n    self.metadata.documentation = \"README.md\";\n\n    self.sourceRoot = dir;\n\n    // If we are running from checkout we may be looking at a core package. If\n    // we are, let's remember this for things like not recording version files.\n    if (files.inCheckout()) {\n      var packDir = files.pathJoin(files.getCurrentToolsDir(), 'packages');\n      if (files.pathDirname(self.sourceRoot) === packDir) {\n        self.isCore = true;\n      }\n    }\n    if (! files.exists(self.sourceRoot)) {\n      throw new Error(\"putative package directory \" + dir + \" doesn't exist?\");\n    }\n\n    const packageFileHashes = Object.create(null);\n    const packageJsPath = files.pathJoin(self.sourceRoot, 'package.js');\n    const packageJsCode = optimisticReadFile(packageJsPath);\n    packageFileHashes[packageJsPath] =\n      optimisticHashOrNull(packageJsPath);\n\n    const pkgJsonPath = files.pathJoin(self.sourceRoot, 'package.json');\n    const pkgJsonStat = optimisticStatOrNull(pkgJsonPath);\n    if (pkgJsonStat &&\n        pkgJsonStat.isFile()) {\n      packageFileHashes[pkgJsonPath] =\n        optimisticHashOrNull(pkgJsonPath);\n    }\n\n    function watchPackageFiles(watchSet) {\n      _.each(packageFileHashes, (hash, path) => {\n        watchSet.addFile(path, hash);\n      });\n    }\n\n    // Any package that depends on us needs to be rebuilt if our package.js file\n    // changes, because a change to package.js might add or remove a plugin,\n    // which could change a file from being handled by plugin vs treated as\n    // an asset.\n    watchPackageFiles(self.pluginWatchSet);\n\n    /**\n     * @global\n     * @name  Package\n     * @summary The Package object in package.js\n     * @namespace\n     * @locus package.js\n     */\n    const Package = new PackageNamespace(this);\n\n    /**\n     * @namespace Npm\n     * @global\n     * @summary The Npm object in package.js and package source files.\n     */\n    const Npm = new PackageNpm();\n\n    /**\n     * @namespace Cordova\n     * @global\n     * @summary The Cordova object in package.js.\n     */\n    const Cordova = new PackageCordova();\n\n    try {\n      files.runJavaScript(packageJsCode.toString('utf8'), {\n        filename: 'package.js',\n        symbols: { Package, Npm, Cordova }\n      });\n    } catch (e) {\n      buildmessage.exception(e);\n\n      // Could be a syntax error or an exception. Recover by\n      // continuing as if package.js is empty. (Pressing on with\n      // whatever handlers were registered before the exception turns\n      // out to feel pretty disconcerting -- definitely violates the\n      // principle of least surprise.) Leave the metadata if we have\n      // it, though.\n      Package._fileAndDepLoader = null;\n      self.pluginInfo = {};\n      Npm._dependencies = null;\n      Cordova._dependencies = null;\n    }\n\n    // In the past, we did not require a Package.Describe.name field. So, it is\n    // possible that we are initializing a package that doesn't use it and\n    // expects us to be implicit about it.\n    if (!self.name) {\n      // For backwards-compatibility, we will take the package name from the\n      // directory of the package. That was what we used to do: in fact, we used\n      // to only do that.\n      self.name = files.pathBasename(dir);\n    }\n\n    // Check to see if our name is valid.\n\n    try {\n      utils.validatePackageName(self.name);\n    } catch (e) {\n      if (!e.versionParserError) {\n        throw e;\n      }\n      buildmessage.error(e.message);\n      // recover by ignoring\n    }\n\n    // We want the \"debug mode\" to be a property of the *bundle* operation\n    // (turning a set of packages, including the app, into a star), not the\n    // *compile* operation (turning a package source into an isopack). This is\n    // so we don't have to publish two versions of each package. But we have no\n    // way to mark a file in an isopack as being the result of running a plugin\n    // from a debugOnly dependency, and so there is no way to tell which files\n    // to exclude in production mode from a published package. Eventually, we'll\n    // add such a flag to the isopack format, but until then we'll sidestep the\n    // issue by disallowing build plugins in debugOnly packages.\n    if ((self.debugOnly || self.prodOnly || self.testOnly) && !_.isEmpty(self.pluginInfo)) {\n      buildmessage.error(\n        \"can't register build plugins in debugOnly, prodOnly or testOnly packages\");\n      // recover by ignoring\n    }\n\n    // For this old-style, onUse/onTest/where-based package, figure\n    // out its dependencies by calling its on_xxx functions and seeing\n    // what it does.\n    //\n    // We have a simple strategy. Call its on_xxx handler with no\n    // 'where', which is what happens when the package is added\n    // directly to an app, and see what files it adds to the client\n    // and the server. When a package is used, include it in both the client\n    // and the server by default. This simple strategy doesn't capture even\n    // 10% of the complexity possible with onUse, onTest, and where, but\n    // probably is sufficient for virtually all packages that actually\n    // exist in the field, if not every single one. #OldStylePackageSupport\n\n    var api = new PackageAPI({\n      buildingIsopackets: !! initFromPackageDirOptions.buildingIsopackets\n    });\n\n    if (Package._fileAndDepLoader) {\n      try {\n        buildmessage.markBoundary(Package._fileAndDepLoader)(api);\n      } catch (e) {\n        console.log(e.stack); // XXX should we keep this here -- or do we want broken\n                              // packages to fail silently?\n        buildmessage.exception(e);\n\n        // Recover by ignoring all of the source files in the\n        // packages and any remaining handlers. It violates the\n        // principle of least surprise to half-run a handler\n        // and then continue.\n        api.files = {};\n        _.each(compiler.ALL_ARCHES, function (arch) {\n          api.files[arch] = {\n            sources: [],\n            assets: []\n          };\n        });\n\n        Package._fileAndDepLoader = null;\n        self.pluginInfo = {};\n        Npm._dependencies = null;\n        Cordova._dependencies = null;\n      }\n    }\n\n    // By the way, you can't depend on yourself.\n    var doNotDepOnSelf = function (dep) {\n      if (dep.package === self.name) {\n        buildmessage.error(\"Circular dependency found: \"\n                           + self.name +\n                           \" depends on itself.\\n\");\n      }\n    };\n    _.each(compiler.ALL_ARCHES, function (label) {\n      _.each(api.uses[label], doNotDepOnSelf);\n      _.each(api.implies[label], doNotDepOnSelf);\n    });\n\n    // Cause packages that use `prodOnly` to automatically depend on the\n    // `isobuild:prod-only` feature package, which will cause an error\n    // when a package using `prodOnly` is run by a version of the tool\n    // that doesn't support the feature.  The choice of 'os' architecture\n    // is arbitrary, as the version solver combines the dependencies of all\n    // arches.\n    if (self.prodOnly) {\n      api.uses['os'].push({\n        package: 'isobuild:prod-only', constraint: '1.0.0'\n      });\n    }\n\n    // If we have specified some release, then we should go through the\n    // dependencies and fill in the unspecified constraints with the versions in\n    // the releases (if possible).\n    if (!_.isEmpty(api.releaseRecords)) {\n\n      // Given a dependency object with keys package (the name of the package)\n      // and constraint (the version constraint), if the constraint is null,\n      // look in the packages field in the release record and fill in from\n      // there.\n      var setFromRel = function (dep) {\n        if (dep.constraint) {\n          return dep;\n        }\n        var newConstraint = [];\n        _.each(api.releaseRecords, function (releaseRecord) {\n          var packages = releaseRecord.packages;\n          if(_.has(packages, dep.package)) {\n            newConstraint.push(packages[dep.package]);\n          }\n        });\n        if (_.isEmpty(newConstraint)) {\n          return dep;\n        }\n        dep.constraint = _.reduce(newConstraint,\n          function(x, y) {\n            return x + \" || \" + y;\n          });\n        return dep;\n      };\n\n      // For all api.implies and api.uses, fill in the unspecified dependencies from the\n      // release.\n      _.each(compiler.ALL_ARCHES, function (label) {\n        api.uses[label] = _.map(api.uses[label], setFromRel);\n        api.implies[label] = _.map(api.implies[label], setFromRel);\n      });\n     };\n\n    // Make sure that if a dependency was specified in multiple\n    // unibuilds, the constraint is exactly the same.\n    if (! self._checkCrossUnibuildVersionConstraints()) {\n      // A build error was written. Recover by ignoring the\n      // fact that we have differing constraints.\n    }\n\n    // Save information about npm dependencies. To keep metadata\n    // loading inexpensive, we won't actually fetch them until build\n    // time.\n\n    // We used to put the cache directly in .npm, but in linker-land,\n    // the package's own NPM dependencies go in .npm/package and build\n    // plugin X's goes in .npm/plugin/X. Notably, the former is NOT an\n    // ancestor of the latter, so that a build plugin does NOT see the\n    // package's node_modules.  XXX maybe there should be separate NPM\n    // dirs for use vs test?\n    self.npmCacheDirectory =\n      files.pathResolve(files.pathJoin(self.sourceRoot, '.npm', 'package'));\n    self.npmDependencies = Npm._dependencies;\n    self.npmDiscards = Npm._discards;\n\n    self.cordovaDependencies = Cordova._dependencies;\n\n    // Create source architectures, one for the server and one for each web\n    // arch.\n    _.each(compiler.ALL_ARCHES, function (arch) {\n      // Everything depends on the package 'meteor', which sets up\n      // the basic environment) (except 'meteor' itself).\n      if (self.name !== \"meteor\" && !process.env.NO_METEOR_PACKAGE) {\n        // Don't add the dependency if one already exists. This allows the\n        // package to create an unordered dependency and override the one that\n        // we'd add here. This is necessary to resolve the circular dependency\n        // between meteor and underscore (underscore has an unordered\n        // dependency on meteor dating from when the .js extension handler was\n        // in the \"meteor\" package).\n        var alreadyDependsOnMeteor =\n              !! _.find(api.uses[arch], function (u) {\n                return u.package === \"meteor\";\n              });\n        if (! alreadyDependsOnMeteor) {\n          api.uses[arch].unshift({ package: \"meteor\" });\n        }\n      }\n\n      // Each unibuild has its own separate WatchSet. This is so that, eg, a test\n      // unibuild's dependencies doesn't end up getting merged into the\n      // pluginWatchSet of a package that uses it: only the use unibuild's\n      // dependencies need to go there!\n      var watchSet = new watch.WatchSet();\n      watchPackageFiles(watchSet);\n\n      self.architectures.push(new SourceArch(self, {\n        kind: \"main\",\n        arch: arch,\n        sourceRoot: self.sourceRoot,\n        uses: api.uses[arch],\n        implies: api.implies[arch],\n        getFiles(sourceProcessorSet, watchSet) {\n          const result = api.files[arch];\n          const relPathToSourceObj = {};\n          const sources = result.sources;\n\n          // Files explicitly passed to api.addFiles remain at the\n          // beginning of api.files[arch].sources in their given order.\n          sources.forEach(sourceObj => {\n            relPathToSourceObj[sourceObj.relPath] = sourceObj;\n          });\n\n          self._findSources({\n            sourceProcessorSet,\n            watchSet,\n            sourceArch: this,\n            isApp: false\n          }).forEach(relPath => {\n            if (! _.has(relPathToSourceObj, relPath)) {\n              const fileOptions = self._inferFileOptions(relPath, {\n                arch,\n                isApp: false,\n              });\n\n              // Since this file was not explicitly added with\n              // api.addFiles, it should not be evaluated eagerly.\n              fileOptions.lazy = true;\n\n              sources.push(relPathToSourceObj[relPath] = {\n                relPath,\n                fileOptions,\n              });\n            }\n          });\n\n          return result;\n        },\n        declaredExports: api.exports[arch],\n        watchSet: watchSet\n      }));\n    });\n\n    // Serve root of the package.\n    self.serveRoot = files.pathJoin('/packages/', self.name);\n\n    // Name of the test.\n    if (Package._hasTests) {\n      self.testName = genTestName(self.name);\n    }\n  }),\n\n  _readAndWatchDirectory(relDir, watchSet, {include, exclude, names}) {\n    return watch.readAndWatchDirectory(watchSet, {\n      absPath: files.pathJoin(this.sourceRoot, relDir),\n      include, exclude, names\n    }).map(name => files.pathJoin(relDir, name));\n  },\n\n  // Initialize a package from an application directory (has .meteor/packages).\n  initFromAppDir: Profile(\"initFromAppDir\", function (projectContext, ignoreFiles) {\n    var self = this;\n    var appDir = projectContext.projectDir;\n    self.name = null;\n    self.sourceRoot = appDir;\n    self.serveRoot = '/';\n\n    // Determine used packages. Note that these are the same for all arches,\n    // because there's no way to specify otherwise in .meteor/packages.\n    var uses = [];\n    projectContext.projectConstraintsFile.eachConstraint(function (constraint) {\n      uses.push({ package: constraint.package,\n                  constraint: constraint.constraintString });\n    });\n\n    var projectWatchSet = projectContext.getProjectWatchSet();\n\n    _.each(compiler.ALL_ARCHES, function (arch) {\n      // We don't need to build a Cordova SourceArch if there are no Cordova\n      // platforms.\n      if (arch === 'web.cordova' &&\n          _.isEmpty(projectContext.platformList.getCordovaPlatforms())) {\n        return;\n      }\n\n      // XXX what about /web.browser/* etc, these directories could also\n      // be for specific client targets.\n\n      // Create unibuild\n      var sourceArch = new SourceArch(self, {\n        kind: 'app',\n        arch: arch,\n        sourceRoot: self.sourceRoot,\n        uses: uses,\n        getFiles(sourceProcessorSet, watchSet) {\n          sourceProcessorSet.watchSet = watchSet;\n\n          const findOptions = {\n            sourceProcessorSet,\n            watchSet,\n            sourceArch: this,\n            ignoreFiles,\n            isApp: true,\n            loopChecker: new SymlinkLoopChecker(self.sourceRoot)\n          };\n\n          return {\n            sources: self._findSources(findOptions).sort(\n              loadOrderSort(sourceProcessorSet, arch)\n            ).map(relPath => {\n              return {\n                relPath,\n                fileOptions: self._inferFileOptions(relPath, {\n                  arch,\n                  isApp: true,\n                }),\n              };\n            }),\n\n            assets: self._findAssets(findOptions),\n          };\n        }\n      });\n\n      const origAppDir = projectContext.getOriginalAppDirForTestPackages();\n\n      const origNodeModulesDir = origAppDir &&\n        files.pathJoin(origAppDir, \"node_modules\");\n\n      const origNodeModulesStat = origNodeModulesDir &&\n        files.statOrNull(origNodeModulesDir);\n\n      if (origNodeModulesStat &&\n          origNodeModulesStat.isDirectory()) {\n        sourceArch.localNodeModulesDirs[\"node_modules\"] = {\n          // Override these properties when calling\n          // addNodeModulesDirectory in compileUnibuild.\n          sourceRoot: origAppDir,\n          sourcePath: origNodeModulesDir,\n          local: false,\n        };\n      }\n\n      self.architectures.push(sourceArch);\n\n      // sourceArch's WatchSet should include all the project metadata files\n      // read by the ProjectContext.\n      sourceArch.watchSet.merge(projectWatchSet);\n    });\n\n    if (! self._checkCrossUnibuildVersionConstraints()) {\n      // should never happen since we created the unibuilds from\n      // .meteor/packages, which doesn't have a way to express\n      // different constraints for different unibuilds\n      throw new Error(\"conflicting constraints in a package?\");\n    }\n  }),\n\n  _inferFileOptions(relPath, {arch, isApp}) {\n    const fileOptions = {};\n    const isTest = global.testCommandMetadata\n      && global.testCommandMetadata.isTest;\n    const isAppTest = global.testCommandMetadata\n      && global.testCommandMetadata.isAppTest;\n    const isTestFile = (isTest || isAppTest) && isTestFilePath(relPath);\n\n    // If running in test mode (`meteor test`), all files other than\n    // test files should be loaded lazily.\n    if (isTest && !isTestFile) {\n      fileOptions.lazy = true;\n    }\n\n    const dirs = files.pathDirname(relPath).split(files.pathSep);\n\n    for (var i = 0; i < dirs.length; ++i) {\n      let dir = dirs[i];\n\n      if (dir === \"node_modules\") {\n        fileOptions.lazy = true;\n        fileOptions.transpile = false;\n\n        // Return immediately so that we don't apply special meanings to\n        // client or server directories inside node_modules directories.\n        return fileOptions;\n      }\n\n      // Files in `imports/` should be lazily loaded *apart* from tests\n      if (isApp && dir === \"imports\" && !isTestFile) {\n        fileOptions.lazy = true;\n      }\n\n      // If the file is restricted to the opposite architecture, make sure\n      // it is not evaluated eagerly.\n      if (archinfo.matches(arch, \"os\")) {\n        if (dir === \"client\") {\n          fileOptions.lazy = true;\n        }\n      } else if (dir === \"server\") {\n        fileOptions.lazy = true;\n      }\n\n      // Special case: in app code on the client, JavaScript files in a\n      // `client/compatibility` directory don't get wrapped in a closure.\n      if (i > 0 &&\n          dirs[i - 1] === \"client\" &&\n          dir === \"compatibility\" &&\n          isApp && // Skip this check for packages.\n          archinfo.matches(arch, \"web\") &&\n          relPath.endsWith(\".js\")) {\n        fileOptions.bare = true;\n      }\n    }\n\n    return fileOptions;\n  },\n\n  // This cache survives for the duration of the process, and stores the\n  // complete list of source files for directories within node_modules.\n  _findSourcesCache: Object.create(null),\n\n  _findSources({\n    sourceProcessorSet,\n    watchSet,\n    isApp,\n    sourceArch,\n    loopChecker = new SymlinkLoopChecker(this.sourceRoot),\n    ignoreFiles = []\n  }) {\n    const self = this;\n    const arch = sourceArch.arch;\n    const sourceReadOptions =\n      sourceProcessorSet.appReadDirectoryOptions(arch);\n\n    // Adding, removing, or modifying a .meteorignore file should trigger\n    // a rebuild with the new rules applied.\n    sourceReadOptions.names.push(\".meteorignore\");\n\n    // Ignore files starting with dot (unless they are explicitly in\n    // sourceReadOptions.names, e.g. .meteorignore, added above).\n    sourceReadOptions.exclude.push(/^\\./);\n\n    // Ignore the usual ignorable files.\n    sourceReadOptions.exclude.push(...ignoreFiles);\n\n    // Unless we're running tests, ignore all test filenames and if we are, ignore the\n    // type of file we *aren't* running\n    if (!global.testCommandMetadata || global.testCommandMetadata.isTest) {\n      Array.prototype.push.apply(sourceReadOptions.exclude, APP_TEST_FILENAME_REGEXPS);\n    }\n    if (!global.testCommandMetadata || global.testCommandMetadata.isAppTest) {\n      Array.prototype.push.apply(sourceReadOptions.exclude, TEST_FILENAME_REGEXPS);\n    }\n\n    // Read top-level source files, excluding control files that were not\n    // explicitly included.\n    const controlFiles = ['mobile-config.js'];\n\n    if (! isApp) {\n      controlFiles.push('package.js');\n    }\n\n    const anyLevelExcludes = [\n      /^tests\\/$/,\n      archinfo.matches(arch, \"os\")\n        ? /^client\\/$/\n        : /^server\\/$/,\n      ...sourceReadOptions.exclude,\n    ];\n\n    const topLevelExcludes = isApp ? [\n      ...anyLevelExcludes,\n      /^packages\\/$/,\n      /^programs\\/$/,\n      /^public\\/$/, /^private\\/$/,\n      /^cordova-build-override\\/$/,\n      /^acceptance-tests\\/$/,\n    ] : anyLevelExcludes;\n\n    const nodeModulesReadOptions = {\n      ...sourceReadOptions,\n      // When we're in a node_modules directory, we can avoid collecting\n      // .js and .json files, because (unlike .less or .coffee files) they\n      // are allowed to be imported later by the ImportScanner, as they do\n      // not require custom processing by compiler plugins.\n      exclude: sourceReadOptions.exclude.concat(/\\.js(on)?$/i),\n    };\n\n    const baseCacheKey = JSON.stringify({\n      isApp,\n      arch,\n      sourceRoot: self.sourceRoot,\n      excludes: anyLevelExcludes,\n    }, (key, value) => {\n      if (_.isRegExp(value)) {\n        return [value.source, value.flags];\n      }\n      return value;\n    });\n\n    function makeCacheKey(dir) {\n      return baseCacheKey + \"\\0\" + dir;\n    }\n\n    const dotMeteorIgnoreFiles = Object.create(null);\n\n    function find(dir, depth, inNodeModules) {\n      // Remove trailing slash.\n      dir = dir.replace(/\\/$/, \"\");\n\n      // If we're in a node_modules directory, cache the results of the\n      // find function for the duration of the process.\n      const cacheKey = inNodeModules && makeCacheKey(dir);\n      if (cacheKey &&\n          cacheKey in self._findSourcesCache) {\n        return self._findSourcesCache[cacheKey];\n      }\n\n      if (loopChecker.check(dir)) {\n        // Pretend we found no files.\n        return [];\n      }\n\n      const absDir = files.pathJoin(self.sourceRoot, dir);\n      if (! inNodeModules) {\n        const ignore = optimisticReadMeteorIgnore(absDir);\n        if (ignore) {\n          dotMeteorIgnoreFiles[dir] = ignore;\n        }\n      }\n\n      const readOptions = inNodeModules\n        ? nodeModulesReadOptions\n        : sourceReadOptions;\n\n      const sources = _.difference(\n        self._readAndWatchDirectory(dir, watchSet, readOptions),\n        depth > 0 ? [] : controlFiles\n      );\n\n      const subdirectories = self._readAndWatchDirectory(dir, watchSet, {\n        include: [/\\/$/],\n        exclude: depth > 0\n          ? anyLevelExcludes\n          : topLevelExcludes\n      });\n\n      Object.keys(dotMeteorIgnoreFiles).forEach(ignoreDir => {\n        const ignore = dotMeteorIgnoreFiles[ignoreDir];\n\n        function removeIgnoredFilesFrom(array) {\n          let target = 0;\n\n          array.forEach(item => {\n            let relPath = files.pathRelative(ignoreDir, item);\n\n            if (! relPath.startsWith(\"..\")) {\n              if (item.endsWith(\"/\")) {\n                // The trailing slash is discarded by files.pathRelative.\n                relPath += \"/\";\n              }\n\n              if (ignore.ignores(relPath)) {\n                return;\n              }\n            }\n\n            array[target++] = item;\n          });\n\n          array.length = target;\n        }\n\n        removeIgnoredFilesFrom(sources);\n        removeIgnoredFilesFrom(subdirectories);\n      });\n\n      let nodeModulesDir;\n\n      subdirectories.forEach(subdir => {\n        if (/(^|\\/)node_modules\\/$/.test(subdir)) {\n          if (! inNodeModules) {\n            sourceArch.localNodeModulesDirs[subdir] = true;\n          }\n\n          // Defer handling node_modules until after we handle all other\n          // subdirectories, so that we know whether we need to descend\n          // further. If sources is still empty after we handle everything\n          // else in dir, then nothing in this node_modules subdir can be\n          // imported by anthing outside of it, so we can ignore it.\n          nodeModulesDir = subdir;\n\n        } else {\n          sources.push(...find(subdir, depth + 1, inNodeModules));\n        }\n      });\n\n      // Don't apply any .meteorignore rules to files inside node_modules.\n      delete dotMeteorIgnoreFiles[dir];\n\n      if (isApp &&\n          nodeModulesDir &&\n          (! inNodeModules || sources.length > 0)) {\n        // If we found a node_modules subdirectory above, and either we\n        // are not already inside another node_modules directory or we\n        // found source files elsewhere in this directory or its other\n        // subdirectories, and we're building an app (as opposed to a\n        // Meteor package), continue searching this node_modules\n        // directory, so that any non-.js(on) files it contains can be\n        // imported by the app (#6037).\n        sources.push(...find(nodeModulesDir, depth + 1, true));\n      }\n\n      if (cacheKey) {\n        self._findSourcesCache[cacheKey] = sources;\n      }\n\n      return sources;\n    }\n\n    return files.withCache(() => find(\"\", 0, false));\n  },\n\n  _findAssets({\n    sourceProcessorSet,\n    watchSet,\n    isApp,\n    sourceArch,\n    loopChecker = new SymlinkLoopChecker(this.sourceRoot),\n    ignoreFiles = [],\n  }) {\n    // Now look for assets for this unibuild.\n    const arch = sourceArch.arch;\n    const assetDir = archinfo.matches(arch, \"web\") ? \"public/\" : \"private/\";\n    var assetDirs = this._readAndWatchDirectory('', watchSet, {\n      names: [assetDir]\n    });\n\n    const assets = [];\n\n    if (!_.isEmpty(assetDirs)) {\n      if (!_.isEqual(assetDirs, [assetDir])) {\n        throw new Error(\"Surprising assetDirs: \" + JSON.stringify(assetDirs));\n      }\n\n      while (!_.isEmpty(assetDirs)) {\n        dir = assetDirs.shift();\n        // remove trailing slash\n        dir = dir.substr(0, dir.length - 1);\n\n        if (loopChecker.check(dir)) {\n          // pretend we found no files\n          return [];\n        }\n\n        // Find asset files in this directory.\n        var assetsAndSubdirs = this._readAndWatchDirectory(dir, watchSet, {\n          include: [/.?/],\n          // we DO look under dot directories here\n          exclude: ignoreFiles\n        });\n\n        _.each(assetsAndSubdirs, function (item) {\n          if (item[item.length - 1] === '/') {\n            // Recurse on this directory.\n            assetDirs.push(item);\n          } else {\n            // This file is an asset. Make sure filenames are Unicode\n            // normalized.\n            assets.push({\n              relPath: item.normalize('NFC')\n            });\n          }\n        });\n      }\n    }\n\n    return assets;\n  },\n\n  // True if the package defines any plugins.\n  containsPlugins: function () {\n    var self = this;\n    return ! _.isEmpty(self.pluginInfo);\n  },\n\n  // Return dependency metadata for all unibuilds, in the format needed\n  // by the package catalog.\n  //\n  // This *DOES* include isobuild:* pseudo-packages!\n  //\n  // Options:\n  // - logError: if true, if something goes wrong, log a buildmessage\n  //   and return null rather than throwing an exception.\n  // - skipWeak: omit weak dependencies\n  // - skipUnordered: omit unordered dependencies\n  getDependencyMetadata: function (options) {\n    var self = this;\n    options = options || {};\n    var ret = self._computeDependencyMetadata(options);\n    if (! ret) {\n      if (options.logError) {\n        return null;\n      } else {\n        throw new Error(\"inconsistent dependency constraint across unibuilds?\");\n      }\n    }\n    return ret;\n  },\n\n  // Returns a list of package names which should be loaded before building this\n  // package. This is all the packages that we directly depend on in a unibuild\n  // or from a plugin.\n  //\n  // (It's possible that we could do something slightly fancier where we only\n  // need to load those dependencies (including implied dependencies) which we\n  // know contain plugins first, plus the transitive closure of all the packages\n  // we depend on which contain a plugin. This seems good enough, though.)\n  //\n  // Note that this method filters out isobuild:* pseudo-packages, so it is NOT\n  // to be used to create input to Version Solver (see\n  // _computeDependencyMetadata for that).\n  //\n  // Note also that \"load\" here specifically means \"load into the IsopackCache\n  // at build time\", not \"load into a running Meteor app at run\n  // time\". Specifically, weak constraints do create a run-time load order\n  // dependency (if the package is in the app at all) but they do not create a\n  // build-time IsopackCache load order dependency (because weak dependencies do\n  // not provide plugins).\n  getPackagesToLoadFirst: function (packageMap) {\n    var self = this;\n    var packages = {};\n    var processUse = function (use) {\n      // We don't have to build weak or unordered deps first (eg they can't\n      // contribute to a plugin).\n      if (use.weak || use.unordered) {\n        return;\n      }\n      // Only include real packages, not isobuild:* pseudo-packages.\n      if (compiler.isIsobuildFeaturePackage(use.package)) {\n        return;\n      }\n\n      var packageInfo = packageMap.getInfo(use.package);\n      if (! packageInfo) {\n        throw Error(\"Depending on unknown package \" + use.package);\n      }\n      packages[use.package] = true;\n    };\n\n    _.each(self.architectures, function (arch) {\n      // We need to iterate over both uses and implies, since implied packages\n      // also constitute dependencies. We don't have to include the dependencies\n      // of implied packages directly here, since their own\n      // getPackagesToLoadFirst will include those.\n      _.each(arch.uses, processUse);\n      _.each(arch.implies, processUse);\n    });\n\n    _.each(self.pluginInfo, function (info) {\n      // info.use is currently just an array of strings, and there's\n      // no way to specify weak/unordered. Much like an app.\n      _.each(info.use, function (spec) {\n        var parsedSpec = splitConstraint(spec);\n        if (! compiler.isIsobuildFeaturePackage(parsedSpec.package)) {\n          packages[parsedSpec.package] = true;\n        }\n      });\n    });\n    return _.keys(packages);\n  },\n\n  // Returns an array of objects, representing this package's public\n  // exports. Each object has the following keys:\n  //  - name: export name (ex: \"Accounts\")\n  //  - arch: an array of strings representing architectures for which this\n  //    export is declared.\n  //\n  // This ignores testOnly exports.\n  getExports: function () {\n    var self = this;\n    var ret = {};\n    // Go over all of the architectures, and aggregate the exports together.\n    _.each(self.architectures, function (arch) {\n      _.each(arch.declaredExports, function (exp) {\n        // Skip testOnly exports -- the flag is intended for use in testing\n        // only, so it is not of any interest outside this package.\n        if (exp.testOnly) {\n          return;\n        }\n        // Add the export to the export map.\n        if (! _.has(ret, exp.name)) {\n          ret[exp.name] = [arch.arch];\n        } else {\n          ret[exp.name].push(arch.arch);\n        }\n     });\n    });\n    return _.map(ret, function (arches, name) {\n      return { name: name, architectures: arches };\n    });\n   },\n\n  // Processes the documentation provided in Package.describe. Returns an object\n  // with the following keys:\n  //   - path: full filepath to the Readme file\n  //   - excerpt: the subsection between the first and second heading of the\n  //     Readme, to be used as a longform package description.\n  //   - hash: hash of the full text of this Readme, or \"\" if the Readme is\n  //     blank.\n  //\n  // Returns null if the documentation is marked as null, or throws a\n  // buildmessage error if the documentation could not be read.\n  //\n  // This function reads and performs string operations on a (potentially) long\n  // file. We do not call it unless we actually need this information.\n  processReadme: function () {\n    var self = this;\n    buildmessage.assertInJob();\n    if (! self.metadata.documentation) {\n      return null;\n    }\n\n    // To ensure atomicity, we want to copy the README to a temporary file.\n    var ret = {};\n    ret.path =\n      files.pathJoin(self.sourceRoot, self.metadata.documentation);\n    // Read in the text of the Readme.\n    try {\n      var fullReadme = files.readFile(ret.path);\n    } catch (err) {\n      var errorMessage = \"\";\n      if (err.code === \"ENOENT\") {\n        // This is the most likely and common case, especially when we are\n        // inferring the docs as a default value.\n        errorMessage = \"Documentation not found: \" + self.metadata.documentation;\n      } else {\n        // This is weird, and we don't usually protect the user from errors like\n        // this, but maybe we should.\n        errorMessage =\n          \"Documentation couldn't be read: \" + self.metadata.documentation + \" \";\n        errorMessage += \"(Error: \" + err.message + \")\";\n      }\n\n      // The user might not understand that we are automatically inferring\n      // README.md as the docs! If they want to avoid pushing anything, explain\n      // how to do that.\n      if (! self.docsExplicitlyProvided) {\n        errorMessage += \"\\n\" +\n          \"If you don't want to publish any documentation, \" +\n          \"please set 'documentation: null' in Package.describe\";\n      }\n      buildmessage.error(errorMessage);\n      // Recover by returning null\n      return null;\n    }\n\n    var text = fullReadme.toString();\n    return {\n      contents: text,\n      hash: utils.sha256(text),\n      excerpt: getExcerptFromReadme(text)\n    };\n  },\n\n  // If dependencies aren't consistent across unibuilds, return false and\n  // also log a buildmessage error if inside a buildmessage job. Else\n  // return true.\n  // XXX: Check that this is used when refactoring is done.\n  _checkCrossUnibuildVersionConstraints: function () {\n    var self = this;\n    return !! self._computeDependencyMetadata({ logError: true });\n  },\n\n  // Compute the return value for getDependencyMetadata, or return\n  // null if there is a dependency that doesn't have the same\n  // constraint across all unibuilds (and, if logError is true, log a\n  // buildmessage error).\n  //\n  // This *DOES* include isobuild:* pseudo-packages!\n  //\n  // For options, see getDependencyMetadata.\n  _computeDependencyMetadata: function (options) {\n    var self = this;\n    options = options || {};\n\n    var dependencies = {};\n    var allConstraints = {}; // for error reporting. package name to array\n    var failed = false;\n\n    _.each(self.architectures, function (arch) {\n      // We need to iterate over both uses and implies, since implied packages\n      // also constitute dependencies.\n      var processUse = function (implied, use) {\n        // We can't really have a weak implies (what does that even mean?) but\n        // we check for that elsewhere.\n        if ((use.weak && options.skipWeak) ||\n            (use.unordered && options.skipUnordered)) {\n          return;\n        }\n\n        if (!_.has(dependencies, use.package)) {\n          dependencies[use.package] = {\n            constraint: null,\n            references: []\n          };\n          allConstraints[use.package] = [];\n        }\n        var d = dependencies[use.package];\n\n        if (use.constraint) {\n          allConstraints[use.package].push(use.constraint);\n\n          if (d.constraint === null) {\n            d.constraint = use.constraint;\n          } else if (d.constraint !== use.constraint) {\n            failed = true;\n          }\n        }\n\n        var reference = {\n          arch: archinfo.withoutSpecificOs(arch.arch)\n        };\n        if (use.weak) {\n          reference.weak = true;\n        }\n        if (use.unordered) {\n          reference.unordered = true;\n        }\n        if (implied) {\n          reference.implied = true;\n        }\n        d.references.push(reference);\n      };\n      _.each(arch.uses, _.partial(processUse, false));\n      _.each(arch.implies, _.partial(processUse, true));\n    });\n\n    _.each(self.pluginInfo, function (info) {\n      _.each(info.use, function (spec) {\n        var parsedSpec = splitConstraint(spec);\n        if (!_.has(dependencies, parsedSpec.package)) {\n          dependencies[parsedSpec.package] = {\n            constraint: null,\n            references: []\n          };\n          allConstraints[parsedSpec.package] = [];\n        }\n        var d = dependencies[parsedSpec.package];\n\n        if (parsedSpec.constraint) {\n          allConstraints[parsedSpec.package].push(parsedSpec.constraint);\n          if (d.constraint === null) {\n            d.constraint = parsedSpec.constraint;\n          } else if (d.constraint !== parsedSpec.constraint) {\n            failed = true;\n          }\n        }\n        d.references.push({arch: 'plugin'});\n      });\n    });\n\n    if (failed && options.logError) {\n      _.each(allConstraints, function (constraints, name) {\n        constraints = _.uniq(constraints);\n        if (constraints.length > 1) {\n          buildmessage.error(\n            \"The version constraint for a dependency must be the same \" +\n              \"at every place it is mentioned in a package. \" +\n              \"'\" + name + \"' is constrained both as \"  +\n              constraints.join(' and ') + \". Change them to match.\");\n          // recover by returning false (the caller had better detect\n          // this and use its own recovery logic)\n        }\n      });\n    }\n\n    return failed ? null : dependencies;\n  },\n\n  displayName() {\n    return this.name === null ? 'the app' : this.name;\n  }\n});\n\nmodule.exports = PackageSource;\n"]}