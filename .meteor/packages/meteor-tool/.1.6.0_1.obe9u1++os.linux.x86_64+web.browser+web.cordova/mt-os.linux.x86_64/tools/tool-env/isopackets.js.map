{"version":3,"sources":["/tools/tool-env/isopackets.js"],"names":["module","export","ISOPACKETS","loadIsopackage","ensureIsopacketsLoadable","makeIsopacketBuildContext","Builder","watch","require","default","v","assert","_","bundler","compiler","isopackCacheModule","buildmessage","files","config","Console","fiberHelpers","packageMapModule","archinfo","Profile","combined","loadedIsopackets","packageName","isopacketName","strictEqual","host","split","isopacket","noYieldsAllowed","has","loadIsopacketFromDisk","Error","isopacketPath","pathJoin","getIsopacketRoot","calledEnsure","inCheckout","each","packages","name","isopacketBuildContext","failedPackageBuild","messages","withProgressDisplayVisible","capture","isopacketRoot","existingBuildinfo","readJSONOrNull","needRebuild","builtBy","BUILT_BY","watchSet","WatchSet","fromJSON","isUpToDate","enterJob","title","isopackCache","buildLocalPackages","jobHasMessages","built","buildJsImage","packageMap","use","builder","outputPath","writeJson","toJSON","image","write","complete","hasMessages","error","printMessages","newIsopacketBuildingCatalog","catalogLocal","isopacketCatalog","LocalCatalog","packagesDir","getCurrentToolsDir","initialize","localPackageSearchDirs","buildingIsopackets","arrowError","context","catalog","versions","getAllPackageNames","getLatestVersion","version","PackageMap","localCatalog","IsopackCache","includeCordovaUnibuild","noLineNumbers","readJsImage","env","__meteor_bootstrap__","startupHooks","__meteor_runtime_config__","meteorRelease","ret","load","length","hook","shift"],"mappings":"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","file":"tools/tool-env/isopackets.js.map","sourcesContent":["var assert = require('assert');\nvar _ = require('underscore');\n\nvar bundler = require('../isobuild/bundler.js');\nimport Builder from '../isobuild/builder.js';\nvar compiler = require('../isobuild/compiler.js');\nvar isopackCacheModule = require('../isobuild/isopack-cache.js');\n\nvar buildmessage = require('../utils/buildmessage.js');\nvar files = require('../fs/files.js');\nvar config = require('../meteor-services/config.js');\nvar watch = require('../fs/watch.js');\nvar Console = require('../console/console.js').Console;\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar packageMapModule = require('../packaging/package-map.js');\nvar archinfo = require('../utils/archinfo.js');\nvar Profile = require('./profile.js').Profile;\n\n// TL;DR: Isopacket is a set of isopacks. Isopackets are used only inside\n// meteor-tool.\n\n// An isopacket is a predefined set of isopackages which the meteor command-line\n// tool can load into its process. This is how we use the DDP client and many\n// other packages inside the tool. The isopackets are listed below in the\n// ISOPACKETS constant.\n//\n// All packages that are in isopackets and all of their transitive dependencies\n// must be part of the core Meteor git checkout (not loaded from troposphere).\n//\n// The requested packages will be loaded together with all of their\n// dependencies. If you request to load the same isopacket more than once, you\n// will efficiently get the same pre-loaded isopacket. On the other hand, two\n// different loaded isopackets contain distinct copies of all of their packages\n// copy of all of the packages. The return value is an object that maps package\n// name to package exports (that is, it is the Package object from inside the\n// sandbox created for the newly loaded packages).\n//\n// For built releases, all of the isopackets are pre-compiled (as JsImages,\n// similar to a plugin or a server program) into the tool.\n//\n// When run from a checkout, all isopackets are re-compiled early in the startup\n// process if any of their sources have changed.\n//\n// Example usage:\n//   var DDP = require('./isopackets.js').loadIsopackage('ddp-client').DDP;\n//   var reverse = DDP.connect('reverse.meteor.com');\n//   Console.info(reverse.call('reverse', 'hello world'));\n\n\n// All of the defined isopackets. Whenever they are being built, they will be\n// built in the order listed here.\nexport const ISOPACKETS = {\n  // These packages used to be divided up into distinct isopackets, but\n  // that resulted in extremely wasteful duplication of transitive\n  // dependencies, so now we have only one isopacket that combines all the\n  // dependencies of every former isopacket.\n  combined: [\n    // ddp\n    'ddp-client',\n    // mongo\n    'npm-mongo',\n    // ejson\n    'ejson',\n    // constraint-solver\n    'constraint-solver',\n    // cordova-support\n    'boilerplate-generator',\n    'webapp-hashing',\n    'xmlbuilder',\n    // cordova-support, logging\n    'logging',\n  ]\n};\n\n// Caches isopackets in memory (each isopacket only needs to be loaded\n// once).  This is a map from isopacket name to either:\n//\n//  - The 'Package' dictionary, if the isopacket has already been loaded\n//    into memory\n//  - null, if the isopacket hasn't been loaded into memory but its on-disk\n//    instance is known to be ready\n//\n// The subtlety here is that when running from a checkout, we don't want to\n// accidentally load an isopacket before ensuring that it doesn't need to be\n// rebuilt. We used to need to load a \"js-analyze\" isopacket as part\n// of building other isopackets in ensureIsopacketsLoadable which made this\n// more important, though we've simplified it now by moving that code into\n// the tool itself.\nvar loadedIsopackets = {};\n\n// The main entry point: loads the specified isopacket (\"combined\" by\n// default) from cache or from disk, and returns the requested package\n// dependency, complaining if the package does not exist. Note that\n// ensureIsopacketsLoadable must be called first, as this function does\n// not trigger any building.\nexport function loadIsopackage(packageName, isopacketName = \"combined\") {\n  // Small but necessary hack: because archinfo.host() calls execFileSync,\n  // it yields the first time we call it, which is a problem for the\n  // fiberHelpers.noYieldsAllowed block below. Calling it here ensures the\n  // result is cached, so no yielding occurs later.\n  assert.strictEqual(archinfo.host().split(\".\", 1)[0], \"os\");\n\n  const isopacket = fiberHelpers.noYieldsAllowed(function () {\n    if (_.has(loadedIsopackets, isopacketName)) {\n      if (loadedIsopackets[isopacketName]) {\n        return loadedIsopackets[isopacketName];\n      }\n\n      // This is the case where the isopacket is up to date on disk but not\n      // loaded.\n      return loadedIsopackets[isopacketName] =\n        loadIsopacketFromDisk(isopacketName);\n    }\n\n    if (_.has(ISOPACKETS, isopacketName)) {\n      throw Error(\"Can't load isopacket before it has been verified: \"\n                  + isopacketName);\n    }\n\n    throw Error(\"Unknown isopacket: \" + isopacketName);\n  });\n\n  if (! _.has(isopacket, packageName)) {\n    throw new Error(\"Unknown isopacket dependency: \" + packageName);\n  }\n\n  return isopacket[packageName];\n}\n\nvar isopacketPath = function (isopacketName) {\n  return files.pathJoin(config.getIsopacketRoot(), isopacketName);\n};\n\n// ensureIsopacketsLoadable is called at startup and ensures that all isopackets\n// exist on disk as up-to-date loadable programs.\nvar calledEnsure = false;\nexport function ensureIsopacketsLoadable() {\n  if (calledEnsure) {\n    throw Error(\"can't ensureIsopacketsLoadable twice!\");\n  }\n  calledEnsure = true;\n\n  // If we're not running from checkout, then there's nothing to build and we\n  // can declare that all isopackets are loadable.\n  if (! files.inCheckout()) {\n    _.each(ISOPACKETS, function (packages, name) {\n      loadedIsopackets[name] = null;\n    });\n    return;\n  }\n\n  // We make this object lazily later.\n  var isopacketBuildContext = null;\n\n  var failedPackageBuild = false;\n  // Look at each isopacket. Check to see if it's on disk and up to date. If\n  // not, build it. We rebuild them in the order listed in ISOPACKETS.\n  var messages = Console.withProgressDisplayVisible(function () {\n    return buildmessage.capture(function () {\n      _.each(ISOPACKETS, function (packages, isopacketName) {\n        if (failedPackageBuild) {\n          return;\n        }\n\n        var isopacketRoot = isopacketPath(isopacketName);\n        var existingBuildinfo = files.readJSONOrNull(\n          files.pathJoin(isopacketRoot, 'isopacket-buildinfo.json'));\n        var needRebuild = ! existingBuildinfo;\n        if (! needRebuild && existingBuildinfo.builtBy !== compiler.BUILT_BY) {\n          needRebuild = true;\n        }\n        if (! needRebuild) {\n          var watchSet = watch.WatchSet.fromJSON(existingBuildinfo.watchSet);\n          if (! watch.isUpToDate(watchSet)) {\n            needRebuild = true;\n          }\n        }\n        if (! needRebuild) {\n          // Great, it's loadable without a rebuild.\n          loadedIsopackets[isopacketName] = null;\n          return;\n        }\n\n        // We're going to need to build! Make a catalog and loader if we haven't\n        // yet.\n        if (! isopacketBuildContext) {\n          isopacketBuildContext = makeIsopacketBuildContext();\n        }\n\n        buildmessage.enterJob({\n          title: \"bundling \" + isopacketName + \" packages for the tool\"\n        }, function () {\n          // Build the packages into the in-memory IsopackCache.\n          isopacketBuildContext.isopackCache.buildLocalPackages(packages);\n          if (buildmessage.jobHasMessages()) {\n            return;\n          }\n\n          // Now bundle them into a program.\n          var built = bundler.buildJsImage({\n            name: \"isopacket-\" + isopacketName,\n            packageMap: isopacketBuildContext.packageMap,\n            isopackCache: isopacketBuildContext.isopackCache,\n            use: packages\n          });\n          if (buildmessage.jobHasMessages()) {\n            return;\n          }\n\n          var builder = new Builder({outputPath: isopacketRoot});\n          builder.writeJson('isopacket-buildinfo.json', {\n            builtBy: compiler.BUILT_BY,\n            watchSet: built.watchSet.toJSON()\n          });\n          built.image.write(builder);\n          builder.complete();\n          // It's loadable now.\n          loadedIsopackets[isopacketName] = null;\n        });\n      });\n    });\n  });\n\n  // This is a build step ... but it's one that only happens in development, so\n  // it can just crash the app instead of being handled nicely.\n  if (messages.hasMessages()) {\n    Console.error(\"Errors prevented isopacket build:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket build failed?\");\n  }\n}\n\n// Returns a new all-local-packages catalog to be used for building isopackets.\nvar newIsopacketBuildingCatalog = function () {\n  if (! files.inCheckout()) {\n    throw Error(\"No need to build isopackets unless in checkout!\");\n  }\n\n  var catalogLocal = require('../packaging/catalog/catalog-local.js');\n  var isopacketCatalog = new catalogLocal.LocalCatalog;\n  var messages = buildmessage.capture(\n    { title: \"scanning local core packages\" },\n    function () {\n      const packagesDir =\n        files.pathJoin(files.getCurrentToolsDir(), 'packages');\n\n      // When running from a checkout, isopacket building does use local\n      // packages, but *ONLY THOSE FROM THE CHECKOUT*: not app packages or\n      // $PACKAGE_DIRS packages.  One side effect of this: we really really\n      // expect them to all build, and we're fine with dying if they don't\n      // (there's no worries about needing to springboard).\n      isopacketCatalog.initialize({\n        localPackageSearchDirs: [\n          packagesDir,\n          files.pathJoin(packagesDir, \"non-core\", \"*\", \"packages\"),\n        ],\n        buildingIsopackets: true\n      });\n    });\n  if (messages.hasMessages()) {\n    Console.arrowError(\"Errors while scanning core packages:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket scan failed?\");\n  }\n  return isopacketCatalog;\n};\n\nexport function makeIsopacketBuildContext() {\n  var context = {};\n  var catalog = newIsopacketBuildingCatalog();\n  var versions = {};\n  _.each(catalog.getAllPackageNames(), function (packageName) {\n    versions[packageName] = catalog.getLatestVersion(packageName).version;\n  });\n  context.packageMap = new packageMapModule.PackageMap(versions, {\n    localCatalog: catalog\n  });\n  // Make an isopack cache that doesn't save isopacks to disk and has no\n  // access to versioned packages.\n  context.isopackCache = new isopackCacheModule.IsopackCache({\n    packageMap: context.packageMap,\n    includeCordovaUnibuild: false,\n    // When linking JS files, don't include the padding spaces and line number\n    // comments. Since isopackets are loaded as part of possibly very short\n    // 'meteor' tool command invocations, we care more about startup time than\n    // legibility, and the difference is actually observable (eg 25% speedup\n    // loading constraint-solver).\n    noLineNumbers: true\n  });\n  return context;\n}\n\n// Loads a built isopacket from disk. Always loads (the cache is in 'load', not\n// this function). Does not run a build process; it must already be built.\nvar loadIsopacketFromDisk = function (isopacketName) {\n  var image = bundler.readJsImage(\n    files.pathJoin(isopacketPath(isopacketName), 'program.json'));\n\n  // An incredibly minimalist version of the environment from\n  // tools/server/boot.js.  Kind of a hack.\n  var env = {\n    __meteor_bootstrap__: { startupHooks: [] },\n    __meteor_runtime_config__: { meteorRelease: \"ISOPACKET\" }\n  };\n  env.Profile = Profile;\n\n  var ret;\n  var messages = buildmessage.capture({\n    title: \"loading isopacket `\" + isopacketName + \"`\"\n  }, function () {\n    ret = image.load(env);\n  });\n\n  // This is a build step ... but it's one that only happens in development, so\n  // it can just crash the app instead of being handled nicely.\n  if (messages.hasMessages()) {\n    Console.error(\"Errors prevented isopacket load:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket load failed?\");\n  }\n\n  // Run any user startup hooks.\n  while (env.__meteor_bootstrap__.startupHooks.length) {\n    var hook = env.__meteor_bootstrap__.startupHooks.shift();\n    hook();\n  }\n  // Setting this to null tells Meteor.startup to call hooks immediately.\n  env.__meteor_bootstrap__.startupHooks = null;\n\n  return ret;\n};\n"]}