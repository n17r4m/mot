{"version":3,"sources":["/tools/cli/dev-bundle-helpers.js"],"names":["module","export","ensureDependencies","pathJoin","getDevBundle","watch","require","v","installNpmModule","moduleDoesResolve","deps","needToInstall","Object","create","keys","forEach","dep","versionToInstall","devBundleLib"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,sBAAmB,MAAIA;AAAxB,CAAd;AAA2D,IAAIC,QAAJ,EAAaC,YAAb;AAA0BJ,OAAOK,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACH,WAASI,CAAT,EAAW;AAACJ,eAASI,CAAT;AAAW,GAAxB;;AAAyBH,eAAaG,CAAb,EAAe;AAACH,mBAAaG,CAAb;AAAe;;AAAxD,CAAvC,EAAiG,CAAjG;AAAoG,IAAIC,gBAAJ,EAAqBC,iBAArB;AAAuCT,OAAOK,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACE,mBAAiBD,CAAjB,EAAmB;AAACC,uBAAiBD,CAAjB;AAAmB,GAAxC;;AAAyCE,oBAAkBF,CAAlB,EAAoB;AAACE,wBAAkBF,CAAlB;AAAoB;;AAAlF,CAAlD,EAAsI,CAAtI;;AAGzN,SAASL,kBAAT,CAA4BQ,IAA5B,EAAkC;AACvC;AACA;AACA,QAAMC,gBAAgBC,OAAOC,MAAP,CAAc,IAAd,CAAtB;AACAD,SAAOE,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0BC,OAAO;AAC/B,QAAI,CAACP,kBAAkBO,GAAlB,CAAL,EAA6B;AAC3B,YAAMC,mBAAmBP,KAAKM,GAAL,CAAzB;AACAL,oBAAcK,GAAd,IAAqBC,gBAArB;AACD;AACF,GALD;AAOA,QAAMC,eAAef,SAASC,cAAT,EAAyB,KAAzB,CAArB,CAXuC,CAavC;;AACAQ,SAAOE,IAAP,CAAYH,aAAZ,EACGI,OADH,CACWC,OAAOR,iBAAiBQ,GAAjB,EAAsBL,cAAcK,GAAd,CAAtB,EAA0CE,YAA1C,CADlB;AAED","file":"tools/cli/dev-bundle-helpers.js.map","sourcesContent":["import { pathJoin, getDevBundle } from '../fs/files.js';\nimport { installNpmModule, moduleDoesResolve } from '../isobuild/meteor-npm.js';\n\nexport function ensureDependencies(deps) {\n  // Check if each of the requested dependencies resolves, if not\n  // mark them for installation.\n  const needToInstall = Object.create(null);\n  Object.keys(deps).forEach(dep => {\n    if (!moduleDoesResolve(dep)) {\n      const versionToInstall = deps[dep];\n      needToInstall[dep] = versionToInstall;\n    }\n  });\n\n  const devBundleLib = pathJoin(getDevBundle(), 'lib');\n\n  // Install each of the requested modules.\n  Object.keys(needToInstall)\n    .forEach(dep => installNpmModule(dep, needToInstall[dep], devBundleLib));\n}\n"]}