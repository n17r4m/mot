{"version":3,"sources":["/tools/cli/default-npm-deps.js"],"names":["module","export","install","buildmessage","watch","require","default","v","pathJoin","statOrNull","writeFile","unlink","INSTALL_JOB_MESSAGE","appDir","packageJsonPath","needTempPackageJson","dependencies","JSON","stringify","ok","enterJob","runNpmCommand","installResult","success","error"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIA;AAAb,CAAd;AAAqC,IAAIC,YAAJ;AAAiBH,OAAOI,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACC,UAAQC,CAAR,EAAU;AAACJ,mBAAaI,CAAb;AAAe;;AAA3B,CAAjD,EAA8E,CAA9E;AAAiF,IAAIC,QAAJ,EAAaC,UAAb,EAAwBC,SAAxB,EAAkCC,MAAlC;AAAyCX,OAAOI,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACG,WAASD,CAAT,EAAW;AAACC,eAASD,CAAT;AAAW,GAAxB;;AAAyBE,aAAWF,CAAX,EAAa;AAACE,iBAAWF,CAAX;AAAa,GAApD;;AAAqDG,YAAUH,CAAV,EAAY;AAACG,gBAAUH,CAAV;AAAY,GAA9E;;AAA+EI,SAAOJ,CAAP,EAAS;AAACI,aAAOJ,CAAP;AAAS;;AAAlG,CAAvC,EAA2I,CAA3I;AAQhL,MAAMK,sBAAsB,6BAA5B;;AAEO,SAASV,OAAT,CAAiBW,MAAjB,EAAyB;AAC9B,QAAMC,kBAAkBN,SAASK,MAAT,EAAiB,cAAjB,CAAxB;AACA,QAAME,sBAAsB,CAAEN,WAAWK,eAAX,CAA9B;;AAEA,MAAIC,mBAAJ,EAAyB;AACvB,UAAM;AAAEC;AAAF,QAAmBX,QAAQ,oCAAR,CAAzB,CADuB,CAGvB;AACA;;;AACAK,cACEI,eADF,EAEEG,KAAKC,SAAL,CAAe;AAAEF;AAAF,KAAf,EAAiC,IAAjC,EAAuC,CAAvC,IAA4C,IAF9C,EAGE,MAHF;AAKD;;AAED,QAAMG,KAAKhB,aAAaiB,QAAb,CAAsBR,mBAAtB,EAA2C,YAAY;AAChE,UAAM;AAAES;AAAF,QAAoBhB,QAAQ,2BAAR,CAA1B;;AAEA,UAAMiB,gBAAgBD,cAAc,CAAC,SAAD,CAAd,EAA2BR,MAA3B,CAAtB;;AACA,QAAI,CAAES,cAAcC,OAApB,EAA6B;AAC3BpB,mBAAaqB,KAAb,CACE,2DACEF,cAAcE,KAFlB;AAIA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GAbU,CAAX;;AAeA,MAAIT,mBAAJ,EAAyB;AACvB;AACAJ,WAAOG,eAAP;AACD;;AAED,SAAOK,EAAP;AACD","file":"tools/cli/default-npm-deps.js.map","sourcesContent":["import buildmessage from \"../utils/buildmessage.js\";\nimport {\n  pathJoin,\n  statOrNull,\n  writeFile,\n  unlink,\n} from \"../fs/files.js\";\n\nconst INSTALL_JOB_MESSAGE = \"installing npm dependencies\";\n\nexport function install(appDir) {\n  const packageJsonPath = pathJoin(appDir, \"package.json\");\n  const needTempPackageJson = ! statOrNull(packageJsonPath);\n\n  if (needTempPackageJson) {\n    const { dependencies } = require(\"../static-assets/skel/package.json\");\n\n    // Write a minimial package.json with the same dependencies as the\n    // default new-app package.json file.\n    writeFile(\n      packageJsonPath,\n      JSON.stringify({ dependencies }, null, 2) + \"\\n\",\n      \"utf8\",\n    );\n  }\n\n  const ok = buildmessage.enterJob(INSTALL_JOB_MESSAGE, function () {\n    const { runNpmCommand } = require(\"../isobuild/meteor-npm.js\");\n\n    const installResult = runNpmCommand([\"install\"], appDir);\n    if (! installResult.success) {\n      buildmessage.error(\n        \"Could not install npm dependencies for test-packages: \" +\n          installResult.error);\n\n      return false;\n    }\n\n    return true;\n  });\n\n  if (needTempPackageJson) {\n    // Clean up the temporary package.json file created above.\n    unlink(packageJsonPath);\n  }\n\n  return ok;\n}\n"]}