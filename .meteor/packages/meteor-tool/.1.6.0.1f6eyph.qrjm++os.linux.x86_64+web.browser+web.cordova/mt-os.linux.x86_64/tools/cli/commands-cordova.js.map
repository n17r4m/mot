{"version":3,"sources":["/tools/cli/commands-cordova.js"],"names":["_","module","watch","require","default","v","main","Console","catalog","buildmessage","files","CORDOVA_PLATFORMS","ensureDevBundleDependencies","filterPlatforms","createProjectContext","appDir","ProjectContext","projectContext","projectDir","captureAndExit","readProjectMetadata","doAddPlatform","options","CordovaProject","setVerbose","verbose","platformsToAdd","args","installedPlatforms","platformList","getPlatforms","platform","contains","error","jobHasMessages","cordovaProject","concat","cordovaPlatforms","ensurePlatformsAreSynchronized","write","info","checkPlatformRequirements","doRemovePlatform","PlatformList","platformsToRemove","DEFAULT_PLATFORMS","without","process","registerCommand","name","type","Boolean","short","minArgs","maxArgs","Infinity","requiresApp","catalogRefresh","Refresh","Never","notOnWindows","rawInfo","join","hidden","url"],"mappings":"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","file":"tools/cli/commands-cordova.js.map","sourcesContent":["import _ from 'underscore';\nimport main from './main.js';\nimport { Console } from '../console/console.js';\nimport catalog from '../packaging/catalog/catalog.js';\nimport buildmessage from '../utils/buildmessage.js';\nimport files from '../fs/files.js';\nimport {\n  CORDOVA_PLATFORMS,\n  ensureDevBundleDependencies,\n  filterPlatforms,\n} from '../cordova';\n\nfunction createProjectContext(appDir) {\n  import { ProjectContext } from '../project-context.js';\n\n  const projectContext = new ProjectContext({\n    projectDir: appDir\n  });\n  main.captureAndExit('=> Errors while initializing project:', () => {\n    // We're just reading metadata here; we don't need to resolve constraints.\n    projectContext.readProjectMetadata();\n  });\n  return projectContext;\n}\n\nfunction doAddPlatform(options) {\n  import { CordovaProject } from '../cordova/project.js';\n\n  Console.setVerbose(!!options.verbose);\n\n  const projectContext = createProjectContext(options.appDir);\n\n  const platformsToAdd = options.args;\n  let installedPlatforms = projectContext.platformList.getPlatforms();\n\n  main.captureAndExit('', 'adding platforms', () => {\n    for (platform of platformsToAdd) {\n      if (_.contains(installedPlatforms, platform)) {\n        buildmessage.error(`${platform}: platform is already added`);\n      } else if (!_.contains(CORDOVA_PLATFORMS, platform)) {\n        buildmessage.error(`${platform}: no such platform`);\n      }\n    }\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    const cordovaProject = new CordovaProject(projectContext);\n    if (buildmessage.jobHasMessages()) return;\n\n    installedPlatforms = installedPlatforms.concat(platformsToAdd)\n    const cordovaPlatforms = filterPlatforms(installedPlatforms);\n    cordovaProject.ensurePlatformsAreSynchronized(cordovaPlatforms);\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Only write the new platform list when we have succesfully synchronized\n    projectContext.platformList.write(installedPlatforms);\n\n    for (platform of platformsToAdd) {\n      Console.info(`${platform}: added platform`);\n      if (_.contains(cordovaPlatforms, platform)) {\n        cordovaProject.checkPlatformRequirements(platform);\n      }\n    }\n  });\n}\n\nfunction doRemovePlatform(options) {\n  import { CordovaProject } from '../cordova/project.js';\n  import { PlatformList } from '../project-context.js';\n\n  const projectContext = createProjectContext(options.appDir);\n\n  const platformsToRemove = options.args;\n  let installedPlatforms = projectContext.platformList.getPlatforms();\n\n  main.captureAndExit('', 'removing platforms', () => {\n    for (platform of platformsToRemove) {\n      // Explain why we can't remove server or browser platforms\n      if (_.contains(PlatformList.DEFAULT_PLATFORMS, platform)) {\n        buildmessage.error(`${platform}: cannot remove platform in this \\\nversion of Meteor`);\n      } else if (!_.contains(installedPlatforms, platform)) {\n        buildmessage.error(`${platform}: platform is not in this project`);\n      }\n    }\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    installedPlatforms = _.without(installedPlatforms, ...platformsToRemove);\n    projectContext.platformList.write(installedPlatforms);\n\n    for (platform of platformsToRemove) {\n      Console.info(`${platform}: removed platform`);\n    }\n\n    if (process.platform !== 'win32') {\n      const cordovaProject = new CordovaProject(projectContext);\n      if (buildmessage.jobHasMessages()) return;\n      const cordovaPlatforms = filterPlatforms(installedPlatforms);\n      cordovaProject.ensurePlatformsAreSynchronized(cordovaPlatforms);\n    }\n  });\n}\n\n// Add one or more Cordova platforms\nmain.registerCommand({\n  name: 'add-platform',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 1,\n  maxArgs: Infinity,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never(),\n  notOnWindows: false\n}, function (options) {\n  ensureDevBundleDependencies();\n  doAddPlatform(options);\n});\n\n// Remove one or more Cordova platforms\nmain.registerCommand({\n  name: 'remove-platform',\n  minArgs: 1,\n  maxArgs: Infinity,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  ensureDevBundleDependencies();\n  doRemovePlatform(options);\n});\n\nmain.registerCommand({\n  name: 'list-platforms',\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  const projectContext = createProjectContext(options.appDir);\n\n  const installedPlatforms = projectContext.platformList.getPlatforms();\n\n  Console.rawInfo(installedPlatforms.join('\\n') + '\\n');\n});\n\nmain.registerCommand({\n  name: 'install-sdk',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 0,\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  hidden: true,\n  notOnWindows: true\n}, function (options) {\n  Console.setVerbose(!!options.verbose);\n\n  Console.info(\"Please follow the installation instructions in the mobile guide:\");\n  Console.info(Console.url(\"http://guide.meteor.com/mobile.html#installing-prerequisites\"));\n\n  return 0;\n});\n\nmain.registerCommand({\n  name: 'configure-android',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 0,\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  hidden: true,\n  notOnWindows: true\n}, function (options) {\n  Console.setVerbose(!!options.verbose);\n\n  Console.info(`You can launch the Android SDK Manager from within Android \\\nStudio.\nSee`, Console.url(\"http://developer.android.com/tools/help/sdk-manager.html\"), `\nAlternatively, you can launch it by running the 'android' command.\n(This requires that you have set ANDROID_HOME and added ANDROID_HOME/tools \\\nto your PATH.)`);\n\n  return 0;\n});\n"]}