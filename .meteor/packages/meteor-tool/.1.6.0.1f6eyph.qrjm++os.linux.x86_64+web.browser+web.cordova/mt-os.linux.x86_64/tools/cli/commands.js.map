{"version":3,"sources":["/tools/cli/commands.js"],"names":["module","export","parseServerOptionsForRunCommand","parseRunTargets","CordovaRunner","watch","require","v","iOSRunTarget","AndroidRunTarget","EXAMPLE_REPOSITORIES","main","_","files","deploy","buildmessage","auth","authClient","config","runLog","utils","httpHelpers","archinfo","catalog","stats","Console","projectContextModule","release","DEPLOY_ARCH","DEFAULT_PORT","__dirnameConverted","convertToStandardPath","__dirname","qualifySitename","site","indexOf","length","substring","showInvalidArchMsg","arch","info","each","keys","VALID_ARCHITECTURES","va","command","options","indent","runTargets","parsedServerUrl","parsePortOption","port","mobileServerOption","parsedMobileServerUrl","parseMobileServerOption","isRunOnDeviceRequested","any","runTarget","isDevice","detectMobileServerUrl","portOption","parseUrl","error","ExitWithCode","optionName","protocol","hostname","myIp","ipAddress","message","targets","map","target","targetParts","split","platform","registerCommand","name","requiresRelease","pretty","catalogRefresh","Refresh","Never","rawInfo","host","current","appDir","Error","isCheckout","gitLog","runGitInCheckout","trim","getDisplayName","inCheckout","getToolsVersion","inspectOptions","type","String","implicitValue","normalizeInspectOptions","result","Object","create","has","console","log","inspect","runCommandOptions","requiresApp","maxArgs","Infinity","short","default","Boolean","production","settings","verbose","once","extend","doRunCommand","setVerbose","args","includePackages","projectContext","ProjectContext","projectDir","allowIncompatibleUpdate","lintAppAndLocalPackages","captureAndExit","readProjectMetadata","explicit","releaseFile","fullReleaseName","displayReleaseName","appHost","appPort","appPortMatch","match","parseInt","warn","setRawLogs","webArchs","isEmpty","push","cordovaRunner","ensureDevBundleDependencies","prepareCordovaProject","CordovaProject","cordovaProject","settingsFile","mobileServerUrl","formatUrl","jobHasMessages","checkPlatformsForRunTargets","runAll","run","proxyPort","proxyHost","buildOptions","minifyMode","buildMode","rootUrl","process","env","ROOT_URL","mongoUrl","MONGO_URL","oplogUrl","MONGO_OPLOG_URL","noReleaseCheck","METEOR_NO_RELEASE_CHECK","connect","convertToOSPath","getMeteorShellDirectory","WaitForExit","list","example","package","full","bare","packageName","ShowUsage","validatePackageNameOrExit","detailedColonExplanation","fsName","packageDir","pathResolve","inYourApp","exists","transform","x","xn","replace","relString","rel","official","getDefaultReleaseVersion","version","noPrefix","cp_r","pathJoin","transformFilename","f","transformContents","contents","test","Buffer","from","toString","ignore","err","displayPackageDir","pathRelative","cwd","path","forced","latestKnown","SpringboardToLatestRelease","repoInfo","branchInfo","branch","repo","branchOption","appPathAsEntered","appPath","findAppDir","appName","pathBasename","nonCodeFileExts","destinationHasCodeFiles","readdir","thisPathCountsAsAFile","filePath","isHidden","stat","isDirectory","ext","pathExtname","contains","toIgnore","skelName","alwaysWritePackageMap","write","projectConstraintsFile","updateReleaseConstraints","_manifest","upgraders","finishedUpgraders","appendUpgraders","allUpgraders","prepareProjectForBuild","install","appNameToDisplay","appPathWithQuotesIfSpaces","url","bareOptionNotice","fullOptionNotice","buildCommands","minArgs","debug","directory","architecture","server","headless","buildCommand","hidden","_bundleOnly","setHeadless","bundleArch","serverArchitectures","uniq","packageMapDelta","displayOnConsole","serverOnly","cordovaPlatforms","platformList","getCordovaPlatforms","without","buildDir","getProjectLocalDirectory","outputPath","relative","substr","labelWarn","bundlePath","recordPackages","what","bundler","bundleResult","bundle","serverArch","errors","formatMessages","mkdir_p","outputTar","createTarball","exception","rm_recursive","pluginVersionsFromStarManifest","displayNameForPlatform","enterJob","title","pluginVersions","starManifest","prepareFromAppBundle","buildPath","platformOutputPath","prepareForPlatform","buildForPlatform","writeFile","apkPath","copyFile","requiresAppOrPackage","tempProjectDir","mkdtemp","explicitlyAddedLocalPackageDirs","packageMapFilename","forceIncludeCordovaUnibuild","lintPackageWithSourceRoot","initializeCatalog","versionRecord","localCatalog","getVersionBySourceRoot","constraint","parsePackageConstraint","removeAllPackages","addConstraints","displayName","warnings","usedMeteorAccount","findMongoPort","mongoPort","temporaryMongoUrl","maybePrintRegistrationLink","stdin","pause","runMongo","runMongoShell","isRunning","rm_recursive_async","then","password","allowUnrecognizedOptions","delete","rawOptions","deleteApp","loggedIn","isLoggedIn","registerOrLogIn","buildArch","deployResult","bundleAndDeploy","leadingNewline","firstTime","logs","add","transfer","remove","pick","pollForRegistrationCompletion","changeAuthorized","listAuthorized","testCommandOptions","ios","android","doTestCommand","global","testCommandMetadata","intersection","testRunnerAppDir","testAppPath","driverPackage","projectContextOptions","projectDirForLocalPackages","code","packagesByPath","filter","p","packagesToAdd","getTestPackageNames","excludedPackages","exclude","some","excluded","unshift","constraintsToAdd","writeIfModified","isAppTest","isTest","projectLocalDir","copyDirIntoTestRunnerApp","allowSymlink","parts","appDirPath","testDirPath","pathDirname","symlink","preserveSymlinks","platformsForRunTargets","runTestAppForPackages","packageNames","packageNamesSpecifiedExplicitly","getAllPackageNames","testPackages","getLatestVersion","testName","recordPackageUsage","disableOplog","testMetadata","banner","selenium","seleniumBrowser","omitPackageMapDeltaDisplayOnFirstRun","forceRebuildPackages","email","loginCommand","overwriteExistingToken","logoutCommand","whoAmICommand","loggedInAccountsConnectionOrPrompt","action","token","getSessionToken","getAccountsDomain","doUsernamePasswordLogin","retry","conn","loggedInAccountsConnection","getAccountsApiUrl","request","method","useSessionHeader","useAuthHeader","body","JSON","parse","response","statusCode","organizations","pluck","join","username","call","reason","members","changed","slow","galaxy","browserstack","history","Number","file","junit","selftest","offline","getUrl","e","OfflineError","compileRegexp","str","RegExp","SyntaxError","testRegexp","undefined","fileRegexp","excludeRegexp","listTests","onlyChanged","includeSlowTests","galaxyOnly","clients","runTests","historyLines","listSites","json","minutes","maybeLog","string","loggedInConnection","getBuildFarmUrl","getBuildFarmDomain","handleConnectionError","ret","close","retJson","sshKey","hostKey","stringify","tmpDir","idpath","encoding","mode","hostpath","addendum","login","maybeVerbose","connOptions","printOptions","child_process","clear","sshCommand","spawn","stdio","Promise","resolve","on","signal","await","secs","spinner","progress","getCurrentProgressTracker","totalProgress","end","done","i","n","updateProgress","reportProgress","setTimeout","ething","required","key"],"mappings":"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","file":"tools/cli/commands.js.map","sourcesContent":["var main = require('./main.js');\nvar _ = require('underscore');\nvar files = require('../fs/files.js');\nvar deploy = require('../meteor-services/deploy.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar auth = require('../meteor-services/auth.js');\nvar authClient = require('../meteor-services/auth-client.js');\nvar config = require('../meteor-services/config.js');\nvar runLog = require('../runners/run-log.js');\nvar utils = require('../utils/utils.js');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar archinfo = require('../utils/archinfo.js');\nvar catalog = require('../packaging/catalog/catalog.js');\nvar stats = require('../meteor-services/stats.js');\nvar Console = require('../console/console.js').Console;\nvar projectContextModule = require('../project-context.js');\nvar release = require('../packaging/release.js');\n\nimport { CordovaRunner } from '../cordova/runner.js';\nimport { iOSRunTarget, AndroidRunTarget } from '../cordova/run-targets.js';\n\nimport { EXAMPLE_REPOSITORIES } from './example-repositories.js';\n\n// The architecture used by MDG's hosted servers; it's the architecture used by\n// 'meteor deploy'.\nvar DEPLOY_ARCH = 'os.linux.x86_64';\n\n// The default port that the development server listens on.\nvar DEFAULT_PORT = '3000';\n\n// __dirname - the location of the current executing file\nvar __dirnameConverted = files.convertToStandardPath(__dirname);\n\n// Given a site name passed on the command line (eg, 'mysite'), return\n// a fully-qualified hostname ('mysite.meteor.com').\n//\n// This is fairly simple for now. It appends 'meteor.com' if the name\n// doesn't contain a dot, and it deletes any trailing dots (the\n// technically legal hostname 'mysite.com.' is canonicalized to\n// 'mysite.com').\n//\n// In the future, you should be able to make this default to some\n// other domain you control, rather than 'meteor.com'.\nvar qualifySitename = function (site) {\n  if (site.indexOf(\".\") === -1) {\n    site = site + \".meteor.com\";\n  }\n  while (site.length && site[site.length - 1] === \".\") {\n    site = site.substring(0, site.length - 1);\n  }\n  return site;\n};\n\n// Display a message showing valid Meteor architectures.\nvar showInvalidArchMsg = function (arch) {\n  Console.info(\"Invalid architecture: \" + arch);\n  Console.info(\"The following are valid Meteor architectures:\");\n  _.each(_.keys(archinfo.VALID_ARCHITECTURES), function (va) {\n    Console.info(\n      Console.command(va),\n      Console.options({ indent: 2 }));\n  });\n};\n\n// Utility functions to parse options in run/build/test-packages commands\n\nexport function parseServerOptionsForRunCommand(options, runTargets) {\n  const parsedServerUrl = parsePortOption(options.port);\n\n  // XXX COMPAT WITH 0.9.2.2 -- the 'mobile-port' option is deprecated\n  const mobileServerOption = options['mobile-server'] || options['mobile-port'];\n  let parsedMobileServerUrl;\n  if (mobileServerOption) {\n    parsedMobileServerUrl = parseMobileServerOption(mobileServerOption);\n  } else {\n    const isRunOnDeviceRequested = _.any(runTargets,\n      runTarget => runTarget.isDevice);\n    parsedMobileServerUrl = detectMobileServerUrl(parsedServerUrl,\n      isRunOnDeviceRequested);\n  }\n\n  return { parsedServerUrl, parsedMobileServerUrl };\n}\n\nfunction parsePortOption(portOption) {\n  let parsedServerUrl = utils.parseUrl(portOption);\n\n  if (!parsedServerUrl.port) {\n    Console.error(\"--port must include a port.\");\n    throw new main.ExitWithCode(1);\n  }\n\n  return parsedServerUrl;\n}\n\nfunction parseMobileServerOption(mobileServerOption,\n  optionName = 'mobile-server') {\n  let parsedMobileServerUrl = utils.parseUrl(\n    mobileServerOption,\n    { protocol: 'http' });\n\n  if (!parsedMobileServerUrl.hostname) {\n    Console.error(`--${optionName} must include a hostname.`);\n    throw new main.ExitWithCode(1);\n  }\n\n  return parsedMobileServerUrl;\n}\n\nfunction detectMobileServerUrl(parsedServerUrl, isRunOnDeviceRequested) {\n  // Always try to use an auto-detected IP first\n  try {\n    const myIp = utils.ipAddress();\n    return {\n      protocol: 'http',\n      hostname: myIp,\n      port: parsedServerUrl.port\n    };\n  } catch (error) {\n    // Unless we are being asked to run on a device, use localhost as fallback\n    if (isRunOnDeviceRequested) {\n      Console.error(\n`Error detecting IP address for mobile app to connect to:\n${error.message}\nPlease specify the address that the mobile app should connect\nto with --mobile-server.`);\n      throw new main.ExitWithCode(1);\n    } else {\n      return {\n        protocol: 'http',\n        hostname: 'localhost',\n        port: parsedServerUrl.port\n      };\n    }\n  }\n}\n\nexport function parseRunTargets(targets) {\n  return targets.map((target) => {\n    const targetParts = target.split('-');\n    const platform = targetParts[0];\n    const isDevice = targetParts[1] === 'device';\n\n    if (platform == 'ios') {\n      return new iOSRunTarget(isDevice);\n    } else if (platform == 'android') {\n      return new AndroidRunTarget(isDevice);\n    } else {\n      Console.error(`Unknown run target: ${target}`);\n      throw new main.ExitWithCode(1);\n    }\n  });\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// options that act like commands\n///////////////////////////////////////////////////////////////////////////////\n\n// Prints the Meteor architecture name of this host\nmain.registerCommand({\n  name: '--arch',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.rawInfo(archinfo.host() + \"\\n\");\n});\n\n// Prints the current release in use. Note that if there is not\n// actually a specific release, we print to stderr and exit non-zero,\n// while if there is a release we print to stdout and exit zero\n// (making this useful to scripts).\n// XXX: What does this mean in our new release-free world?\nmain.registerCommand({\n  name: '--version',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (release.current === null) {\n    if (! options.appDir) {\n      throw new Error(\"missing release, but not in an app?\");\n    }\n    Console.error(\n      \"This project was created with a checkout of Meteor, rather than an \" +\n      \"official release, and doesn't have a release number associated with \" +\n      \"it. You can set its release with \" +\n      Console.command(\"'meteor update'\") + \".\");\n    return 1;\n  }\n\n  if (release.current.isCheckout()) {\n    var gitLog = utils.runGitInCheckout(\n      'log',\n      '--format=%h%d', '-n 1').trim();\n    Console.error(\"Unreleased, running from a checkout at \" + gitLog);\n    return 1;\n  }\n\n  Console.info(release.current.getDisplayName());\n});\n\n// Internal use only. For automated testing.\nmain.registerCommand({\n  name: '--long-version',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (files.inCheckout()) {\n    Console.error(\"checkout\");\n    return 1;\n  } else if (release.current === null) {\n    // .meteor/release says \"none\" but not in a checkout.\n    Console.error(\"none\");\n    return 1;\n  } else {\n    Console.rawInfo(release.current.name + \"\\n\");\n    Console.rawInfo(files.getToolsVersion() + \"\\n\");\n    return 0;\n  }\n});\n\n// Internal use only. For automated testing.\nmain.registerCommand({\n  name: '--requires-release',\n  requiresRelease: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// run\n///////////////////////////////////////////////////////////////////////////////\n\nconst inspectOptions = {\n  \"inspect\": { type: String, implicitValue: \"9229\" },\n  \"inspect-brk\": { type: String, implicitValue: \"9229\" },\n};\n\nfunction normalizeInspectOptions(options) {\n  const result = Object.create(null);\n\n  if (_.has(options, \"debug-port\")) {\n    console.log(\n      \"The --debug-port option is deprecated; \" +\n        \"please use --inspect-brk=<port> instead.\"\n    );\n\n    if (! _.has(options, \"inspect-brk\")) {\n      options[\"inspect-brk\"] = options[\"debug-port\"];\n    }\n\n    delete options[\"debug-port\"];\n  }\n\n  if (_.has(options, \"inspect-brk\")) {\n    result.inspect = {\n      port: options[\"inspect-brk\"],\n      \"break\": true,\n    };\n\n    if (_.has(options, \"inspect\")) {\n      console.log(\n        \"Both --inspect and --inspect-brk provided; \" +\n          \"ignoring --inspect.\"\n      );\n\n      delete options.inspect;\n    }\n\n  } else if (_.has(options, \"inspect\")) {\n    result.inspect = {\n      port: options.inspect,\n      \"break\": false,\n    };\n  }\n\n  return result;\n}\n\nvar runCommandOptions = {\n  requiresApp: true,\n  maxArgs: Infinity,\n  options: {\n    port: { type: String, short: \"p\", default: DEFAULT_PORT },\n    'mobile-server': { type: String },\n    // XXX COMPAT WITH 0.9.2.2\n    'mobile-port': { type: String },\n    'app-port': { type: String },\n    'debug-port': { type: String },\n    ...inspectOptions,\n    'no-release-check': { type: Boolean },\n    production: { type: Boolean },\n    'raw-logs': { type: Boolean },\n    settings: { type: String, short: \"s\" },\n    verbose: { type: Boolean, short: \"v\" },\n    // With --once, meteor does not re-run the project if it crashes\n    // and does not monitor for file changes. Intentionally\n    // undocumented: intended for automated testing (eg, cli-test.sh),\n    // not end-user use. #Once\n    once: { type: Boolean },\n    // Don't run linter on rebuilds\n    'no-lint': { type: Boolean },\n    // Allow the version solver to make breaking changes to the versions\n    // of top-level dependencies.\n    'allow-incompatible-update': { type: Boolean },\n    'extra-packages': { type: String }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n};\n\nmain.registerCommand(_.extend(\n  { name: 'run' },\n  runCommandOptions\n), doRunCommand);\n\nfunction doRunCommand(options) {\n  Console.setVerbose(!!options.verbose);\n\n  // Additional args are interpreted as run targets\n  const runTargets = parseRunTargets(options.args);\n\n  const { parsedServerUrl, parsedMobileServerUrl } =\n    parseServerOptionsForRunCommand(options, runTargets);\n\n  var includePackages = [];\n  if (options['extra-packages']) {\n    includePackages = options['extra-packages'].trim().split(/\\s*,\\s*/);\n  }\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    allowIncompatibleUpdate: options['allow-incompatible-update'],\n    lintAppAndLocalPackages: !options['no-lint'],\n    includePackages: includePackages,\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    // We're just reading metadata here --- we'll wait to do the full build\n    // preparation until after we've started listening on the proxy, etc.\n    projectContext.readProjectMetadata();\n  });\n\n  if (release.explicit) {\n    if (release.current.name !== projectContext.releaseFile.fullReleaseName) {\n      console.log(\"=> Using %s as requested (overriding %s)\",\n                  release.current.getDisplayName(),\n                  projectContext.releaseFile.displayReleaseName);\n      console.log();\n    }\n  }\n\n  let appHost, appPort;\n  if (options['app-port']) {\n    var appPortMatch = options['app-port'].match(/^(?:(.+):)?([0-9]+)?$/);\n    if (!appPortMatch) {\n      Console.error(\n        \"run: --app-port must be a number or be of the form 'host:port' \",\n        \"where port is a number. Try\",\n        Console.command(\"'meteor help run'\") + \" for help.\");\n      return 1;\n    }\n    appHost = appPortMatch[1] || null;\n    // It's legit to specify `--app-port host:` and still let the port be\n    // randomized.\n    appPort = appPortMatch[2] ? parseInt(appPortMatch[2]) : null;\n  }\n\n  if (options.production) {\n    Console.warn(\n      \"Warning: The --production flag should only be used to simulate production \" +\n      \"bundling for testing purposes. Use meteor build to create a bundle for \" +\n      \"production deployment. See: https://guide.meteor.com/deployment.html\"\n    );\n  }\n\n  if (options['raw-logs']) {\n    runLog.setRawLogs(true);\n  }\n\n  let webArchs = ['web.browser'];\n  if (!_.isEmpty(runTargets) || options['mobile-server']) {\n    webArchs.push(\"web.cordova\");\n  }\n\n  let cordovaRunner;\n  if (!_.isEmpty(runTargets)) {\n\n    function prepareCordovaProject() {\n      import { CordovaProject } from '../cordova/project.js';\n\n      main.captureAndExit('', 'preparing Cordova project', () => {\n        const cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl) });\n        if (buildmessage.jobHasMessages()) return;\n\n        cordovaRunner = new CordovaRunner(cordovaProject, runTargets);\n        cordovaRunner.checkPlatformsForRunTargets();\n      });\n    }\n\n    import { ensureDevBundleDependencies } from '../cordova';\n    ensureDevBundleDependencies();\n    prepareCordovaProject();\n  }\n\n  var runAll = require('../runners/run-all.js');\n  return runAll.run({\n    projectContext: projectContext,\n    proxyPort: parsedServerUrl.port,\n    proxyHost: parsedServerUrl.hostname,\n    appPort: appPort,\n    appHost: appHost,\n    ...normalizeInspectOptions(options),\n    settingsFile: options.settings,\n    buildOptions: {\n      minifyMode: options.production ? 'production' : 'development',\n      buildMode: options.production && 'production',\n      webArchs: webArchs\n    },\n    rootUrl: process.env.ROOT_URL,\n    mongoUrl: process.env.MONGO_URL,\n    oplogUrl: process.env.MONGO_OPLOG_URL,\n    mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n    once: options.once,\n    noReleaseCheck: options['no-release-check'] || process.env.METEOR_NO_RELEASE_CHECK,\n    cordovaRunner: cordovaRunner\n  });\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// debug\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand(_.extend(\n  { name: 'debug' },\n  runCommandOptions\n), function (options) {\n  options[\"inspect-brk\"] = options[\"inspect-brk\"] || \"9229\";\n  return doRunCommand(options);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// shell\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'shell',\n  requiresRelease: false,\n  requiresApp: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (!options.appDir) {\n    Console.error(\n      \"The \" + Console.command(\"'meteor shell'\") + \" command must be run\",\n      \"in a Meteor app directory.\"\n    );\n  } else {\n    var projectContext = new projectContextModule.ProjectContext({\n      projectDir: options.appDir\n    });\n\n    // Convert to OS path here because shell/server.js doesn't know how to\n    // convert paths, since it exists in the app and in the tool.\n    require('../shell-client.js').connect(\n      files.convertToOSPath(projectContext.getMeteorShellDirectory())\n    );\n\n    throw new main.WaitForExit;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// create\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'create',\n  maxArgs: 1,\n  options: {\n    list: { type: Boolean },\n    example: { type: String },\n    package: { type: Boolean },\n    full: { type: Boolean },\n    bare: { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  // Creating a package is much easier than creating an app, so if that's what\n  // we are doing, do that first. (For example, we don't springboard to the\n  // latest release to create a package if we are inside an app)\n  if (options.package) {\n    var packageName = options.args[0];\n\n    if (options.list || options.example) {\n      Console.error(\"No package examples exist at this time.\");\n      Console.error();\n      throw new main.ShowUsage;\n    }\n\n    if (!packageName) {\n      Console.error(\"Please specify the name of the package.\");\n      throw new main.ShowUsage;\n    }\n\n    utils.validatePackageNameOrExit(\n      packageName, {detailedColonExplanation: true});\n\n    // When we create a package, avoid introducing a colon into the file system\n    // by naming the directory after the package name without the prefix.\n    var fsName = packageName;\n    if (packageName.indexOf(\":\") !== -1) {\n      var split = packageName.split(\":\");\n\n      if (split.length > 2) {\n        // It may seem like this check should be inside package version parser's\n        // validatePackageName, but we decided to name test packages like this:\n        // local-test:prefix:name, so we have to support building packages\n        // with at least two colons. Therefore we will at least try to\n        // discourage people from putting a ton of colons in their package names\n        // here.\n        Console.error(packageName +\n          \": Package names may not have more than one colon.\");\n        return 1;\n      }\n\n      fsName = split[1];\n    }\n\n    var packageDir;\n    if (options.appDir) {\n      packageDir = files.pathResolve(options.appDir, 'packages', fsName);\n    } else {\n      packageDir = files.pathResolve(fsName);\n    }\n\n    var inYourApp = options.appDir ? \" in your app\" : \"\";\n\n    if (files.exists(packageDir)) {\n      Console.error(packageName + \": Already exists\" + inYourApp);\n      return 1;\n    }\n\n    var transform = function (x) {\n      var xn =\n        x.replace(/~name~/g, packageName).replace(/~fs-name~/g, fsName);\n\n      // If we are running from checkout, comment out the line sourcing packages\n      // from a release, with the latest release filled in (in case they do want\n      // to publish later). If we are NOT running from checkout, fill it out\n      // with the current release.\n      var relString;\n      if (release.current.isCheckout()) {\n        xn = xn.replace(/~cc~/g, \"//\");\n        var rel = catalog.official.getDefaultReleaseVersion();\n        // the no-release case should never happen except in tests.\n        relString = rel ? rel.version : \"no-release\";\n      } else {\n        xn = xn.replace(/~cc~/g, \"\");\n        relString = release.current.getDisplayName({noPrefix: true});\n      }\n\n      // If we are not in checkout, write the current release here.\n      return xn.replace(/~release~/g, relString);\n    };\n\n    try {\n      files.cp_r(files.pathJoin(__dirnameConverted, '..', 'static-assets', 'skel-pack'), packageDir, {\n        transformFilename: function (f) {\n          return transform(f);\n        },\n        transformContents: function (contents, f) {\n          if ((/(\\.html|\\.js|\\.css)/).test(f)) {\n            return Buffer.from(transform(contents.toString()));\n          } else {\n            return contents;\n          }\n        },\n        ignore: [/^local$/]\n      });\n    } catch (err) {\n      Console.error(\"Could not create package: \" + err.message);\n      return 1;\n    }\n\n    var displayPackageDir =\n      files.convertToOSPath(files.pathRelative(files.cwd(), packageDir));\n\n    // Since the directory can't have colons, the directory name will often not\n    // match the name of the package exactly, therefore we should tell people\n    // where it was created.\n    Console.info(\n      packageName + \": created in\",\n      Console.path(displayPackageDir)\n    );\n\n    return 0;\n  }\n\n  // Suppose you have an app A, and from some directory inside that\n  // app, you run 'meteor create /my/new/app'. The new app should use\n  // the latest available Meteor release, not the release that A\n  // uses. So if we were run from inside an app directory, and the\n  // user didn't force a release with --release, we need to\n  // springboard to the correct release and tools version.\n  //\n  // (In particular, it's not sufficient to create the new app with\n  // this version of the tools, and then stamp on the correct release\n  // at the end.)\n  if (! release.current.isCheckout() && !release.forced) {\n    if (release.current.name !== release.latestKnown()) {\n      throw new main.SpringboardToLatestRelease;\n    }\n  }\n\n  if (options.list) {\n    Console.info(\"Available examples:\");\n    _.each(EXAMPLE_REPOSITORIES, function (repoInfo, name) {\n      const branchInfo = repoInfo.branch ? `#${repoInfo.branch}` : '';\n      Console.info(\n        Console.command(`${name}: ${repoInfo.repo}${branchInfo}`),\n        Console.options({ indent: 2 }));\n    });\n\n    Console.info();\n    Console.info(\"To create an example, simply\", Console.command(\"git clone\"),\n      \"the relevant repository and branch (run\",\n      Console.command(\"'meteor create --example <name>'\"),\n      \" to see the full command).\");\n    return 0;\n  };\n\n  if (options.example) {\n    const repoInfo = EXAMPLE_REPOSITORIES[options.example];\n    if (!repoInfo) {\n      Console.error(`${options.example}: no such example.`);\n      Console.error(\n        \"List available applications with\",\n        Console.command(\"'meteor create --list'\") + \".\");\n      return 1;\n    }\n\n    const branchOption = repoInfo.branch ? ` -b ${repoInfo.branch}` : '';\n    const path = options.args.length === 1 ? ` ${options.args[0]}` : '';\n\n    Console.info(`To create the ${options.example} example, please run:`)\n    Console.info(\n      Console.command(`git clone ${repoInfo.repo}${branchOption}${path}`),\n      Console.options({ indent: 2 }));\n\n    return 0;\n  }\n\n  var appPathAsEntered;\n  if (options.args.length === 1) {\n    appPathAsEntered = options.args[0];\n  } else {\n    throw new main.ShowUsage;\n  }\n  var appPath = files.pathResolve(appPathAsEntered);\n\n  if (files.findAppDir(appPath)) {\n    Console.error(\n      \"You can't create a Meteor project inside another Meteor project.\");\n    return 1;\n  }\n\n  var appName;\n  if (appPathAsEntered === \".\" || appPathAsEntered === \"./\") {\n    // If trying to create in current directory\n    appName = files.pathBasename(files.cwd());\n  } else {\n    appName = files.pathBasename(appPath);\n  }\n\n\n  var transform = function (x) {\n    return x.replace(/~name~/g, appName);\n  };\n\n  // These file extensions are usually metadata, not app code\n  var nonCodeFileExts = ['.txt', '.md', '.json', '.sh'];\n\n  var destinationHasCodeFiles = false;\n\n  // If the directory doesn't exist, it clearly doesn't have any source code\n  // inside itself\n  if (files.exists(appPath)) {\n    destinationHasCodeFiles = _.any(files.readdir(appPath),\n        function thisPathCountsAsAFile(filePath) {\n      // We don't mind if there are hidden files or directories (this includes\n      // .git) and we don't need to check for .meteor here because the command\n      // will fail earlier\n      var isHidden = /^\\./.test(filePath);\n      if (isHidden) {\n        // Not code\n        return false;\n      }\n\n      // We do mind if there are non-hidden directories, because we don't want\n      // to recursively check everything to do some crazy heuristic to see if\n      // we should try to create an app.\n      var stats = files.stat(files.pathJoin(appPath, filePath));\n      if (stats.isDirectory()) {\n        // Could contain code\n        return true;\n      }\n\n      // Check against our file extension white list\n      var ext = files.pathExtname(filePath);\n      if (ext == '' || _.contains(nonCodeFileExts, ext)) {\n        return false;\n      }\n\n      // Everything not matched above is considered to be possible source code\n      return true;\n    });\n  }\n\n  var toIgnore = [/^local$/, /^\\.id$/]\n  if (destinationHasCodeFiles) {\n    // If there is already source code in the directory, don't copy our\n    // skeleton app code over it. Just create the .meteor folder and metadata\n    toIgnore.push(/(\\.html|\\.js|\\.css)/)\n  }\n\n  let skelName = 'skel';\n\n  if(options.bare){\n    skelName += '-bare';\n  }\n  else if(options.full){\n    skelName += '-full';\n  }\n\n  files.cp_r(files.pathJoin(__dirnameConverted, '..', 'static-assets', skelName), appPath, {\n    transformFilename: function (f) {\n      return transform(f);\n    },\n    transformContents: function (contents, f) {\n      if ((/(\\.html|\\.js|\\.css)/).test(f)) {\n        return Buffer.from(transform(contents.toString()));\n      } else {\n        return contents;\n      }\n    },\n    ignore: toIgnore\n  });\n\n  // We are actually working with a new meteor project at this point, so\n  // set up its context.\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: appPath,\n    // Write .meteor/versions even if --release is specified.\n    alwaysWritePackageMap: true,\n    // examples come with a .meteor/versions file, but we shouldn't take it\n    // too seriously\n    allowIncompatibleUpdate: true\n  });\n\n  main.captureAndExit(\"=> Errors while creating your project\", function () {\n    projectContext.readProjectMetadata();\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    projectContext.releaseFile.write(\n      release.current.isCheckout() ? \"none\" : release.current.name);\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Also, write package version constraints from the current release\n    // If we are on a checkout, we don't need to do this as running from\n    // checkout still pins all package versions and if the user updates\n    // to a real release, the packages file will subsequently get updated\n    if (!release.current.isCheckout()) {\n      projectContext.projectConstraintsFile\n        .updateReleaseConstraints(release.current._manifest);\n    }\n\n    // Any upgrader that is in this version of Meteor doesn't need to be run on\n    // this project.\n    var upgraders = require('../upgraders.js');\n    projectContext.finishedUpgraders.appendUpgraders(upgraders.allUpgraders());\n\n    projectContext.prepareProjectForBuild();\n  });\n  // No need to display the PackageMapDelta here, since it would include all of\n  // the packages (or maybe an unpredictable subset based on what happens to be\n  // in the template's versions file).\n\n  require(\"./default-npm-deps.js\").install(appPath);\n\n  var appNameToDisplay = appPathAsEntered === \".\" ?\n    \"current directory\" : `'${appPathAsEntered}'`;\n\n  var message = `Created a new Meteor app in ${appNameToDisplay}`;\n\n  message += \".\";\n\n  Console.info(message + \"\\n\");\n\n  // Print a nice message telling people we created their new app, and what to\n  // do next.\n  Console.info(\"To run your new app:\");\n\n  if (appPathAsEntered !== \".\") {\n    // Wrap the app path in quotes if it contains spaces\n    const appPathWithQuotesIfSpaces = appPathAsEntered.indexOf(' ') === -1 ?\n      appPathAsEntered :\n      `'${appPathAsEntered}'`;\n\n    // Don't tell people to 'cd .'\n    Console.info(\n      Console.command(\"cd \" + appPathWithQuotesIfSpaces),\n        Console.options({ indent: 2 }));\n  }\n\n  Console.info(\n    Console.command(\"meteor\"), Console.options({ indent: 2 }));\n\n  Console.info(\"\");\n  Console.info(\"If you are new to Meteor, try some of the learning resources here:\");\n  Console.info(\n    Console.url(\"https://www.meteor.com/tutorials\"),\n      Console.options({ indent: 2 }));\n\n  if (!options.full && !options.bare){\n    // Notice people about --bare and --full\n    const bareOptionNotice = 'meteor create --bare to create an empty app.';\n    const fullOptionNotice = 'meteor create --full to create a scaffolded app.';\n\n    Console.info(\"\");\n    Console.info(bareOptionNotice + '\\n' + fullOptionNotice);\n  }\n\n  Console.info(\"\");\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// build\n///////////////////////////////////////////////////////////////////////////////\n\nvar buildCommands = {\n  minArgs: 1,\n  maxArgs: 1,\n  requiresApp: true,\n  options: {\n    debug: { type: Boolean },\n    directory: { type: Boolean },\n    architecture: { type: String },\n    \"server-only\": { type: Boolean },\n    'mobile-settings': { type: String },\n    server: { type: String },\n    // XXX COMPAT WITH 0.9.2.2\n    \"mobile-port\": { type: String },\n    // Indicates whether these build is running headless, e.g. in a\n    // continuous integration building environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    'allow-incompatible-update': { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n};\n\nmain.registerCommand(_.extend({ name: 'build' }, buildCommands),\n  function (options) {\n    return buildCommand(options);\n});\n\n// Deprecated -- identical functionality to 'build' with one exception: it\n// doesn't output a directory with all builds but rather only one tarball with\n// server/client programs.\n// XXX COMPAT WITH 0.9.1.1\nmain.registerCommand(_.extend({ name: 'bundle', hidden: true\n                              }, buildCommands),\n    function (options) {\n\n      Console.error(\n      \"This command has been deprecated in favor of \" +\n      Console.command(\"'meteor build'\") + \", which allows you to \" +\n      \"build for multiple platforms and outputs a directory instead of \" +\n      \"a single tarball. See \" + Console.command(\"'meteor help build'\") + \" \" +\n      \"for more information.\");\n      Console.error();\n      return buildCommand(_.extend(options, { _bundleOnly: true }));\n});\n\nvar buildCommand = function (options) {\n  Console.setVerbose(!!options.verbose);\n  if (options.headless) {\n    // There's no point in spinning the spinner when we're running\n    // automated builds.\n    Console.setHeadless(true);\n  }\n  // XXX output, to stderr, the name of the file written to (for human\n  // comfort, especially since we might change the name)\n\n  // XXX name the root directory in the bundle based on the basename\n  // of the file, not a constant 'bundle' (a bit obnoxious for\n  // machines, but worth it for humans)\n\n  // Error handling for options.architecture. We must pass in only one of three\n  // architectures. See archinfo.js for more information on what the\n  // architectures are, what they mean, et cetera.\n  if (options.architecture &&\n      !_.has(archinfo.VALID_ARCHITECTURES, options.architecture)) {\n    showInvalidArchMsg(options.architecture);\n    return 1;\n  }\n  var bundleArch = options.architecture || archinfo.host();\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    serverArchitectures: _.uniq([bundleArch, archinfo.host()]),\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  // _bundleOnly implies serverOnly\n  const serverOnly = options._bundleOnly || !!options['server-only'];\n\n  // options['mobile-settings'] is used to set the initial value of\n  // `Meteor.settings` on mobile apps. Pass it on to options.settings,\n  // which is used in this command.\n  if (options['mobile-settings']) {\n    options.settings = options['mobile-settings'];\n  }\n\n  const appName = files.pathBasename(options.appDir);\n\n  let cordovaPlatforms;\n  let parsedMobileServerUrl;\n  if (!serverOnly) {\n    cordovaPlatforms = projectContext.platformList.getCordovaPlatforms();\n\n    if (process.platform !== 'darwin' && _.contains(cordovaPlatforms, 'ios')) {\n      cordovaPlatforms = _.without(cordovaPlatforms, 'ios');\n      Console.warn(\"Currently, it is only possible to build iOS apps \\\non an OS X system.\");\n    }\n\n    if (!_.isEmpty(cordovaPlatforms)) {\n      // XXX COMPAT WITH 0.9.2.2 -- the --mobile-port option is deprecated\n      const mobileServerOption = options.server || options[\"mobile-port\"];\n      if (!mobileServerOption) {\n        // For Cordova builds, require '--server'.\n        // XXX better error message?\n        Console.error(\n          \"Supply the server hostname and port in the --server option \" +\n            \"for mobile app builds.\");\n        return 1;\n      }\n      parsedMobileServerUrl = parseMobileServerOption(mobileServerOption,\n        'server');\n    }\n  } else {\n    cordovaPlatforms = [];\n  }\n\n  var buildDir = projectContext.getProjectLocalDirectory('build_tar');\n  var outputPath = files.pathResolve(options.args[0]); // get absolute path\n\n  // Warn if people try to build inside the app directory.\n  var relative = files.pathRelative(options.appDir, outputPath);\n  // We would like the output path to be outside the app directory, which\n  // means the first step to getting there is going up a level.\n  if (relative.substr(0, 2) !== '..') {\n    Console.warn();\n    Console.labelWarn(`The output directory is under your source tree.\nYour generated files may get interpreted as source code!\nConsider building into a different directory instead\n${Console.command(\"meteor build ../output\")}`,\n      Console.options({ indent: 2 }));\n    Console.warn();\n  }\n\n  var bundlePath = options.directory ?\n      (options._bundleOnly ? outputPath :\n      files.pathJoin(outputPath, 'bundle')) :\n      files.pathJoin(buildDir, 'bundle');\n\n  stats.recordPackages({\n    what: \"sdk.bundle\",\n    projectContext: projectContext\n  });\n\n  var bundler = require('../isobuild/bundler.js');\n  var bundleResult = bundler.bundle({\n    projectContext: projectContext,\n    outputPath: bundlePath,\n    buildOptions: {\n      minifyMode: options.debug ? 'development' : 'production',\n      // XXX is this a good idea, or should linux be the default since\n      //     that's where most people are deploying\n      //     default?  i guess the problem with using DEPLOY_ARCH as default\n      //     is then 'meteor bundle' with no args fails if you have any local\n      //     packages with binary npm dependencies\n      serverArch: bundleArch,\n      buildMode: options.debug ? 'development' : 'production',\n    },\n  });\n  if (bundleResult.errors) {\n    Console.error(\"Errors prevented bundling:\");\n    Console.error(bundleResult.errors.formatMessages());\n    return 1;\n  }\n\n  if (!options._bundleOnly) {\n    files.mkdir_p(outputPath);\n  }\n\n  if (!options.directory) {\n    main.captureAndExit('', 'creating server tarball', () => {\n      try {\n        var outputTar = options._bundleOnly ? outputPath :\n          files.pathJoin(outputPath, appName + '.tar.gz');\n\n        files.createTarball(files.pathJoin(buildDir, 'bundle'), outputTar);\n      } catch (err) {\n        buildmessage.exception(err);\n        files.rm_recursive(buildDir);\n      }\n    });\n  }\n\n  if (!_.isEmpty(cordovaPlatforms)) {\n\n    let cordovaProject;\n    main.captureAndExit('', () => {\n\n      import {\n        ensureDevBundleDependencies,\n        pluginVersionsFromStarManifest,\n        displayNameForPlatform,\n      } from '../cordova';\n\n      ensureDevBundleDependencies();\n\n      buildmessage.enterJob({ title: \"preparing Cordova project\" }, () => {\n        import { CordovaProject } from '../cordova/project.js';\n\n        cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl) });\n        if (buildmessage.jobHasMessages()) return;\n\n        const pluginVersions = pluginVersionsFromStarManifest(\n          bundleResult.starManifest);\n\n        cordovaProject.prepareFromAppBundle(bundlePath, pluginVersions);\n      });\n\n      for (platform of cordovaPlatforms) {\n        buildmessage.enterJob(\n          { title: `building Cordova app for \\\n${displayNameForPlatform(platform)}` }, () => {\n            let buildOptions = { release: !options.debug };\n\n            const buildPath = files.pathJoin(\n              projectContext.getProjectLocalDirectory('cordova-build'),\n              'platforms', platform);\n            const platformOutputPath = files.pathJoin(outputPath, platform);\n\n            // Prepare the project once again to ensure that it is up to date\n            // with current build options.  For example, --server=example.com\n            // is utilized in the Cordova builder to write boilerplate HTML and\n            // various config.xml settings (e.g. access policies)\n            if (platform === 'ios') {\n              cordovaProject.prepareForPlatform(platform, buildOptions);\n            } else if (platform === 'android') {\n              cordovaProject.buildForPlatform(platform, buildOptions);\n            }\n\n            // Once prepared, copy the bundle to the final location.\n            files.cp_r(buildPath,\n              files.pathJoin(platformOutputPath, 'project'));\n\n            // Make some platform-specific adjustments to the resulting build.\n            if (platform === 'ios') {\n              files.writeFile(\n                files.pathJoin(platformOutputPath, 'README'),\n`This is an auto-generated XCode project for your iOS application.\n\nInstructions for publishing your iOS app to App Store can be found at:\nhttps://guide.meteor.com/mobile.html#submitting-ios\n`, \"utf8\");\n            } else if (platform === 'android') {\n              const apkPath = files.pathJoin(buildPath, 'build/outputs/apk',\n                options.debug ? 'android-debug.apk' : 'android-release-unsigned.apk')\n\n              if (files.exists(apkPath)) {\n              files.copyFile(apkPath, files.pathJoin(platformOutputPath,\n                options.debug ? 'debug.apk' : 'release-unsigned.apk'));\n              }\n\n              files.writeFile(\n                files.pathJoin(platformOutputPath, 'README'),\n`This is an auto-generated Gradle project for your Android application.\n\nInstructions for publishing your Android app to Play Store can be found at:\nhttps://guide.meteor.com/mobile.html#submitting-android\n`, \"utf8\");\n            }\n        });\n      }\n    });\n  }\n\n  files.rm_recursive(buildDir);\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// lint\n///////////////////////////////////////////////////////////////////////////////\nmain.registerCommand({\n  name: 'lint',\n  maxArgs: 0,\n  requiresAppOrPackage: true,\n  options: {\n    'allow-incompatible-updates': { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  const {packageDir, appDir} = options;\n\n  let projectContext = null;\n\n  // if the goal is to lint the package, don't include the whole app\n  if (packageDir) {\n    // similar to `meteor publish`, create a fake project\n    const tempProjectDir = files.mkdtemp('meteor-package-build');\n    projectContext = new projectContextModule.ProjectContext({\n      projectDir: tempProjectDir,\n      explicitlyAddedLocalPackageDirs: [packageDir],\n      packageMapFilename: files.pathJoin(packageDir, '.versions'),\n      alwaysWritePackageMap: true,\n      forceIncludeCordovaUnibuild: true,\n      allowIncompatibleUpdate: options['allow-incompatible-update'],\n      lintPackageWithSourceRoot: packageDir\n    });\n\n    main.captureAndExit(\"=> Errors while setting up package:\", () =>\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog()\n    );\n    const versionRecord =\n        projectContext.localCatalog.getVersionBySourceRoot(packageDir);\n    if (! versionRecord) {\n      throw Error(\"explicitly added local package dir missing?\");\n    }\n    const packageName = versionRecord.packageName;\n    const constraint = utils.parsePackageConstraint(packageName);\n    projectContext.projectConstraintsFile.removeAllPackages();\n    projectContext.projectConstraintsFile.addConstraints([constraint]);\n  }\n\n  // linting the app\n  if (! projectContext && appDir) {\n    projectContext = new projectContextModule.ProjectContext({\n      projectDir: appDir,\n      serverArchitectures: [archinfo.host()],\n      allowIncompatibleUpdate: options['allow-incompatible-update'],\n      lintAppAndLocalPackages: true\n    });\n  }\n\n\n  main.captureAndExit(\"=> Errors prevented the build:\", () => {\n    projectContext.prepareProjectForBuild();\n  });\n\n  const bundlePath = projectContext.getProjectLocalDirectory('build');\n  const bundler = require('../isobuild/bundler.js');\n  const bundle = bundler.bundle({\n    projectContext: projectContext,\n    outputPath: null,\n    buildOptions: {\n      minifyMode: 'development'\n    }\n  });\n\n  const displayName = options.packageDir ? 'package' : 'app';\n  if (bundle.errors) {\n    Console.error(\n      `=> Errors building your ${displayName}:\\n\\n${bundle.errors.formatMessages()}`\n    );\n    throw new main.ExitWithCode(2);\n  }\n\n  if (bundle.warnings) {\n    Console.warn(bundle.warnings.formatMessages());\n    return 1;\n  }\n\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// mongo\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'mongo',\n  maxArgs: 1,\n  options: {\n    url: { type: Boolean, short: 'U' }\n  },\n  requiresApp: function (options) {\n    return options.args.length === 0;\n  },\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var mongoUrl;\n  var usedMeteorAccount = false;\n\n  if (options.args.length === 0) {\n    // localhost mode\n    var findMongoPort =\n      require('../runners/run-mongo.js').findMongoPort;\n    var mongoPort = findMongoPort(files.pathJoin(options.appDir, \".meteor\", \"local\", \"db\"));\n\n    // XXX detect the case where Meteor is running, but MONGO_URL was\n    // specified?\n\n    if (! mongoPort) {\n      Console.info(\"mongo: Meteor isn't running a local MongoDB server.\");\n      Console.info();\n      Console.info(`\\\nThis command only works while Meteor is running your application locally. \\\nStart your application first with 'meteor' and then run this command in a new \\\nterminal. This error will also occur if you asked Meteor to use a different \\\nMongoDB server with $MONGO_URL when you ran your application.`);\n      Console.info();\n      Console.info(`\\\nIf you're trying to connect to the database of an app you deployed with \\\n${Console.command(\"'meteor deploy'\")}, specify your site's name as an argument \\\nto this command.`);\n      return 1;\n    }\n    mongoUrl = \"mongodb://127.0.0.1:\" + mongoPort + \"/meteor\";\n\n  } else {\n    // remote mode\n    var site = qualifySitename(options.args[0]);\n\n    mongoUrl = deploy.temporaryMongoUrl(site);\n    usedMeteorAccount = true;\n\n    if (! mongoUrl) {\n      // temporaryMongoUrl() will have printed an error message\n      return 1;\n    }\n  }\n  if (options.url) {\n    console.log(mongoUrl);\n  } else {\n    if (usedMeteorAccount) {\n      auth.maybePrintRegistrationLink();\n    }\n    process.stdin.pause();\n    var runMongo = require('../runners/run-mongo.js');\n    runMongo.runMongoShell(mongoUrl);\n    throw new main.WaitForExit;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// reset\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'reset',\n  // Doesn't actually take an argument, but we want to print an custom\n  // error message if they try to pass one.\n  maxArgs: 1,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (options.args.length !== 0) {\n    Console.error(\"meteor reset only affects the locally stored database.\");\n    Console.error();\n    Console.error(\"To reset a deployed application use\");\n    Console.error(\n      Console.command(\"meteor deploy --delete appname\"), Console.options({ indent: 2 }));\n    Console.error(\"followed by\");\n    Console.error(\n      Console.command(\"meteor deploy appname\"), Console.options({ indent: 2 }));\n    return 1;\n  }\n\n  if (process.env.MONGO_URL) {\n    Console.info(\"As a precaution, meteor reset only clears the local database that is \" +\n                 \"provided by meteor run for development. The database specified with \" +\n                 \"MONGO_URL will NOT be reset.\");\n  }\n\n  // XXX detect the case where Meteor is running the app, but\n  // MONGO_URL was set, so we don't see a Mongo process\n  var findMongoPort = require('../runners/run-mongo.js').findMongoPort;\n  var isRunning = !! findMongoPort(files.pathJoin(options.appDir, \".meteor\", \"local\", \"db\"));\n  if (isRunning) {\n    Console.error(\"reset: Meteor is running.\");\n    Console.error();\n    Console.error(\n      \"This command does not work while Meteor is running your application.\",\n      \"Exit the running Meteor development server.\");\n    return 1;\n  }\n\n  return files.rm_recursive_async(\n    files.pathJoin(options.appDir, '.meteor', 'local')\n  ).then(() => {\n    Console.info(\"Project reset.\");\n  });\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// deploy\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'deploy',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    'delete': { type: Boolean, short: 'D' },\n    debug: { type: Boolean },\n    settings: { type: String, short: 's' },\n    // No longer supported, but we still parse it out so that we can\n    // print a custom error message.\n    password: { type: String },\n    // Override architecture to deploy whatever stuff we have locally, even if\n    // it contains binary packages that should be incompatible. A hack to allow\n    // people to deploy from checkout or do other weird shit. We are not\n    // responsible for the consequences.\n    'override-architecture-with-local' : { type: Boolean },\n    'allow-incompatible-update': { type: Boolean }\n  },\n  allowUnrecognizedOptions: true,\n  requiresApp: function (options) {\n    return ! options.delete;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options, {rawOptions}) {\n  var site = options.args[0];\n\n  if (options.delete) {\n    return deploy.deleteApp(site);\n  }\n\n  if (options.password) {\n    Console.error(\n      \"Setting passwords on apps is no longer supported. Now there are \" +\n        \"user accounts and your apps are associated with your account so \" +\n        \"that only you (and people you designate) can access them. See the \" +\n        Console.command(\"'meteor authorized'\") + \" command.\");\n    return 1;\n  }\n\n  var loggedIn = auth.isLoggedIn();\n  if (! loggedIn) {\n    Console.error(\n      \"You must be logged in to deploy, just enter your email address.\");\n    Console.error();\n    if (! auth.registerOrLogIn()) {\n      return 1;\n    }\n  }\n\n  // Override architecture iff applicable.\n  var buildArch = DEPLOY_ARCH;\n  if (options['override-architecture-with-local']) {\n    Console.warn();\n    Console.labelWarn(\n      \"OVERRIDING DEPLOY ARCHITECTURE WITH LOCAL ARCHITECTURE.\",\n      \"If your app contains binary code, it may break in unexpected \" +\n      \"and terrible ways.\");\n    buildArch = archinfo.host();\n  }\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    serverArchitectures: _.uniq([buildArch, archinfo.host()]),\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  var buildOptions = {\n    minifyMode: options.debug ? 'development' : 'production',\n    buildMode: options.debug ? 'development' : 'production',\n    serverArch: buildArch\n  };\n\n  var deployResult = deploy.bundleAndDeploy({\n    projectContext: projectContext,\n    site: site,\n    settingsFile: options.settings,\n    buildOptions: buildOptions,\n    rawOptions\n  });\n\n  if (deployResult === 0) {\n    auth.maybePrintRegistrationLink({\n      leadingNewline: true,\n      // If the user was already logged in at the beginning of the\n      // deploy, then they've already been prompted to set a password\n      // at least once before, so we use a slightly different message.\n      firstTime: ! loggedIn\n    });\n  }\n\n  return deployResult;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// logs\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'logs',\n  minArgs: 1,\n  maxArgs: 1,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var site = qualifySitename(options.args[0]);\n\n  return deploy.logs(site);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// authorized\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'authorized',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    add: { type: String, short: \"a\" },\n    transfer: { type: String, short: \"t\" },\n    remove: { type: String, short: \"r\" },\n    list: { type: Boolean }\n  },\n  pretty: function (options) {\n    // pretty if we're mutating; plain if we're listing (which is more likely to\n    // be used by scripts)\n    return options.add || options.remove || options.transfer;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  if (_.keys(_.pick(options, 'add', 'remove', 'transfer', 'list')).length > 1) {\n    Console.error(\n      \"Sorry, you can only perform one authorization operation at a time.\");\n    return 1;\n  }\n\n  auth.pollForRegistrationCompletion();\n  var site = qualifySitename(options.args[0]);\n\n  if (! auth.isLoggedIn()) {\n    Console.error(\n      \"You must be logged in for that. Try \" +\n      Console.command(\"'meteor login'\"));\n    return 1;\n  }\n\n  if (options.add) {\n    return deploy.changeAuthorized(site, \"add\", options.add);\n  } else if (options.remove) {\n    return deploy.changeAuthorized(site, \"remove\", options.remove);\n  } else if (options.transfer) {\n    return deploy.changeAuthorized(site, \"transfer\", options.transfer);\n  } else {\n    return deploy.listAuthorized(site);\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// test and test-packages\n///////////////////////////////////////////////////////////////////////////////\n\ntestCommandOptions = {\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  options: {\n    port: { type: String, short: \"p\", default: DEFAULT_PORT },\n    'mobile-server': { type: String },\n    // XXX COMPAT WITH 0.9.2.2\n    'mobile-port': { type: String },\n    'debug-port': { type: String },\n    ...inspectOptions,\n    'no-release-check': { type: Boolean },\n    deploy: { type: String },\n    production: { type: Boolean },\n    settings: { type: String, short: 's' },\n    // Indicates whether these self-tests are running headless, e.g. in a\n    // continuous integration testing environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    'raw-logs': { type: Boolean },\n\n    // Undocumented. See #Once\n    once: { type: Boolean },\n    // Undocumented. To ensure that QA covers both\n    // PollingObserveDriver and OplogObserveDriver, this option\n    // disables oplog for tests.  (It still creates a replset, it just\n    // doesn't do oplog tailing.)\n    'disable-oplog': { type: Boolean },\n    // Undocumented flag to use a different test driver.\n    'driver-package': { type: String },\n\n    // Sets the path of where the temp app should be created\n    'test-app-path': { type: String },\n\n    // Undocumented, runs tests under selenium\n    'selenium': { type: Boolean },\n    'selenium-browser': { type: String },\n\n    // Undocumented.  Usually we just show a banner saying 'Tests' instead of\n    // the ugly path to the temporary test directory, but if you actually want\n    // to see it you can ask for it.\n    'show-test-app-path': { type: Boolean },\n\n    // hard-coded options with all known Cordova platforms\n    ios: { type: Boolean },\n    'ios-device': { type: Boolean },\n    android: { type: Boolean },\n    'android-device': { type: Boolean },\n\n    // This could theoretically be useful/necessary in conjunction with\n    // --test-app-path.\n    'allow-incompatible-update': { type: Boolean },\n\n    // Don't print linting messages for tested packages\n    'no-lint': { type: Boolean },\n\n    // allow excluding packages when testing all packages.\n    // should be a comma-separated list of package names.\n    'exclude': { type: String },\n\n    // one of the following must be true\n    'test': { type: Boolean, 'default': false },\n    'test-packages': { type: Boolean, 'default': false },\n\n    // For 'test-packages': Run in \"full app\" mode\n    'full-app': { type: Boolean, 'default': false },\n\n    'extra-packages': { type: String }\n  }\n};\n\nmain.registerCommand(_.extend({\n  name: 'test',\n  requiresApp: true\n}, testCommandOptions), function (options) {\n  options['test'] = true;\n  return doTestCommand(options);\n});\n\nmain.registerCommand(_.extend(\n  { name: 'test-packages' },\n  testCommandOptions\n), function (options) {\n  options['test-packages'] = true;\n  return doTestCommand(options);\n});\n\nfunction doTestCommand(options) {\n  // This \"metadata\" is accessed in a few places. Using a global\n  // variable here was more expedient than navigating the many layers\n  // of abstraction across the the build process.\n  //\n  // As long as the Meteor CLI runs a single command as part of each\n  // process, this should be safe.\n  global.testCommandMetadata = {};\n\n  Console.setVerbose(!!options.verbose);\n  if (options.headless) {\n    Console.setHeadless(true);\n  }\n\n  const runTargets = parseRunTargets(_.intersection(\n    Object.keys(options), ['ios', 'ios-device', 'android', 'android-device']));\n\n  const { parsedServerUrl, parsedMobileServerUrl } =\n    parseServerOptionsForRunCommand(options, runTargets);\n\n  // Make a temporary app dir (based on the test runner app). This will be\n  // cleaned up on process exit. Using a temporary app dir means that we can\n  // run multiple \"test-packages\" commands in parallel without them stomping\n  // on each other.\n  let testRunnerAppDir;\n  const testAppPath = options['test-app-path'];\n  if (testAppPath) {\n    try {\n      if (files.mkdir_p(testAppPath, 0o700)) {\n        testRunnerAppDir = testAppPath;\n      } else {\n        Console.error(\n          'The specified --test-app-path directory could not be used, as ' +\n          `\"${testAppPath}\" already exists and it is not a directory.`\n        );\n        return 1;\n      }\n    } catch (error) {\n      Console.error(\n        'Unable to create the specified --test-app-path directory of ' +\n        `\"${testAppPath}\".`\n      );\n      throw error;\n    }\n  }\n\n  if (!testRunnerAppDir) {\n    testRunnerAppDir = files.mkdtemp('meteor-test-run');\n  }\n\n  // Download packages for our architecture, and for the deploy server's\n  // architecture if we're deploying.\n  var serverArchitectures = [archinfo.host()];\n  if (options.deploy && DEPLOY_ARCH !== archinfo.host()) {\n    serverArchitectures.push(DEPLOY_ARCH);\n  }\n\n  if (options['raw-logs']) {\n    runLog.setRawLogs(true);\n  }\n\n  var includePackages = [];\n  if (options['extra-packages']) {\n    includePackages = options['extra-packages'].trim().split(/\\s*,\\s*/);\n  }\n\n  if (options['driver-package']) {\n    includePackages.push(\n      global.testCommandMetadata.driverPackage =\n        options['driver-package'].trim()\n    );\n  } else if (options[\"test-packages\"]) {\n    includePackages.push(\n      global.testCommandMetadata.driverPackage = \"test-in-browser\"\n    );\n  }\n\n  var projectContextOptions = {\n    serverArchitectures: serverArchitectures,\n    allowIncompatibleUpdate: options['allow-incompatible-update'],\n    lintAppAndLocalPackages: !options['no-lint'],\n    includePackages: includePackages\n  };\n  var projectContext;\n\n  if (options[\"test-packages\"]) {\n    projectContextOptions.projectDir = testRunnerAppDir;\n    projectContextOptions.projectDirForLocalPackages = options.appDir;\n\n    try {\n      require(\"./default-npm-deps.js\").install(testRunnerAppDir);\n    } catch (error) {\n      if (error.code === 'EACCES' && options['test-app-path']) {\n        Console.error(\n          'The specified --test-app-path directory of ' +\n          `\"${testRunnerAppDir}\" exists, but the current user does not have ` +\n          `read/write permission in it.`\n        );\n      }\n      throw error;\n    }\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Find any packages mentioned by a path instead of a package name. We will\n    // load them explicitly into the catalog.\n    var packagesByPath = _.filter(options.args, function (p) {\n      return p.indexOf('/') !== -1;\n    });\n    // If we're currently in an app, we still want to use the real app's\n    // packages subdirectory, not the test runner app's empty one.\n    projectContextOptions.explicitlyAddedLocalPackageDirs = packagesByPath;\n\n    // XXX Because every run uses a new app with its own IsopackCache directory,\n    //     this always does a clean build of all packages. Maybe we can speed up\n    //     repeated test-packages calls with some sort of shared or semi-shared\n    //     isopack cache that's specific to test-packages?  See #3012.\n    projectContext = new projectContextModule.ProjectContext(projectContextOptions);\n\n    main.captureAndExit(\"=> Errors while initializing project:\", function () {\n      // We're just reading metadata here --- we'll wait to do the full build\n      // preparation until after we've started listening on the proxy, etc.\n      projectContext.readProjectMetadata();\n    });\n\n    main.captureAndExit(\"=> Errors while setting up tests:\", function () {\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog();\n    });\n\n    // Overwrite .meteor/release.\n    projectContext.releaseFile.write(\n      release.current.isCheckout() ? \"none\" : release.current.name);\n\n    var packagesToAdd = getTestPackageNames(projectContext, options.args);\n\n    // filter out excluded packages\n    var excludedPackages = options.exclude && options.exclude.split(',');\n    if (excludedPackages) {\n      packagesToAdd = _.filter(packagesToAdd, function (p) {\n        return ! _.some(excludedPackages, function (excluded) {\n          return p.replace(/^local-test:/, '') === excluded;\n        });\n      });\n    }\n\n    // Use the driver package if running `meteor test-packages`. For\n    // `meteor test`, the driver package is expected to already\n    // have been added to the app.\n    packagesToAdd.unshift(global.testCommandMetadata.driverPackage);\n\n    // Also, add `autoupdate` so that you don't have to manually refresh the tests\n    packagesToAdd.unshift(\"autoupdate\");\n\n    var constraintsToAdd = _.map(packagesToAdd, function (p) {\n      return utils.parsePackageConstraint(p);\n    });\n    // Add the packages to our in-memory representation of .meteor/packages.  (We\n    // haven't yet resolved constraints, so this will affect constraint\n    // resolution.)  This will get written to disk once we prepareProjectForBuild,\n    // either in the Cordova code below, right before deploying below, or in the\n    // app runner.  (Note that removeAllPackages removes any comments from\n    // .meteor/packages, but that's OK since this isn't a real user project.)\n    projectContext.projectConstraintsFile.removeAllPackages();\n    projectContext.projectConstraintsFile.addConstraints(constraintsToAdd);\n    // Write these changes to disk now, so that if the first attempt to prepare\n    // the project for build hits errors, we don't lose them on\n    // projectContext.reset.\n    projectContext.projectConstraintsFile.writeIfModified();\n  } else if (options[\"test\"]) {\n    if (!options['driver-package']) {\n      throw new Error(\"You must specify a driver package with --driver-package\");\n    }\n\n    global.testCommandMetadata.driverPackage = options['driver-package'];\n\n    global.testCommandMetadata.isAppTest = options['full-app'];\n    global.testCommandMetadata.isTest = !global.testCommandMetadata.isAppTest;\n\n    projectContextOptions.projectDir = options.appDir;\n    projectContextOptions.projectLocalDir = files.pathJoin(testRunnerAppDir, '.meteor', 'local');\n\n    // Copy the existing build and isopacks to speed up the initial start\n    function copyDirIntoTestRunnerApp(allowSymlink, ...parts) {\n      // Depending on whether the user has run `meteor run` or other commands, they\n      // may or may not exist yet\n      const appDirPath = files.pathJoin(options.appDir, ...parts);\n      const testDirPath = files.pathJoin(testRunnerAppDir, ...parts);\n\n      files.mkdir_p(appDirPath);\n      files.mkdir_p(files.pathDirname(testDirPath));\n\n      if (allowSymlink) {\n        // Windows can create junction links without administrator\n        // privileges since both paths refer to directories.\n        files.symlink(appDirPath, testDirPath, \"junction\");\n      } else {\n        files.cp_r(appDirPath, testDirPath, {\n          preserveSymlinks: true\n        });\n      }\n    }\n\n    copyDirIntoTestRunnerApp(false, '.meteor', 'local', 'build');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'bundler-cache');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'isopacks');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'plugin-cache');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'shell');\n\n    projectContext = new projectContextModule.ProjectContext(projectContextOptions);\n\n    main.captureAndExit(\"=> Errors while setting up tests:\", function () {\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog();\n    });\n  } else {\n    throw new Error(\"Unexpected: neither test-packages nor test\");\n  }\n\n  // The rest of the projectContext preparation process will happen inside the\n  // runner, once the proxy is listening. The changes we made were persisted to\n  // disk, so projectContext.reset won't make us forget anything.\n\n  let cordovaRunner;\n\n  if (!_.isEmpty(runTargets)) {\n    function prepareCordovaProject() {\n      main.captureAndExit('', 'preparing Cordova project', () => {\n        import { CordovaProject } from '../cordova/project.js';\n\n        const cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl) });\n        if (buildmessage.jobHasMessages()) return;\n\n        cordovaRunner = new CordovaRunner(cordovaProject, runTargets);\n        projectContext.platformList.write(cordovaRunner.platformsForRunTargets);\n        cordovaRunner.checkPlatformsForRunTargets();\n      });\n    }\n\n    import { ensureDevBundleDependencies } from '../cordova';\n    ensureDevBundleDependencies();\n    prepareCordovaProject();\n  }\n\n  options.cordovaRunner = cordovaRunner;\n\n  return runTestAppForPackages(projectContext, _.extend(\n    options,\n    {\n      mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n      proxyPort: parsedServerUrl.port,\n      proxyHost: parsedServerUrl.hostname,\n    }\n  ));\n}\n\n// Returns the \"local-test:*\" package names for the given package names (or for\n// all local packages if packageNames is empty/unspecified).\nvar getTestPackageNames = function (projectContext, packageNames) {\n  var packageNamesSpecifiedExplicitly = ! _.isEmpty(packageNames);\n  if (_.isEmpty(packageNames)) {\n    // If none specified, test all local packages. (We don't have tests for\n    // non-local packages.)\n    packageNames = projectContext.localCatalog.getAllPackageNames();\n  }\n  var testPackages = [];\n  main.captureAndExit(\"=> Errors while collecting tests:\", function () {\n    _.each(packageNames, function (p) {\n      buildmessage.enterJob(\"trying to test package `\" + p + \"`\", function () {\n        // If it's a package name, look it up the normal way.\n        if (p.indexOf('/') === -1) {\n          if (p.indexOf('@') !== -1) {\n            buildmessage.error(\n              \"You may not specify versions for local packages: \" + p );\n            return;  // recover by ignoring\n          }\n          // Check to see if this is a real local package, and if it is a real\n          // local package, if it has tests.\n          var version = projectContext.localCatalog.getLatestVersion(p);\n          if (! version) {\n            buildmessage.error(\"Not a known local package, cannot test\");\n          } else if (version.testName) {\n            testPackages.push(version.testName);\n          } else if (packageNamesSpecifiedExplicitly) {\n            // It's only an error to *ask* to test a package with no tests, not\n            // to come across a package with no tests when you say \"test all\n            // packages\".\n            buildmessage.error(\"Package has no tests\");\n          }\n        } else {\n          // Otherwise, it's a directory; find it by source root.\n          version = projectContext.localCatalog.getVersionBySourceRoot(\n            files.pathResolve(p));\n          if (! version) {\n            throw Error(\"should have been caught when initializing catalog?\");\n          }\n          if (version.testName) {\n            testPackages.push(version.testName);\n          }\n          // It is not an error to mention a package by directory that is a\n          // package but has no tests; this means you can run `meteor\n          // test-packages $APP/packages/*` without having to worry about the\n          // packages that don't have tests.\n        }\n      });\n    });\n  });\n\n  return testPackages;\n};\n\nvar runTestAppForPackages = function (projectContext, options) {\n  var buildOptions = {\n    minifyMode: options.production ? 'production' : 'development'\n  };\n  buildOptions.buildMode = \"test\";\n\n  if (options.deploy) {\n    // Run the constraint solver and build local packages.\n    main.captureAndExit(\"=> Errors while initializing project:\", function () {\n      projectContext.prepareProjectForBuild();\n    });\n    // No need to display the PackageMapDelta here, since it would include all\n    // of the packages!\n\n    buildOptions.serverArch = DEPLOY_ARCH;\n    return deploy.bundleAndDeploy({\n      projectContext: projectContext,\n      site: options.deploy,\n      settingsFile: options.settings,\n      buildOptions: buildOptions,\n      recordPackageUsage: false\n    });\n  } else {\n    var runAll = require('../runners/run-all.js');\n    return runAll.run({\n      projectContext: projectContext,\n      proxyPort: options.proxyPort,\n      proxyHost: options.proxyHost,\n      ...normalizeInspectOptions(options),\n      disableOplog: options['disable-oplog'],\n      settingsFile: options.settings,\n      testMetadata: global.testCommandMetadata,\n      banner: options['show-test-app-path'] ? null : \"Tests\",\n      buildOptions: buildOptions,\n      rootUrl: process.env.ROOT_URL,\n      mongoUrl: process.env.MONGO_URL,\n      oplogUrl: process.env.MONGO_OPLOG_URL,\n      mobileServerUrl: options.mobileServerUrl,\n      once: options.once,\n      noReleaseCheck: options['no-release-check'] || process.env.METEOR_NO_RELEASE_CHECK,\n      recordPackageUsage: false,\n      selenium: options.selenium,\n      seleniumBrowser: options['selenium-browser'],\n      cordovaRunner: options.cordovaRunner,\n      // On the first run, we shouldn't display the delta between \"no packages\n      // in the temp app\" and \"all the packages we're testing\". If we make\n      // changes and reload, though, it's fine to display them.\n      omitPackageMapDeltaDisplayOnFirstRun: true\n    });\n  }\n};\n\n\n\n///////////////////////////////////////////////////////////////////////////////\n// rebuild\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'rebuild',\n  maxArgs: Infinity,\n  hidden: true,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never(),\n  'allow-incompatible-update': { type: Boolean }\n}, function (options) {\n  var projectContextModule = require('../project-context.js');\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    forceRebuildPackages: options.args.length ? options.args : true,\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while rebuilding packages:\", function () {\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  Console.info(\"Packages rebuilt.\");\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// login\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'login',\n  options: {\n    email: { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return auth.loginCommand(_.extend({\n    overwriteExistingToken: true\n  }, options));\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// logout\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'logout',\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return auth.logoutCommand(options);\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// whoami\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'whoami',\n  catalogRefresh: new catalog.Refresh.Never(),\n  pretty: false\n}, function (options) {\n  return auth.whoAmICommand(options);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// organizations\n///////////////////////////////////////////////////////////////////////////////\n\nvar loggedInAccountsConnectionOrPrompt = function (action) {\n  var token = auth.getSessionToken(config.getAccountsDomain());\n  if (! token) {\n    Console.error(\"You must be logged in to \" + action + \".\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n  }\n\n  token = auth.getSessionToken(config.getAccountsDomain());\n  var conn = auth.loggedInAccountsConnection(token);\n  if (conn === null) {\n    // Server rejected our token.\n    Console.error(\"You must be logged in to \" + action + \".\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n    token = auth.getSessionToken(config.getAccountsDomain());\n    conn = auth.loggedInAccountsConnection(token);\n  }\n\n  return conn;\n};\n\n// List the organizations of which the current user is a member.\nmain.registerCommand({\n  name: 'admin list-organizations',\n  minArgs: 0,\n  maxArgs: 0,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  var token = auth.getSessionToken(config.getAccountsDomain());\n  if (! token) {\n    Console.error(\"You must be logged in to list your organizations.\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n  }\n\n  var url = config.getAccountsApiUrl() + \"/organizations\";\n  try {\n    var result = httpHelpers.request({\n      url: url,\n      method: \"GET\",\n      useSessionHeader: true,\n      useAuthHeader: true\n    });\n    var body = JSON.parse(result.body);\n  } catch (err) {\n    Console.error(\"Error listing organizations.\");\n    return 1;\n  }\n\n  if (result.response.statusCode === 401 &&\n      body && body.error === \"invalid_credential\") {\n    Console.error(\"You must be logged in to list your organizations.\");\n    // XXX It would be nice to do a username/password prompt here like\n    // we do for the other orgs commands.\n    return 1;\n  }\n\n  if (result.response.statusCode !== 200 ||\n      ! body || ! body.organizations) {\n    Console.error(\"Error listing organizations.\");\n    return 1;\n  }\n\n  if (body.organizations.length === 0) {\n    Console.info(\"You are not a member of any organizations.\");\n  } else {\n    Console.rawInfo(_.pluck(body.organizations, \"name\").join(\"\\n\") + \"\\n\");\n  }\n  return 0;\n});\n\nmain.registerCommand({\n  name: 'admin members',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    add: { type: String },\n    remove: { type: String },\n    list: { type: Boolean }\n  },\n  pretty: function (options) {\n    // pretty if we're mutating; plain if we're listing (which is more likely to\n    // be used by scripts)\n    return options.add || options.remove;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  if (options.add && options.remove) {\n    Console.error(\n      \"Sorry, you can only add or remove one member at a time.\");\n    throw new main.ShowUsage;\n  }\n\n  var username = options.add || options.remove;\n\n  var conn = loggedInAccountsConnectionOrPrompt(\n    username ? \"edit organizations\" : \"show an organization's members\");\n\n  if (username ) {\n    // Adding or removing members\n    try {\n      conn.call(\n        options.add ? \"addOrganizationMember\": \"removeOrganizationMember\",\n        options.args[0], username);\n    } catch (err) {\n      Console.error(\"Error \" +\n                    (options.add ? \"adding\" : \"removing\") +\n                    \" member: \" + err.reason);\n      return 1;\n    }\n\n    Console.info(username + \" \" +\n                         (options.add ? \"added to\" : \"removed from\") +\n                         \" organization \" + options.args[0] + \".\");\n  } else {\n    // Showing the members of an org\n    try {\n      var result = conn.call(\"showOrganization\", options.args[0]);\n    } catch (err) {\n      Console.error(\"Error showing organization: \" + err.reason);\n      return 1;\n    }\n\n    var members = _.pluck(result, \"username\");\n    Console.rawInfo(members.join(\"\\n\") + \"\\n\");\n  }\n\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// self-test\n///////////////////////////////////////////////////////////////////////////////\n\n// XXX we should find a way to make self-test fully self-contained, so that it\n// ignores \"packageDirs\" (ie, it shouldn't fail just because you happen to be\n// sitting in an app with packages that don't build)\n\nmain.registerCommand({\n  name: 'self-test',\n  minArgs: 0,\n  maxArgs: 1,\n  options: {\n    changed: { type: Boolean },\n    'force-online': { type: Boolean },\n    slow: { type: Boolean },\n    galaxy: { type: Boolean },\n    browserstack: { type: Boolean },\n    // Indicates whether these self-tests are running headless, e.g. in a\n    // continuous integration testing environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    history: { type: Number },\n    list: { type: Boolean },\n    file: { type: String },\n    exclude: { type: String },\n    // Skip tests w/ this tag\n    'without-tag': { type: String },\n    // Only run tests with this tag\n    'with-tag': { type: String },\n    junit: { type: String },\n  },\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (! files.inCheckout()) {\n    Console.error(\"self-test is only supported running from a checkout\");\n    return 1;\n  }\n\n  var selftest = require('../tool-testing/selftest.js');\n\n  // Auto-detect whether to skip 'net' tests, unless --force-online is passed.\n  var offline = false;\n  if (!options['force-online']) {\n    try {\n      require('../utils/http-helpers.js').getUrl(\"http://www.google.com/\");\n    } catch (e) {\n      if (e instanceof files.OfflineError) {\n        offline = true;\n      }\n    }\n  }\n\n  var compileRegexp = function (str) {\n    try {\n      return new RegExp(str);\n    } catch (e) {\n      if (!(e instanceof SyntaxError)) {\n        throw e;\n      }\n      Console.error(\"Bad regular expression: \" + str);\n      return null;\n    }\n  };\n\n  var testRegexp = undefined;\n  if (options.args.length) {\n    testRegexp = compileRegexp(options.args[0]);\n    if (! testRegexp) {\n      return 1;\n    }\n  }\n\n  var fileRegexp = undefined;\n  if (options.file) {\n    fileRegexp = compileRegexp(options.file);\n    if (! fileRegexp) {\n      return 1;\n    }\n  }\n\n  var excludeRegexp = undefined;\n  if (options.exclude) {\n    excludeRegexp = compileRegexp(options.exclude);\n    if (! excludeRegexp) {\n      return 1;\n    }\n  }\n\n  if (options.list) {\n    selftest.listTests({\n      onlyChanged: options.changed,\n      offline: offline,\n      includeSlowTests: options.slow,\n      galaxyOnly: options.galaxy,\n      testRegexp: testRegexp,\n      fileRegexp: fileRegexp,\n      'without-tag': options['without-tag'],\n      'with-tag': options['with-tag']\n    });\n\n    return 0;\n  }\n\n  var clients = {\n    browserstack: options.browserstack\n  };\n\n  if (options.headless) {\n    // There's no point in spinning the spinner when we're running\n    // continuous integration tests.\n    Console.setHeadless(true);\n  }\n\n  return selftest.runTests({\n    // filtering options\n    onlyChanged: options.changed,\n    offline: offline,\n    includeSlowTests: options.slow,\n    galaxyOnly: options.galaxy,\n    testRegexp: testRegexp,\n    fileRegexp: fileRegexp,\n    excludeRegexp: excludeRegexp,\n    // other options\n    historyLines: options.history,\n    clients: clients,\n    junit: options.junit && files.pathResolve(options.junit),\n    'without-tag': options['without-tag'],\n    'with-tag': options['with-tag']\n  });\n\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// list-sites\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'list-sites',\n  minArgs: 0,\n  maxArgs: 0,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  auth.pollForRegistrationCompletion();\n  if (! auth.isLoggedIn()) {\n    Console.error(\n      \"You must be logged in for that. Try \" +\n      Console.command(\"'meteor login'\") + \".\");\n    return 1;\n  }\n\n  return deploy.listSites();\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// admin get-machine\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'admin get-machine',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    json: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    // By default, we give you a machine for 5 minutes. You can request up to\n    // 15. (MDG can reserve machines for longer than that.)\n    minutes: { type: Number }\n  },\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  // Check that we are asking for a valid architecture.\n  var arch = options.args[0];\n  if (!_.has(archinfo.VALID_ARCHITECTURES, arch)){\n    showInvalidArchMsg(arch);\n    return 1;\n  }\n\n  // Set the minutes. We will check validity on the server.\n  var minutes = options.minutes || 5;\n\n  // In verbose mode, we let you know what is going on.\n  var maybeLog = function (string) {\n    if (options.verbose) {\n      Console.info(string);\n    }\n  };\n\n  try {\n    maybeLog(\"Logging into the get-machines server ...\");\n    var conn = authClient.loggedInConnection(\n      config.getBuildFarmUrl(),\n      config.getBuildFarmDomain(),\n      \"build-farm\");\n  } catch (err) {\n    authClient.handleConnectionError(err, \"get-machines server\");\n    return 1;\n  }\n\n  try {\n    maybeLog(\"Reserving machine ...\");\n\n    // The server returns to us an object with the following keys:\n    // username & sshKey : use this to log in.\n    // host: what you login into\n    // port: port you should use\n    // hostKey: RSA key to compare for safety.\n    var ret = conn.call('createBuildServer', arch, minutes);\n  } catch (err) {\n    authClient.handleConnectionError(err, \"build farm\");\n    return 1;\n  }\n  conn.close();\n\n  // Possibly, the user asked us to return a JSON of the data and is going to process it\n  // themselves. In that case, let's do that and exit.\n  if (options.json) {\n    var retJson = {\n      'username': ret.username,\n      'host' : ret.host,\n      'port' : ret.port,\n      'key' : ret.sshKey,\n      'hostKey' : ret.hostKey\n    };\n    Console.rawInfo(JSON.stringify(retJson, null, 2) + \"\\n\");\n    return 0;\n  }\n\n  // Record the SSH Key in a temporary file on disk and give it the permissions\n  // that ssh-agent requires it to have.\n  var tmpDir = files.mkdtemp('meteor-ssh-');\n  var idpath = tmpDir + '/id';\n  maybeLog(\"Writing ssh key to \" + idpath);\n  files.writeFile(idpath, ret.sshKey, {encoding: 'utf8', mode: 0o400});\n\n  // Add the known host key to a custom known hosts file.\n  var hostpath = tmpDir + '/host';\n  var addendum = ret.host + \" \" + ret.hostKey + \"\\n\";\n  maybeLog(\"Writing host key to \" + hostpath);\n  files.writeFile(hostpath, addendum, 'utf8');\n\n  // Finally, connect to the machine.\n  var login = ret.username + \"@\" + ret.host;\n  var maybeVerbose = options.verbose ? \"-v\" : \"-q\";\n\n  var connOptions = [\n    login,\n     \"-i\" + idpath,\n     \"-p\" + ret.port,\n     \"-oUserKnownHostsFile=\" + hostpath,\n     maybeVerbose];\n\n  var printOptions = connOptions.join(' ');\n  maybeLog(\"Connecting: \" + Console.command(\"ssh \" + printOptions));\n\n  var child_process = require('child_process');\n\n  if (arch.match(/win/)) {\n    // The ssh output from Windows machines is buggy, it can overlay your\n    // existing output on the top of the screen which is very ugly. Force the\n    // screen cleaning to assist.\n    Console.clear();\n  }\n\n  var sshCommand = child_process.spawn(\n    \"ssh\", connOptions,\n    { stdio: 'inherit' }); // Redirect spawn stdio to process\n\n  return new Promise(function (resolve) {\n    sshCommand.on('error', function (err) {\n      if (err.code === \"ENOENT\") {\n        if (process.platform === \"win32\") {\n          Console.error(\"Could not find the `ssh` command in your PATH.\",\n                        \"Please read this page about using the get-machine command on Windows:\",\n                        Console.url(\"https://github.com/meteor/meteor/wiki/Accessing-Meteor-provided-build-machines-from-Windows\"));\n        } else {\n          Console.error(\"Could not find the `ssh` command in your PATH.\");\n        }\n\n        resolve(1);\n      }\n    });\n\n    sshCommand.on('exit', function (code, signal) {\n      // XXX: We should process the signal in some way, but I am not sure we\n      // care right now.\n      resolve(signal ? 1 : code);\n    });\n  }).await();\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// admin progressbar-test\n///////////////////////////////////////////////////////////////////////////////\n\n// A test command to print a progressbar. Useful for manual testing.\nmain.registerCommand({\n  name: 'admin progressbar-test',\n  options: {\n    secs: { type: Number, default: 20 },\n    spinner: { type: Boolean, default: false }\n  },\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  buildmessage.enterJob({ title: \"A test progressbar\" }, function () {\n    var progress = buildmessage.getCurrentProgressTracker();\n    var totalProgress = { current: 0, end: options.secs, done: false };\n    var i = 0;\n    var n = options.secs;\n\n    if (options.spinner) {\n      totalProgress.end = undefined;\n    }\n\n    new Promise(function (resolve) {\n      function updateProgress() {\n        i++;\n        if (! options.spinner) {\n          totalProgress.current = i;\n        }\n\n        if (i === n) {\n          totalProgress.done = true;\n          progress.reportProgress(totalProgress);\n          resolve();\n        } else {\n          progress.reportProgress(totalProgress);\n          setTimeout(updateProgress, 1000);\n        }\n      }\n\n      setTimeout(updateProgress);\n    }).await();\n  });\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// dummy\n///////////////////////////////////////////////////////////////////////////////\n\n// Dummy test command. Used for automated testing of the command line\n// option parser.\n\nmain.registerCommand({\n  name: 'dummy',\n  options: {\n    ething: { type: String, short: \"e\", required: true },\n    port: { type: Number, short: \"p\", default: DEFAULT_PORT },\n    url: { type: Boolean, short: \"U\" },\n    'delete': { type: Boolean, short: \"D\" },\n    changed: { type: Boolean }\n  },\n  maxArgs: 2,\n  hidden: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var p = function (key) {\n    if (_.has(options, key)) {\n      return JSON.stringify(options[key]);\n    }\n    return 'none';\n  };\n\n  Console.info(p('ething') + \" \" + p('port') + \" \" + p('changed') +\n                       \" \" + p('args'));\n  if (options.url) {\n    Console.info('url');\n  }\n  if (options['delete']) {\n    Console.info('delete');\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// throw-error\n///////////////////////////////////////////////////////////////////////////////\n\n// Dummy test command. Used to test that stack traces work from an installed\n// Meteor tool.\n\nmain.registerCommand({\n  name: 'throw-error',\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function () {\n  throw new Error(\"testing stack traces!\"); // #StackTraceTest this line is found in tests/source-maps.js\n});\n"]}