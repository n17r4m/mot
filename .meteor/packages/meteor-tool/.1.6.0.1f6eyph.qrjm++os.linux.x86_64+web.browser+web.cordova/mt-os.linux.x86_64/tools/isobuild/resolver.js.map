{"version":3,"sources":["/tools/isobuild/resolver.js"],"names":["module1","module","export","default","Resolver","isString","isFunction","each","has","watch","require","v","sha1","archMatches","matches","pathJoin","pathRelative","pathNormalize","pathDirname","convertToOSPath","convertToPosixPath","LRU","wrap","optimisticStatOrNull","optimisticReadJsonOrNull","Profile","nativeModulesMap","Object","create","nativeNames","keys","process","binding","push","forEach","id","startsWith","resolverCache","max","Math","pow","getOrCreate","options","key","JSON","stringify","resolver","get","set","constructor","sourceRoot","targetArch","extensions","nodeModulesPaths","statOrNull","resolve","absParentPath","_resolve","makeCacheKey","isTopLevel","indexOf","charAt","isNative","getNativeStubId","_seenDirPaths","resolved","_resolveAbsolute","_resolveRelative","_resolveNodeModule","packageJsonMap","stat","isDirectory","dirPath","path","Set","add","_resolvePkgJsonMain","assign","_joinAndStat","joinArgs","joined","exactStat","exactResult","result","isFile","some","ext","pathWithExt","slice","relParentPath","dir","info","parentDir","pkgJsonPath","pkg","pkgSubset","name","version","main","tryMain","value","prototype"],"mappings":"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","file":"tools/isobuild/resolver.js.map","sourcesContent":["import {\n  isString,\n  isFunction,\n  each,\n  has,\n} from \"underscore\";\n\nimport { sha1 } from \"../fs/watch.js\";\nimport { matches as archMatches } from \"../utils/archinfo.js\";\nimport {\n  pathJoin,\n  pathRelative,\n  pathNormalize,\n  pathDirname,\n  convertToOSPath,\n  convertToPosixPath,\n} from \"../fs/files.js\";\n\nimport LRU from \"lru-cache\";\n\nimport { wrap } from \"optimism\";\nimport {\n  optimisticStatOrNull,\n  optimisticReadJsonOrNull,\n} from \"../fs/optimistic.js\";\n\nconst nativeModulesMap = Object.create(null);\nconst nativeNames = Object.keys(process.binding(\"natives\"));\n\n// Node 0.10 does not include process as a built-in module, but later\n// versions of Node do, and we provide a stub for it on the client.\nnativeNames.push(\"process\");\n\nnativeNames.forEach(id => {\n  if (id.startsWith(\"internal/\")) {\n    return;\n  }\n\n  // When a native Node module is imported, we register a dependency on a\n  // meteor-node-stubs/deps/* module of the same name, so that the\n  // necessary stub modules will be included in the bundle. This alternate\n  // identifier will not be imported at runtime, but the modules it\n  // depends on are necessary for the original import to succeed.\n  nativeModulesMap[id] =  \"meteor-node-stubs/deps/\" + id;\n});\n\nconst resolverCache = new LRU({\n  max: Math.pow(2, 12)\n});\n\nexport default class Resolver {\n  static getOrCreate(options) {\n    const key = JSON.stringify(options);\n    let resolver = resolverCache.get(key);\n    if (! resolver) {\n      resolverCache.set(key, resolver = new Resolver(options));\n    }\n    return resolver;\n  }\n\n  constructor({\n    sourceRoot,\n    targetArch,\n    extensions = [\".js\", \".json\"],\n    nodeModulesPaths = [],\n  }) {\n    this.sourceRoot = sourceRoot;\n    this.extensions = extensions;\n    this.targetArch = targetArch;\n    this.nodeModulesPaths = nodeModulesPaths;\n    this.statOrNull = optimisticStatOrNull;\n\n    this.resolve = wrap((id, absParentPath) => {\n      return this._resolve(id, absParentPath);\n    }, {\n      makeCacheKey(id, absParentPath) {\n        // Only the directory of the absParentPath matters for caching.\n        return JSON.stringify([id, pathDirname(absParentPath)]);\n      }\n    });\n  }\n\n  static isTopLevel(id) {\n    return \"./\".indexOf(id.charAt(0)) < 0;\n  }\n\n  static isNative(id) {\n    return has(nativeModulesMap, id);\n  }\n\n  static getNativeStubId(id) {\n    return nativeModulesMap[id] || null;\n  }\n\n  // Resolve the given module identifier to an object { path, stat } or\n  // null, relative to an absolute parent path. The _seenDirPaths\n  // parameter is for internal use only and should be ommitted.\n  _resolve(id, absParentPath, _seenDirPaths) {\n    let resolved =\n      this._resolveAbsolute(id, absParentPath) ||\n      this._resolveRelative(id, absParentPath) ||\n      this._resolveNodeModule(id, absParentPath);\n\n    if (typeof resolved === \"string\") {\n      // The _resolveNodeModule method can return \"missing\" to indicate\n      // that the ImportScanner should look elsewhere for this module,\n      // such as in the app node_modules directory.\n      return resolved;\n    }\n\n    let packageJsonMap = null;\n\n    while (resolved && resolved.stat.isDirectory()) {\n      let dirPath = resolved.path;\n      _seenDirPaths = _seenDirPaths || new Set;\n\n      // If the \"main\" field of a package.json file resolves to a\n      // directory we've already considered, then we should not attempt to\n      // read the same package.json file again.\n      if (! _seenDirPaths.has(dirPath)) {\n        _seenDirPaths.add(dirPath);\n        resolved = this._resolvePkgJsonMain(dirPath, _seenDirPaths);\n        if (resolved) {\n          // The _resolvePkgJsonMain call above may have returned a\n          // directory, so first merge resolved.packageJsonMap into\n          // packageJsonMap so that we don't forget the package.json we\n          // just resolved, then continue the loop to make sure we fully\n          // resolve the \"main\" module identifier to a non-directory.\n          // Technically this could involve even more package.json files,\n          // but in practice the \"main\" property will almost always name a\n          // directory containing an index.js file.\n          Object.assign(\n            packageJsonMap || (packageJsonMap = Object.create(null)),\n            resolved.packageJsonMap,\n          );\n          continue;\n        }\n      }\n\n      // If we didn't find a `package.json` file, or it didn't have a\n      // resolvable `.main` property, the only possibility left to\n      // consider is that this directory contains an `index.js` module.\n      // This assignment almost always terminates the while loop, because\n      // there's very little chance an `index.js` file will be a\n      // directory. However, in principle it is remotely possible that a\n      // file called `index.js` could be a directory instead of a file.\n      resolved = this._joinAndStat(dirPath, \"index.js\");\n    }\n\n    if (resolved) {\n      if (packageJsonMap) {\n        resolved.packageJsonMap = packageJsonMap;\n      }\n\n      resolved.id = convertToPosixPath(\n        convertToOSPath(resolved.path),\n        true\n      );\n    }\n\n    return resolved;\n  }\n\n  _joinAndStat(...joinArgs) {\n    const joined = pathJoin(...joinArgs);\n    const path = pathNormalize(joined);\n    const exactStat = this.statOrNull(path);\n    const exactResult = exactStat && { path, stat: exactStat };\n    let result = null;\n    if (exactResult && exactStat.isFile()) {\n      result = exactResult;\n    }\n\n    if (! result) {\n      this.extensions.some(ext => {\n        const pathWithExt = path + ext;\n        const stat = this.statOrNull(pathWithExt);\n        if (stat && ! stat.isDirectory()) {\n          return result = { path: pathWithExt, stat };\n        }\n      });\n    }\n\n    if (! result && exactResult && exactStat.isDirectory()) {\n      // After trying all available file extensions, fall back to the\n      // original result if it was a directory.\n      result = exactResult;\n    }\n\n    return result;\n  }\n\n  _resolveAbsolute(id, absParentPath) {\n    return id.charAt(0) === \"/\" &&\n      this._joinAndStat(this.sourceRoot, id.slice(1));\n  }\n\n  _resolveRelative(id, absParentPath) {\n    if (id.charAt(0) === \".\") {\n      return this._joinAndStat(absParentPath, \"..\", id);\n    }\n  }\n\n  _resolveNodeModule(id, absParentPath) {\n    if (! Resolver.isTopLevel(id)) {\n      return null;\n    }\n\n    if (Resolver.isNative(id) &&\n        archMatches(this.targetArch, \"os\")) {\n      // Forbid installing any server module with the same name as a\n      // native Node module.\n      return null;\n    }\n\n    let sourceRoot;\n    const relParentPath = pathRelative(this.sourceRoot, absParentPath);\n    if (! relParentPath.startsWith(\"..\")) {\n      // If the file is contained by this.sourceRoot, then it's safe to\n      // use this.sourceRoot as the limiting ancestor directory in the\n      // while loop below, but we're still going to check whether the file\n      // resides in an external node_modules directory, since \"external\"\n      // .npm/package/node_modules directories are technically contained\n      // within the root directory of their packages.\n      sourceRoot = this.sourceRoot;\n    }\n\n    this.nodeModulesPaths.some(path => {\n      if (! pathRelative(path, absParentPath).startsWith(\"..\")) {\n        // If the file is inside an external node_modules directory,\n        // consider the rootDir to be the parent directory of that\n        // node_modules directory, rather than this.sourceRoot.\n        return sourceRoot = pathDirname(path);\n      }\n    });\n\n    let resolved = null;\n\n    if (sourceRoot) {\n      let dir = absParentPath; // It's ok for absParentPath to be a directory!\n      let info = this._joinAndStat(dir);\n      if (! info || ! info.stat.isDirectory()) {\n        dir = pathDirname(dir);\n      }\n\n      while (! (resolved = this._joinAndStat(dir, \"node_modules\", id))) {\n        if (dir === sourceRoot) {\n          break;\n        }\n\n        const parentDir = pathDirname(dir);\n        if (dir === parentDir) {\n          // We've reached the root of the file system??\n          break;\n        }\n\n        dir = parentDir;\n      }\n    }\n\n    if (! resolved) {\n      // After checking any local node_modules directories, fall back to\n      // the package NPM directory, if one was specified.\n      this.nodeModulesPaths.some(path => {\n        return resolved = this._joinAndStat(path, id);\n      });\n    }\n\n    // If the dependency is still not resolved, it might be handled by the\n    // fallback function defined in meteor/packages/modules/modules.js, or\n    // it might be imported in code that will never run on this platform,\n    // so there is always the possibility that its absence is not actually\n    // a problem. As much as we might like to issue warnings about missing\n    // dependencies here, we just don't have enough information to make\n    // that determination until the code actually runs.\n\n    return resolved || \"missing\";\n  }\n\n  _resolvePkgJsonMain(dirPath, _seenDirPaths) {\n    const pkgJsonPath = pathJoin(dirPath, \"package.json\");\n    const pkg = optimisticReadJsonOrNull(pkgJsonPath);\n    if (! pkg) {\n      return null;\n    }\n\n    // Output a JS module that exports just the \"name\", \"version\", \"main\",\n    // and \"browser\" properties (if defined) from the package.json file.\n    const pkgSubset = {};\n\n    if (has(pkg, \"name\")) {\n      pkgSubset.name = pkg.name;\n    }\n\n    if (has(pkg, \"version\")) {\n      pkgSubset.version = pkg.version;\n    }\n\n    let main;\n    function tryMain(name) {\n      const value = pkg[name];\n      if (isString(value)) {\n        main = main || value;\n        pkgSubset[name] = value;\n      }\n    }\n\n    if (archMatches(this.targetArch, \"web\")) {\n      tryMain(\"browser\");\n    }\n\n    tryMain(\"main\");\n\n    if (isString(main)) {\n      // The \"main\" field of package.json does not have to begin with ./\n      // to be considered relative, so first we try simply appending it to\n      // the directory path before falling back to a full resolve, which\n      // might return a package from a node_modules directory.\n      const resolved = this._joinAndStat(dirPath, main) ||\n        this._resolve(main, pkgJsonPath, _seenDirPaths);\n\n      if (resolved && typeof resolved === \"object\") {\n        if (! resolved.packageJsonMap) {\n          resolved.packageJsonMap = Object.create(null);\n        }\n\n        resolved.packageJsonMap[pkgJsonPath] = pkgSubset;\n\n        return resolved;\n      }\n    }\n\n    return null;\n  }\n};\n\nimport { Profile } from \"../tool-env/profile.js\";\neach(Resolver.prototype, (value, key) => {\n  if (key === \"constructor\") return;\n  Resolver.prototype[key] = Profile(\n    `Resolver#${key}`,\n    Resolver.prototype[key]\n  );\n});\n"]}