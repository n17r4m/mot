{"version":3,"sources":["/tools/tool-testing/selftest.js"],"names":["module","export","markStack","fail","expectEqual","expectTrue","expectFalse","expectThrows","doOrThrow","Sandbox","Run","define","listTests","runTests","inspect","watch","require","v","makeFulfillablePromise","spawn","execFile","files","randomPort","randomToken","sleepMs","timeoutScaleFactor","parseStackMarkBottom","parseStackMarkTop","parseStackParse","markBottom","markTop","parse","Console","archInfoHost","host","getPackagesDirectoryName","getPackageStorage","capture","enterJob","getUrlWithResuming","Builder","default","DEFAULT_TRACK","RemoteCatalog","IsopackCache","loadIsopackage","Tropohouse","PackageMap","releaseCurrent","current","FinishedUpgraders","allUpgraders","execFileSync","ensureDependencies","DEV_DEPENDENCY_VERSIONS","hasOwn","Object","prototype","hasOwnProperty","TestFailure","constructor","reason","details","stack","Error","f","actual","expected","EJSON","equals","threw","e","ret","messages","hasMessages","formatMessages","builtPackageTropohouseDir","tropohouseLocalCatalog","tropohouseIsopackCache","ROOT_PACKAGES_TO_BUILD_IN_SANDBOX","setUpBuiltPackageTropohouse","mkdtemp","tropohouse","newSelfTestCatalog","versions","getAllNonTestPackageNames","forEach","packageName","getLatestVersion","version","packageMap","localCatalog","includeCordovaUnibuild","buildLocalPackages","eachBuiltIsopack","name","isopack","_saveIsopack","inCheckout","catalogLocal","selfTestCatalog","LocalCatalog","title","packagesDir","pathJoin","getCurrentToolsDir","initialize","localPackageSearchDirs","arrowError","printMessages","Matcher","run","buf","fullBuffer","ended","resetMatch","endPromise","Promise","resolve","resolveEndPromise","write","data","_tryMatch","mp","matchPromise","matchPattern","matchStrict","matchFullBuffer","rejectMatch","error","reject","resolveMatch","value","match","pattern","timeout","strict","matchAsync","await","timer","setTimeout","then","result","clearTimeout","matchBeforeEnd","_beforeEnd","promiseCallback","end","endAsync","matchEmpty","length","info","RegExp","indexOf","m","index","substr","slice","i","OutputLog","lines","buffers","channel","text","call","offset","b","push","keys","bare","forbid","line","get","options","assign","clients","root","warehouse","home","mkdir","cwd","env","fakeMongo","_makeWarehouse","PhantomClient","port","browserstack","browsers","browserName","browserVersion","browserKey","browser","BrowserStackClient","meteorScript","process","platform","execPath","args","sandbox","_makeEnv","testWithAllClients","filter","arg","console","log","clientKey","client","baseTimeout","createApp","to","template","absoluteTo","cp_r","convertToStandardPath","__dirname","ignore","release","isProperRelease","upgradersFile","projectDir","readUpgraders","appendUpgraders","install","dontPrepareApp","cd","waitSecs","expectExit","createPackage","packageDir","packagePath","templatePackagePath","readdir","file","packageJsFile","writeFile","readFile","replace","relativePath","callback","previous","pathResolve","set","unset","filename","contents","append","appendFile","read","exists","cp","from","unlink","dirname","dirPath","rename","oldName","newName","readSessionFile","writeSessionFile","create","METEOR_SESSION_FILE","convertToOSPath","METEOR_WAREHOUSE_DIR","METEOR_OFFLINE_CATALOG","METEOR_TEST_LATEST_RELEASE","TOOL_NODE_FLAGS","SELF_TEST_TOOL_NODE_FLAGS","releases","serverUrl","METEOR_PACKAGE_SERVER_URL","packagesDirectoryName","builder","outputPath","copyDirectory","symlink","complete","stubCatalog","syncToken","formatVersion","collections","packages","builds","releaseTracks","releaseVersions","packageVersions","toolPackageVersion","packageRec","getPackage","versionRec","buildArchitectures","versionId","_id","releaseName","configuration","track","Math","random","toString","orderKey","description","recommended","tool","dataFile","warehouseOfficialCatalog","packageStorage","insertData","linkToMeteorScript","Client","url","connect","stop","npmPackageExports","_logError","phantomPath","path","scriptPath","stdout","stderr","kill","browserStackKey","tunnelProcess","driver","_getBrowserStackKey","capabilities","_launchBrowserStackTunnel","usingServer","withCapabilities","build","quit","outputDir","trim","browserStackPath","ensureBrowserStack","join","on","getDevBundle","browserStackStat","statOrNull","OS","ARCH","arch","tarGz","browserStackStream","createWriteStream","gunzip","createGunzip","pipe","chmod","SELFTEST","METEOR_NO_WORDWRAP","_args","proc","extraTime","stdoutMatcher","stderrMatcher","outputLog","matcherEndPromise","exitStatus","undefined","exitPromiseResolvers","opts","apply","fakeMongoPort","fakeMongoConnection","METEOR_TEST_FAKE_MONGOD_CONTROL_PORT","runningTest","onCleanup","_stopWithoutWaiting","a","key","connectClient","_ensureStarted","matchBeforeExit","matchErrBeforeExit","_exited","status","_endMatchers","all","code","signal","err","setEncoding","_strict","matchErr","readErr","forbidErr","forbidAll","expectEnd","promise","r","secs","string","stdin","_killProcess","pid","tellMongo","command","net","lastStartTime","attempts","Date","conn","setNoDelay","JSON","stringify","exit","wrapWithMarkStack","func","functionName","Test","fileHash","tags","durationMs","cleanupHandlers","cleanupHandler","cleanup","allTests","fileBeingLoaded","fileBeingLoadedHash","getAllTests","testdir","filenames","n","pathBasename","fullPath","createHash","update","digest","tagsList","sort","tagDescriptions","checkout","slow","galaxy","cordova","windows","unchanged","getFilteredTests","testState","readTestState","map","test","newTags","fileRegexp","testRegexp","onlyChanged","lastPassedHashes","excludeRegexp","includes","getPrototypeOf","concat","tagsToSkip","galaxyOnly","offline","includeSlowTests","tagsToMatch","TestList","groupTestsByFile","tests","grouped","skippedTags","skipCounts","tag","fileInfo","filteredTests","hash","hasSkips","hasFailures","matches","some","notifyFailed","failureObject","failed","saveJUnitOutput","testSuites","attrSafe","attr","durationForOutput","testCases","countError","countFailure","testCaseAttrs","testCaseAttrsString","failureElement","depth","testSuiteAttrs","testSuiteAttrsString","xmlHeader","testSuitesString","saveTestState","writeTestState","generateSkipReport","count","noun","nounPhrase","parenthetical","getTestStateFilePath","getHomeDir","testStateFile","testList","rawInfo","startTime","totalRun","failedTests","runTest","endTime","tries","failure","indent","frames","outsideFiber","relpath","pathRelative","rawError","s","historyLines","junit","disclaimers","failureCount"],"mappings":"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","file":"tools/tool-testing/selftest.js.map","sourcesContent":["import { inspect } from 'util';\nimport { makeFulfillablePromise } from '../utils/fiber-helpers.js';\nimport { spawn, execFile } from 'child_process';\nimport * as files from '../fs/files.js';\nimport {\n  randomPort,\n  randomToken,\n  sleepMs,\n  timeoutScaleFactor,\n} from '../utils/utils.js';\nimport {\n  markBottom as parseStackMarkBottom,\n  markTop as parseStackMarkTop,\n  parse as parseStackParse,\n} from '../utils/parse-stack.js';\nimport { Console } from '../console/console.js';\nimport { host as archInfoHost } from '../utils/archinfo.js';\nimport {\n  getPackagesDirectoryName,\n  getPackageStorage,\n} from '../meteor-services/config.js';\nimport { capture, enterJob } from '../utils/buildmessage.js';\nimport { getUrlWithResuming } from '../utils/http-helpers.js';\nimport Builder from '../isobuild/builder.js';\nimport { DEFAULT_TRACK } from '../packaging/catalog/catalog.js';\nimport { RemoteCatalog } from '../packaging/catalog/catalog-remote.js';\nimport { IsopackCache } from '../isobuild/isopack-cache.js';\nimport { loadIsopackage } from '../tool-env/isopackets.js';\nimport { Tropohouse } from '../packaging/tropohouse.js';\nimport { PackageMap } from '../packaging/package-map.js';\nimport { current as releaseCurrent } from '../packaging/release.js';\nimport { FinishedUpgraders } from '../project-context.js';\nimport { allUpgraders } from '../upgraders.js';\nimport { execFileSync } from '../utils/processes.js';\nimport { ensureDependencies } from '../cli/dev-bundle-helpers.js';\n\nconst DEV_DEPENDENCY_VERSIONS = {\n  'phantomjs-prebuilt': '2.1.14',\n  'browserstack-webdriver': '2.41.1',\n};\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nimport \"../tool-env/install-runtime.js\";\n\n// To allow long stack traces that cross async boundaries\nimport 'longjohn';\n\n// Exception representing a test failure\nclass TestFailure {\n  constructor(reason, details) {\n    this.reason = reason;\n    this.details = details || {};\n    this.stack = (new Error).stack;\n  }\n}\n\n// Use this to decorate functions that throw TestFailure. Decorate the\n// first function that should not be included in the call stack shown\n// to the user.\nexport function markStack(f) {\n  return parseStackMarkTop(f);\n}\n\n// Call from a test to throw a TestFailure exception and bail out of the test\nexport const fail = markStack(function (reason) {\n  throw new TestFailure(reason);\n});\n\n// Call from a test to assert that 'actual' is equal to 'expected',\n// with 'actual' being the value that the test got and 'expected'\n// being the expected value\nexport const expectEqual = markStack(function (actual, expected) {\n  if (! loadIsopackage('ejson').EJSON.equals(actual, expected)) {\n    throw new TestFailure(\"not-equal\", {\n      expected: expected,\n      actual: actual\n    });\n  }\n});\n\n// Call from a test to assert that 'actual' is truthy.\nexport const expectTrue = markStack(function (actual) {\n  if (! actual) {\n    throw new TestFailure('not-true');\n  }\n});\n\n// Call from a test to assert that 'actual' is falsey.\nexport const expectFalse = markStack(function (actual) {\n  if (actual) {\n    throw new TestFailure('not-false');\n  }\n});\n\nexport const expectThrows = markStack(function (f) {\n  let threw = false;\n  try {\n    f();\n  } catch (e) {\n    threw = true;\n  }\n\n  if (! threw) {\n    throw new TestFailure(\"expected-exception\");\n  }\n});\n\nexport function doOrThrow(f) {\n  let ret;\n  const messages = capture(function () {\n    ret = f();\n  });\n  if (messages.hasMessages()) {\n    throw Error(messages.formatMessages());\n  }\n  return ret;\n}\n\n// Our current strategy for running tests that need warehouses is to build all\n// packages from the checkout into this temporary tropohouse directory, and for\n// each test that need a fake warehouse, copy the built packages into the\n// test-specific warehouse directory.  This isn't particularly fast, but it'll\n// do for now. We build the packages during the first test that needs them.\nlet builtPackageTropohouseDir = null;\nlet tropohouseLocalCatalog = null;\nlet tropohouseIsopackCache = null;\n\n// Let's build a minimal set of packages that's enough to get self-test\n// working.  (And that doesn't need us to download any Atmosphere packages.)\nconst ROOT_PACKAGES_TO_BUILD_IN_SANDBOX = [\n  // We need the tool in order to run from the fake warehouse at all.\n  \"meteor-tool\",\n\n  // We need the packages in the skeleton app in order to test 'meteor create'.\n  'meteor-base',\n  'mobile-experience',\n  'mongo',\n  'blaze-html-templates',\n  'session',\n  'jquery',\n  'tracker',\n  \"autopublish\",\n  \"insecure\",\n  \"standard-minifier-css\",\n  \"standard-minifier-js\",\n  \"es5-shim\",\n  \"shell-server\"\n];\n\nfunction setUpBuiltPackageTropohouse() {\n  if (builtPackageTropohouseDir) {\n    return;\n  }\n  builtPackageTropohouseDir = files.mkdtemp('built-package-tropohouse');\n\n  if (getPackagesDirectoryName() !== 'packages') {\n    throw Error(\"running self-test with METEOR_PACKAGE_SERVER_URL set?\");\n  }\n\n  const tropohouse = new Tropohouse(builtPackageTropohouseDir);\n  tropohouseLocalCatalog = newSelfTestCatalog();\n  const versions = {};\n  tropohouseLocalCatalog.getAllNonTestPackageNames().forEach((packageName) => {\n    versions[packageName] =\n      tropohouseLocalCatalog.getLatestVersion(packageName).version;\n  });\n  const packageMap = new PackageMap(versions, {\n    localCatalog: tropohouseLocalCatalog\n  });\n  // Make an isopack cache that doesn't automatically save isopacks to disk and\n  // has no access to versioned packages.\n  tropohouseIsopackCache = new IsopackCache({\n    packageMap: packageMap,\n    includeCordovaUnibuild: true\n  });\n  doOrThrow(function () {\n    enterJob(\"building self-test packages\", () => {\n      // Build the packages into the in-memory IsopackCache.\n      tropohouseIsopackCache.buildLocalPackages(\n        ROOT_PACKAGES_TO_BUILD_IN_SANDBOX);\n    });\n  });\n\n  // Save all the isopacks into builtPackageTropohouseDir/packages.  (Note that\n  // we are always putting them into the default 'packages' (assuming\n  // $METEOR_PACKAGE_SERVER_URL is not set in the self-test process itself) even\n  // though some tests will want them to be under\n  // 'packages-for-server/test-packages'; we'll fix this in _makeWarehouse.\n  tropohouseIsopackCache.eachBuiltIsopack((name, isopack) => {\n    tropohouse._saveIsopack(isopack, name);\n  });\n};\n\nfunction newSelfTestCatalog() {\n  if (! files.inCheckout()) {\n    throw Error(\"Only can build packages from a checkout\");\n  }\n\n  const catalogLocal = require('../packaging/catalog/catalog-local.js');\n  const selfTestCatalog = new catalogLocal.LocalCatalog;\n  const messages = capture(\n    { title: \"scanning local core packages\" },\n    () => {\n      const packagesDir =\n        files.pathJoin(files.getCurrentToolsDir(), 'packages');\n\n      // When building a fake warehouse from a checkout, we use local packages,\n      // but *ONLY THOSE FROM THE CHECKOUT*: not app packages or $PACKAGE_DIRS\n      // packages.  One side effect of this: we really really expect them to all\n      // build, and we're fine with dying if they don't (there's no worries\n      // about needing to springboard).\n      selfTestCatalog.initialize({\n        localPackageSearchDirs: [\n          packagesDir,\n          files.pathJoin(packagesDir, \"non-core\", \"*\", \"packages\"),\n        ],\n      });\n    });\n  if (messages.hasMessages()) {\n    Console.arrowError(\"Errors while scanning core packages:\");\n    Console.printMessages(messages);\n    throw new Error(\"scan failed?\");\n  }\n  return selfTestCatalog;\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Matcher\n///////////////////////////////////////////////////////////////////////////////\n\n// Handles the job of waiting until text is seen that matches a\n// regular expression.\n\nclass Matcher {\n  constructor(run) {\n    this.buf = \"\";\n    this.fullBuffer = \"\";\n    this.ended = false;\n    this.resetMatch();\n    this.run = run; // used only to set a field on exceptions\n    this.endPromise = new Promise(resolve => {\n      this.resolveEndPromise = resolve;\n    });\n  }\n\n  write(data) {\n    this.buf += data;\n    this.fullBuffer += data;\n    this._tryMatch();\n  }\n\n  resetMatch() {\n    const mp = this.matchPromise;\n\n    this.matchPattern = null;\n    this.matchPromise = null;\n    this.matchStrict = null;\n    this.matchFullBuffer = false;\n\n    return mp;\n  }\n\n  rejectMatch(error) {\n    const mp = this.resetMatch();\n    if (mp) {\n      mp.reject(error);\n    } else {\n      // If this.matchPromise was not defined, we should not swallow this\n      // error, so we must throw it instead.\n      throw error;\n    }\n  }\n\n  resolveMatch(value) {\n    const mp = this.resetMatch();\n    if (mp) {\n      mp.resolve(value);\n    }\n  }\n\n  match(pattern, timeout, strict) {\n    return this.matchAsync(pattern, { timeout, strict }).await();\n  }\n\n  // Like match, but returns a Promise without calling .await().\n  matchAsync(pattern, {\n    timeout = null,\n    strict = false,\n    matchFullBuffer = false,\n  }) {\n    if (this.matchPromise) {\n      return Promise.reject(new Error(\"already have a match pending?\"));\n    }\n    this.matchPattern = pattern;\n    this.matchStrict = strict;\n    this.matchFullBuffer = matchFullBuffer;\n    const mp = this.matchPromise = makeFulfillablePromise();\n    this._tryMatch(); // could clear this.matchPromise\n\n    let timer = null;\n    if (timeout) {\n      timer = setTimeout(() => {\n        this.rejectMatch(new TestFailure('match-timeout', {\n          run: this.run,\n          pattern: this.matchPattern\n        }));\n      }, timeout * 1000);\n    } else {\n      return mp;\n    }\n\n    return mp.then(result => {\n      clearTimeout(timer);\n      return result;\n    }, error => {\n      clearTimeout(timer);\n      throw error;\n    });\n  }\n\n  matchBeforeEnd(pattern, timeout) {\n    return this._beforeEnd(() => this.matchAsync(pattern, {\n      timeout: timeout || 15,\n      matchFullBuffer: true,\n    }));\n  }\n\n  _beforeEnd(promiseCallback) {\n    return this.endPromise = this.endPromise.then(promiseCallback);\n  }\n\n  end() {\n    return this.endAsync().await();\n  }\n\n  endAsync() {\n    this.resolveEndPromise();\n    return this._beforeEnd(() => {\n      this.ended = true;\n      this._tryMatch();\n      return this.matchPromise;\n    });\n  }\n\n  matchEmpty() {\n    if (this.buf.length > 0) {\n      Console.info(\"Extra junk is :\", this.buf);\n      throw new TestFailure('junk-at-end', { run: this.run });\n    }\n  }\n\n  _tryMatch() {\n    const mp = this.matchPromise;\n    if (! mp) {\n      return;\n    }\n\n    let ret = null;\n\n    if (this.matchFullBuffer) {\n      // Note: this.matchStrict is ignored if this.matchFullBuffer truthy.\n      if (this.matchPattern instanceof RegExp) {\n        ret = this.fullBuffer.match(this.matchPattern);\n      } else if (this.fullBuffer.indexOf(this.matchPattern) >= 0) {\n        ret = this.matchPattern;\n      }\n\n    } else if (this.matchPattern instanceof RegExp) {\n      const m = this.buf.match(this.matchPattern);\n      if (m) {\n        if (this.matchStrict && m.index !== 0) {\n          Console.info(\"Extra junk is: \", this.buf.substr(0, m.index));\n          return this.rejectMatch(new TestFailure('junk-before', {\n            run: this.run,\n            pattern: this.matchPattern\n          }));\n        }\n        ret = m;\n        this.buf = this.buf.slice(m.index + m[0].length);\n      }\n\n    } else {\n      const i = this.buf.indexOf(this.matchPattern);\n      if (i !== -1) {\n        if (this.matchStrict && i !== 0) {\n          Console.info(\"Extra junk is: \", this.buf.substr(0, i));\n          return this.rejectMatch(new TestFailure('junk-before', {\n            run: this.run,\n            pattern: this.matchPattern\n          }));\n        }\n        ret = this.matchPattern;\n        this.buf = this.buf.slice(i + this.matchPattern.length);\n      }\n    }\n\n    if (ret !== null) {\n      return this.resolveMatch(ret);\n    }\n\n    if (this.ended) {\n      return this.rejectMatch(new TestFailure('no-match', {\n        run: this.run,\n        pattern: this.matchPattern\n      }));\n    }\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// OutputLog\n///////////////////////////////////////////////////////////////////////////////\n\n// Maintains a line-by-line merged log of multiple output channels\n// (eg, stdout and stderr).\n\nclass OutputLog {\n  constructor(run) {\n    // each entry is an object with keys 'channel', 'text', and if it is\n    // the last entry and there was no newline terminator, 'bare'\n    this.lines = [];\n\n    // map from a channel name to an object representing a partially\n    // read line of text on that channel. That object has keys 'text'\n    // (text read), 'offset' (cursor position, equal to text.length\n    // unless a '\\r' has been read).\n    this.buffers = {};\n\n    // a Run, exclusively for inclusion in exceptions\n    this.run = run;\n  }\n\n  write(channel, text) {\n    if (! hasOwn.call(this.buffers, 'channel')) {\n      this.buffers[channel] = { text: '', offset: 0};\n    }\n    const b = this.buffers[channel];\n\n    while (text.length) {\n      const m = text.match(/^[^\\n\\r]+/);\n      if (m) {\n        // A run of non-control characters.\n        b.text = b.text.substr(0, b.offset) +\n          m[0] + b.text.substr(b.offset + m[0].length);\n        b.offset += m[0].length;\n        text = text.substr(m[0].length);\n        continue;\n      }\n\n      if (text[0] === '\\r') {\n        b.offset = 0;\n        text = text.substr(1);\n        continue;\n      }\n\n      if (text[0] === '\\n') {\n        this.lines.push({ channel: channel, text: b.text });\n        b.text = '';\n        b.offset = 0;\n        text = text.substr(1);\n        continue;\n      }\n\n      throw new Error(\"conditions should have been exhaustive?\");\n    }\n  }\n\n  end() {\n    Object.keys(this.buffers).forEach((channel) => {\n      if (this.buffers[channel].text.length) {\n        this.lines.push({ channel: channel,\n                          text: this.buffers[channel].text,\n                          bare: true });\n        this.buffers[channel] = { text: '', offset: 0};\n      }\n    });\n  }\n\n  forbid(pattern, channel) {\n    this.lines.forEach((line) => {\n      if (channel && channel !== line.channel) {\n        return;\n      }\n\n      const match = (pattern instanceof RegExp) ?\n        (line.text.match(pattern)) : (line.text.indexOf(pattern) !== -1);\n      if (match) {\n        throw new TestFailure('forbidden-string-present', { run: this.run });\n      }\n    });\n  }\n\n  get() {\n    return this.lines;\n  }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Sandbox\n///////////////////////////////////////////////////////////////////////////////\n\n// Represents an install of the tool. Creating this creates a private\n// sandbox with its own state, separate from the state of the current\n// meteor install or checkout, from the user's homedir, and from the\n// state of any other sandbox. It also creates an empty directory\n// which will be, by default, the cwd for runs created inside the\n// sandbox (you can change this with the cd() method).\n//\n// This will throw TestFailure if it has to build packages to set up\n// the sandbox and the build fails. So, only call it from inside\n// tests.\n//\n// options:\n// - warehouse: set to sandbox the warehouse too. If you don't do\n//   this, the tests are run in the same context (checkout or\n//   warehouse) as the actual copy of meteor you're running (the\n//   meteor in 'meteor self-test'. This may only be set when you're\n//   running 'meteor self-test' from a checkout. If it is set, it\n//   should look something like this:\n//   {\n//     version1: { tools: 'tools1', notices: (...) },\n//     version2: { tools: 'tools2', upgraders: [\"a\"],\n//     notices: (...), latest: true }\n//   }\n//   This would set up a simulated warehouse with two releases in it,\n//   one called 'version1' and having a tools version of 'tools1', and\n//   similarly with 'version2'/'tools2', with the latter being marked\n//   as the latest release, and the latter also having a single\n//   upgrader named \"a\". The releases are made by building the\n//   checkout into a release, and are identical except for their\n//   version names. If you pass 'notices' (which is optional), set it\n//   to the verbatim contents of the notices.json file for the\n//   release, as an object.\n// - fakeMongo: if set, set an environment variable that causes our\n//   'fake-mongod' stub process to be started instead of 'mongod'. The\n//   tellMongo method then becomes available on Runs for controlling\n//   the stub.\n// - clients\n//   - browserstack: true if browserstack clients should be used\n//   - port: the port that the clients should run on\n\nexport class Sandbox {\n  constructor(options) {\n    // default options\n    options = Object.assign({ clients: {} }, options);\n\n    this.root = files.mkdtemp();\n    this.warehouse = null;\n\n    this.home = files.pathJoin(this.root, 'home');\n    files.mkdir(this.home, 0o755);\n    this.cwd = this.home;\n    this.env = {};\n    this.fakeMongo = options.fakeMongo;\n\n    if (hasOwn.call(options, 'warehouse')) {\n      if (!files.inCheckout()) {\n        throw Error(\"make only use a fake warehouse in a checkout\");\n      }\n      this.warehouse = files.pathJoin(this.root, 'tropohouse');\n      this._makeWarehouse(options.warehouse);\n    }\n\n    this.clients = [new PhantomClient({\n      host: 'localhost',\n      port: options.clients.port || 3000\n    })];\n\n    if (options.clients && options.clients.browserstack) {\n      const browsers = [\n        { browserName: 'firefox' },\n        { browserName: 'chrome' },\n        { browserName: 'internet explorer',\n          browserVersion: '11' },\n        { browserName: 'internet explorer',\n          browserVersion: '8',\n          timeout: 60 },\n        { browserName: 'safari' },\n        { browserName: 'android' }\n      ];\n\n      Object.keys(browsers).forEach(browserKey => {\n        const browser = browsers[browserKey];\n        this.clients.push(new BrowserStackClient({\n          host: 'localhost',\n          port: 3000,\n          browserName: browser.browserName,\n          browserVersion: browser.browserVersion,\n          timeout: browser.timeout\n        }));\n      });\n    }\n\n    const meteorScript = process.platform === \"win32\" ? \"meteor.bat\" : \"meteor\";\n\n    // Figure out the 'meteor' to run\n    if (this.warehouse) {\n      this.execPath = files.pathJoin(this.warehouse, meteorScript);\n    } else {\n      this.execPath = files.pathJoin(files.getCurrentToolsDir(), meteorScript);\n    }\n  }\n\n  // Create a new test run of the tool in this sandbox.\n  run(...args) {\n    return new Run(this.execPath, {\n      sandbox: this,\n      args: args,\n      cwd: this.cwd,\n      env: this._makeEnv(),\n      fakeMongo: this.fakeMongo\n    });\n  }\n\n  // Tests a set of clients with the argument function. Each call to f(run)\n  // instantiates a Run with a different client.\n  // Use:\n  // sandbox.testWithAllClients(function (run) {\n  //   // pre-connection checks\n  //   run.connectClient();\n  //   // post-connection checks\n  // });\n  testWithAllClients(f, ...args) {\n    args = args.filter(arg => arg);\n\n    console.log(\"running test with \" + this.clients.length + \" client(s).\");\n\n    Object.keys(this.clients).forEach((clientKey) => {\n      const client = this.clients[clientKey];\n      console.log(\"testing with \" + client.name + \"...\");\n      const run = new Run(this.execPath, {\n        sandbox: this,\n        args: args,\n        cwd: this.cwd,\n        env: this._makeEnv(),\n        fakeMongo: this.fakeMongo,\n        client: client\n      });\n      run.baseTimeout = client.timeout;\n      f(run);\n    });\n  }\n\n  // Copy an app from a template into the current directory in the\n  // sandbox. 'to' is the subdirectory to put the app in, and\n  // 'template' is a subdirectory of tools/tests/apps to copy.\n  //\n  // Note that the arguments are the opposite order from 'cp'. That\n  // seems more intuitive to me -- if you disagree, my apologies.\n  //\n  // For example:\n  //   s.createApp('myapp', 'empty');\n  //   s.cd('myapp');\n  createApp(to, template, options) {\n    options = options || {};\n    const absoluteTo = files.pathJoin(this.cwd, to);\n    files.cp_r(files.pathJoin(\n      files.convertToStandardPath(__dirname), '..', 'tests', 'apps', template),\n        absoluteTo, { ignore: [/^local$/] });\n    // If the test isn't explicitly managing a mock warehouse, ensure that apps\n    // run with our release by default.\n    if (options.release) {\n      this.write(files.pathJoin(to, '.meteor/release'), options.release);\n    } else if (!this.warehouse && releaseCurrent.isProperRelease()) {\n      this.write(files.pathJoin(to, '.meteor/release'), releaseCurrent.name);\n    }\n\n    // Make sure the apps don't run any upgraders, unless they intentionally\n    // have a partial upgraders file\n    const upgradersFile =\n      new FinishedUpgraders({projectDir: absoluteTo});\n    if (upgradersFile.readUpgraders().length === 0) {\n      upgradersFile.appendUpgraders(allUpgraders());\n    }\n\n    require(\"../cli/default-npm-deps.js\").install(absoluteTo);\n\n    if (options.dontPrepareApp) {\n      return;\n    }\n\n    // Prepare the app (ie, build or download packages). We give this a nice\n    // long timeout, which allows the next command to not need a bloated\n    // timeout. (meteor create does this anyway.)\n    this.cd(to, () => {\n      const run = this.run(\"--prepare-app\");\n      // XXX Can we cache the output of running this once somewhere, so that\n      // multiple calls to createApp with the same template get the same cache?\n      // This is a little tricky because isopack-buildinfo.json uses absolute\n      // paths.\n      run.waitSecs(120);\n      run.expectExit(0);\n    });\n  }\n\n  // Same as createApp, but with a package.\n  //\n  // @param packageDir  {String} The directory in which to create the package\n  // @param packageName {String} The package name to create. This string will\n  //                             replace all appearances of ~package-name~\n  //                             in any package*.js files in the template\n  // @param template    {String} The package template to use. Found as a\n  //                             subdirectory in tests/packages/\n  //\n  // For example:\n  //   s.createPackage('me_mypack', me:mypack', 'empty');\n  //   s.cd('me_mypack');\n  createPackage(packageDir, packageName, template) {\n    const packagePath = files.pathJoin(this.cwd, packageDir);\n    const templatePackagePath = files.pathJoin(\n      files.convertToStandardPath(__dirname), '..', 'tests', 'packages', template);\n    files.cp_r(templatePackagePath, packagePath);\n\n    files.readdir(packagePath).forEach((file) => {\n      if (file.match(/^package.*\\.js$/)) {\n        const packageJsFile = files.pathJoin(packagePath, file);\n        files.writeFile(\n          packageJsFile,\n          files.readFile(packageJsFile, \"utf8\")\n            .replace(\"~package-name~\", packageName));\n      }\n    });\n  }\n\n  // Change the cwd to be used for subsequent runs. For example:\n  //   s.run('create', 'myapp').expectExit(0);\n  //   s.cd('myapp');\n  //   s.run('add', 'somepackage') ...\n  // If you provide a callback, it will invoke the callback and then\n  // change the cwd back to the previous value.  eg:\n  //   s.cd('app1', function () {\n  //     s.run('add', 'somepackage');\n  //   });\n  //   s.cd('app2', function () {\n  //     s.run('add', 'somepackage');\n  //   });\n  cd(relativePath, callback) {\n    const previous = this.cwd;\n    this.cwd = files.pathResolve(this.cwd, relativePath);\n    if (callback) {\n      callback();\n      this.cwd = previous;\n    }\n  }\n\n  // Set an environment variable for subsequent runs.\n  set(name, value) {\n    this.env[name] = value;\n  }\n\n  // Undo set().\n  unset(name) {\n    delete this.env[name];\n  }\n\n  // Write to a file in the sandbox, overwriting its current contents\n  // if any. 'filename' is a path intepreted relative to the Sandbox's\n  // cwd. 'contents' is a string (utf8 is assumed).\n  write(filename, contents) {\n    files.writeFile(files.pathJoin(this.cwd, filename), contents, 'utf8');\n  }\n\n  // Like writeFile, but appends rather than writes.\n  append(filename, contents) {\n    files.appendFile(files.pathJoin(this.cwd, filename), contents, 'utf8');\n  }\n\n  // Reads a file in the sandbox as a utf8 string. 'filename' is a\n  // path intepreted relative to the Sandbox's cwd.  Returns null if\n  // file does not exist.\n  read(filename) {\n    const file = files.pathJoin(this.cwd, filename);\n    if (!files.exists(file)) {\n      return null;\n    } else {\n      return files.readFile(files.pathJoin(this.cwd, filename), 'utf8');\n    }\n  }\n\n  // Copy the contents of one file to another.  In these series of tests, we often\n  // want to switch contents of package.js files. It is more legible to copy in\n  // the backup file rather than trying to write into it manually.\n  cp(from, to) {\n    const contents = this.read(from);\n    if (!contents) {\n      throw new Error(\"File \" + from + \" does not exist.\");\n    };\n    this.write(to, contents);\n  }\n\n  // Delete a file in the sandbox. 'filename' is as in write().\n  unlink(filename) {\n    files.unlink(files.pathJoin(this.cwd, filename));\n  }\n\n  // Make a directory in the sandbox. 'filename' is as in write().\n  mkdir(dirname) {\n    const dirPath = files.pathJoin(this.cwd, dirname);\n    if (! files.exists(dirPath)) {\n      files.mkdir(dirPath);\n    }\n  }\n\n  // Rename something in the sandbox. 'oldName' and 'newName' are as in write().\n  rename(oldName, newName) {\n    files.rename(files.pathJoin(this.cwd, oldName),\n                 files.pathJoin(this.cwd, newName));\n  }\n\n  // Return the current contents of .meteorsession in the sandbox.\n  readSessionFile() {\n    return files.readFile(files.pathJoin(this.root, '.meteorsession'), 'utf8');\n  }\n\n  // Overwrite .meteorsession in the sandbox with 'contents'. You\n  // could use this in conjunction with readSessionFile to save and\n  // restore authentication states.\n  writeSessionFile(contents) {\n    return files.writeFile(files.pathJoin(this.root, '.meteorsession'),\n                           contents, 'utf8');\n  }\n\n  _makeEnv() {\n    const env = Object.assign(Object.create(null), this.env);\n    env.METEOR_SESSION_FILE = files.convertToOSPath(\n      files.pathJoin(this.root, '.meteorsession'));\n\n    if (this.warehouse) {\n      // Tell it where the warehouse lives.\n      env.METEOR_WAREHOUSE_DIR = files.convertToOSPath(this.warehouse);\n\n      // Don't ever try to refresh the stub catalog we made.\n      env.METEOR_OFFLINE_CATALOG = \"t\";\n    }\n\n    // By default (ie, with no mock warehouse and no --release arg) we should be\n    // testing the actual release this is built in, so we pretend that it is the\n    // latest release.\n    if (!this.warehouse && releaseCurrent.isProperRelease()) {\n      env.METEOR_TEST_LATEST_RELEASE = releaseCurrent.name;\n    }\n\n    // Allow user to set TOOL_NODE_FLAGS for self-test app.\n    if (process.env.TOOL_NODE_FLAGS && ! process.env.SELF_TEST_TOOL_NODE_FLAGS)\n      console.log('Consider setting SELF_TEST_TOOL_NODE_FLAGS to configure ' +\n                  'self-test test applicaion spawns');\n    env.TOOL_NODE_FLAGS = process.env.SELF_TEST_TOOL_NODE_FLAGS || '';\n\n    return env;\n  }\n\n  // Writes a stub warehouse (really a tropohouse) to the directory\n  // this.warehouse. This warehouse only contains a meteor-tool package and some\n  // releases containing that tool only (and no packages).\n  //\n  // packageServerUrl indicates which package server we think we are using. Use\n  // the default, if we do not pass this in; you should pass it in any case that\n  // you will be specifying $METEOR_PACKAGE_SERVER_URL in the environment of a\n  // command you are running in this sandbox.\n  _makeWarehouse(releases) {\n    // Ensure we have a tropohouse to copy stuff out of.\n    setUpBuiltPackageTropohouse();\n\n    const serverUrl = this.env.METEOR_PACKAGE_SERVER_URL;\n    const packagesDirectoryName = getPackagesDirectoryName(serverUrl);\n\n    const builder = new Builder({outputPath: this.warehouse});\n    builder.copyDirectory({\n      from: files.pathJoin(builtPackageTropohouseDir, 'packages'),\n      to: packagesDirectoryName,\n      symlink: true\n    });\n    builder.complete();\n\n    const stubCatalog = {\n      syncToken: {},\n      formatVersion: \"1.0\",\n      collections: {\n        packages: [],\n        versions: [],\n        builds: [],\n        releaseTracks: [],\n        releaseVersions: []\n      }\n    };\n\n    const packageVersions = {};\n    let toolPackageVersion = null;\n\n    tropohouseIsopackCache.eachBuiltIsopack((packageName, isopack) => {\n      const packageRec = tropohouseLocalCatalog.getPackage(packageName);\n      if (! packageRec) {\n        throw Error(\"no package record for \" + packageName);\n      }\n      stubCatalog.collections.packages.push(packageRec);\n\n      const versionRec = tropohouseLocalCatalog.getLatestVersion(packageName);\n      if (! versionRec) {\n        throw Error(\"no version record for \" + packageName);\n      }\n      stubCatalog.collections.versions.push(versionRec);\n\n      stubCatalog.collections.builds.push({\n        buildArchitectures: isopack.buildArchitectures(),\n        versionId: versionRec._id,\n        _id: randomToken()\n      });\n\n      if (packageName === \"meteor-tool\") {\n        toolPackageVersion = versionRec.version;\n      } else {\n        packageVersions[packageName] = versionRec.version;\n      }\n    });\n\n    if (! toolPackageVersion) {\n      throw Error(\"no meteor-tool?\");\n    }\n\n    stubCatalog.collections.releaseTracks.push({\n      name: DEFAULT_TRACK,\n      _id: randomToken()\n    });\n\n    // Now create each requested release.\n    Object.keys(releases).forEach((releaseName) => {\n      const configuration = releases[releaseName];\n      // Release info\n      stubCatalog.collections.releaseVersions.push({\n        track: DEFAULT_TRACK,\n        _id: Math.random().toString(),\n        version: releaseName,\n        orderKey: releaseName,\n        description: \"test release \" + releaseName,\n        recommended: !!configuration.recommended,\n        tool: configuration.tool || \"meteor-tool@\" + toolPackageVersion,\n        packages: packageVersions\n      });\n    });\n\n    const dataFile = getPackageStorage({\n      root: this.warehouse,\n      serverUrl: serverUrl\n    });\n    this.warehouseOfficialCatalog = new RemoteCatalog();\n    this.warehouseOfficialCatalog.initialize({\n      packageStorage: dataFile\n    });\n    this.warehouseOfficialCatalog.insertData(stubCatalog);\n\n    // And a cherry on top\n    // XXX this is hacky\n    files.linkToMeteorScript(\n      files.pathJoin(this.warehouse, packagesDirectoryName, \"meteor-tool\", toolPackageVersion,\n        'mt-' + archInfoHost(), 'meteor'),\n      files.pathJoin(this.warehouse, 'meteor'));\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Client\n///////////////////////////////////////////////////////////////////////////////\n\nclass Client {\n  constructor(options) {\n    this.host = options.host;\n    this.port = options.port;\n    this.url = \"http://\" + this.host + \":\" + this.port + '/' +\n      (Math.random() * 0x100000000 + 1).toString(36);\n    this.timeout = options.timeout || 40;\n\n    if (! this.connect || ! this.stop) {\n      console.log(\"Missing methods in subclass of Client.\");\n    }\n  }\n}\n\n// PhantomClient\nclass PhantomClient extends Client {\n  constructor(options) {\n    super(options);\n\n    enterJob({\n      title: 'Installing PhantomJS in Meteor tool',\n    }, () => {\n      ensureDependencies({\n        'phantomjs-prebuilt': DEV_DEPENDENCY_VERSIONS['phantomjs-prebuilt'],\n      });\n    });\n\n    this.npmPackageExports = require(\"phantomjs-prebuilt\");\n\n    this.name = \"phantomjs\";\n    this.process = null;\n\n    this._logError = true;\n  }\n\n  connect() {\n    const phantomPath = this.npmPackageExports.path;\n    const scriptPath = files.pathJoin(files.getCurrentToolsDir(), \"tools\",\n      \"tool-testing\", \"phantom\", \"open-url.js\");\n    this.process = execFile(phantomPath, [\"--load-images=no\",\n      files.convertToOSPath(scriptPath), this.url],\n      {}, (error, stdout, stderr) => {\n        if (this._logError && error) {\n          console.log(\n            \"PhantomJS exited with error \", error,\n            \"\\nstdout:\\n\", stdout,\n            \"\\nstderr:\\n\", stderr\n          );\n        } else if (stderr) {\n          console.log(\"PhantomJS stderr:\\n\", stderr);\n        }\n      });\n  }\n\n  stop() {\n    // Suppress the expected SIGTERM exit 'failure'\n    this._logError = false;\n    this.process && this.process.kill();\n    this.process = null;\n  }\n}\n\n// BrowserStackClient\nlet browserStackKey = null;\n\nclass BrowserStackClient extends Client {\n  constructor(options) {\n    super(options);\n\n    enterJob({\n      title: 'Installing BrowserStack WebDriver in Meteor tool',\n    }, () => {\n      ensureDependencies({\n        'browserstack-webdriver': DEV_DEPENDENCY_VERSIONS['browserstack-webdriver'],\n      });\n    });\n\n    this.npmPackageExports = require('browserstack-webdriver');\n\n    this.tunnelProcess = null;\n    this.driver = null;\n\n    this.browserName = options.browserName;\n    this.browserVersion = options.browserVersion;\n\n    this.name = \"BrowserStack - \" + this.browserName;\n    if (this.browserVersion) {\n      this.name += \" \" + this.browserVersion;\n    }\n  }\n\n  connect() {\n    // memoize the key\n    if (browserStackKey === null) {\n      browserStackKey = this._getBrowserStackKey();\n    }\n    if (! browserStackKey) {\n      throw new Error(\"BrowserStack key not found. Ensure that you \" +\n        \"have installed your S3 credentials.\");\n    }\n\n    const capabilities = {\n      'browserName' : this.browserName,\n      'browserstack.user' : 'meteor',\n      'browserstack.local' : 'true',\n      'browserstack.key' : browserStackKey\n    };\n\n    if (this.browserVersion) {\n      capabilities.browserVersion = this.browserVersion;\n    }\n\n    this._launchBrowserStackTunnel((error) => {\n      if (error) {\n        throw error;\n      }\n\n      this.driver = new this.npmPackageExports.Builder().\n        usingServer('http://hub.browserstack.com/wd/hub').\n        withCapabilities(capabilities).\n        build();\n\n      this.driver.get(this.url);\n    });\n  }\n\n  stop() {\n    this.tunnelProcess && this.tunnelProcess.kill();\n    this.tunnelProcess = null;\n\n    this.driver && this.driver.quit();\n    this.driver = null;\n  }\n\n  _getBrowserStackKey() {\n    const outputDir = files.pathJoin(files.mkdtemp(), \"key\");\n\n    try {\n      execFileSync(\"s3cmd\", [\"get\",\n        \"s3://meteor-browserstack-keys/browserstack-key\",\n        outputDir\n      ]);\n\n      return files.readFile(outputDir, \"utf8\").trim();\n    } catch (e) {\n      return null;\n    }\n  }\n\n  _launchBrowserStackTunnel(callback) {\n    const browserStackPath = ensureBrowserStack();\n\n    const args = [\n      browserStackPath,\n      browserStackKey,\n      [this.host, this.port, 0].join(','),\n      // Disable Live Testing and Screenshots, just test with Automate.\n      '-onlyAutomate',\n      // Do not wait for the server to be ready to spawn the process.\n      '-skipCheck'\n    ];\n    this.tunnelProcess = execFile(\n      '/usr/bin/env',\n      ['bash', '-c', args.join(' ')]\n    );\n\n    // Called when the SSH tunnel is established.\n    this.tunnelProcess.stdout.on('data', (data) => {\n      if (data.toString().match(/You can now access your local server/)) {\n        callback();\n      }\n    });\n  }\n}\n\nfunction ensureBrowserStack() {\n  const browserStackPath = files.pathJoin(\n    files.getDevBundle(),\n    'bin',\n    'BrowserStackLocal'\n  );\n\n  const browserStackStat = files.statOrNull(browserStackPath);\n  if (! browserStackStat) {\n    const host = \"browserstack-binaries.s3.amazonaws.com\";\n    const OS = process.platform === \"darwin\" ? \"osx\" : \"linux\";\n    const ARCH = process.arch === \"x64\" ? \"x86_64\" : \"i686\";\n    const tarGz = `BrowserStackLocal-07-03-14-${OS}-${ARCH}.gz`;\n    const url = `https:\\/\\/${host}/${tarGz}`;\n\n    enterJob(\"downloading BrowserStack binaries\", () => {\n      return new Promise((resolve, reject) => {\n        const browserStackStream =\n          files.createWriteStream(browserStackPath);\n\n        browserStackStream.on(\"error\", reject);\n        browserStackStream.on(\"end\", resolve);\n\n        const gunzip = require(\"zlib\").createGunzip();\n        gunzip.pipe(browserStackStream);\n        gunzip.write(getUrlWithResuming(url));\n        gunzip.end();\n      }).await();\n    });\n  }\n\n  files.chmod(browserStackPath, 0o755);\n\n  return browserStackPath;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Run\n///////////////////////////////////////////////////////////////////////////////\n\n// Represents a test run of the tool (except we also use it in\n// tests/old.js to run Node scripts). Typically created through the\n// run() method on Sandbox, but can also be created directly, say if\n// you want to do something other than invoke the 'meteor' command in\n// a nice sandbox.\n//\n// Options: args, cwd, env\n//\n// The 'execPath' argument and the 'cwd' option are assumed to be standard\n// paths.\n//\n// Arguments in the 'args' option are not assumed to be standard paths, so\n// calling any of the 'files.*' methods on them is not safe.\nexport class Run {\n  constructor(execPath, options) {\n    this.execPath = execPath;\n    this.cwd = options.cwd || files.convertToStandardPath(process.cwd());\n    // default env variables\n    this.env = Object.assign({ SELFTEST: \"t\", METEOR_NO_WORDWRAP: \"t\" }, options.env);\n    this._args = [];\n    this.proc = null;\n    this.baseTimeout = 20;\n    this.extraTime = 0;\n    this.client = options.client;\n\n    this.stdoutMatcher = new Matcher(this);\n    this.stderrMatcher = new Matcher(this);\n    this.outputLog = new OutputLog(this);\n\n    this.matcherEndPromise = null;\n\n    this.exitStatus = undefined; // 'null' means failed rather than exited\n    this.exitPromiseResolvers = [];\n    const opts = options.args || [];\n    this.args.apply(this, opts || []);\n\n    this.fakeMongoPort = null;\n    this.fakeMongoConnection = null;\n    if (options.fakeMongo) {\n      this.fakeMongoPort = randomPort();\n      this.env.METEOR_TEST_FAKE_MONGOD_CONTROL_PORT = this.fakeMongoPort;\n    }\n\n    runningTest.onCleanup(() => {\n      this._stopWithoutWaiting();\n    });\n  }\n\n  // Set command-line arguments. This may be called multiple times as\n  // long as the run has not yet started (the run starts after the\n  // first call to a function that requires it, like match()).\n  //\n  // Pass as many arguments as you want. Non-object values will be\n  // cast to string, and object values will be treated as maps from\n  // option names to values.\n  args(...args) {\n    if (this.proc) {\n      throw new Error(\"already started?\");\n    }\n\n    args.forEach((a) => {\n      if (typeof a !== \"object\") {\n        this._args.push('' + a);\n      } else {\n        Object.keys(a).forEach((key) => {\n          const value = a[key];\n          this._args.push(\"--\" + key);\n          this._args.push('' + value);\n        });\n      }\n    });\n\n  }\n\n  connectClient() {\n    if (! this.client) {\n      throw new Error(\"Must create Run with a client to use connectClient().\");\n    }\n\n    this._ensureStarted();\n    this.client.connect();\n  }\n\n  // Useful for matching one-time patterns not sensitive to ordering.\n  matchBeforeExit(pattern) {\n    return this.stdoutMatcher.matchBeforeEnd(pattern);\n  }\n\n  matchErrBeforeExit(pattern) {\n    return this.stderrMatcher.matchBeforeEnd(pattern);\n  }\n\n  _exited(status) {\n    if (this.exitStatus !== undefined) {\n      throw new Error(\"already exited?\");\n    }\n\n    this.client && this.client.stop();\n\n    this.exitStatus = status;\n    const exitPromiseResolvers = this.exitPromiseResolvers;\n    this.exitPromiseResolvers = null;\n    exitPromiseResolvers.forEach((resolve) => {\n      resolve();\n    });\n\n    this._endMatchers();\n  }\n\n  _endMatchers() {\n    return this.matcherEndPromise =\n      this.matcherEndPromise || Promise.all([\n        this.stdoutMatcher.endAsync(),\n        this.stderrMatcher.endAsync()\n      ]);\n  }\n\n  _ensureStarted() {\n    if (this.proc) {\n      return;\n    }\n\n    const env = Object.assign(Object.create(null), process.env);\n    Object.assign(env, this.env);\n\n    this.proc = spawn(files.convertToOSPath(this.execPath),\n      this._args, {\n        cwd: files.convertToOSPath(this.cwd),\n        env: env\n      });\n\n    this.proc.on('close', (code, signal) => {\n      if (this.exitStatus === undefined) {\n        this._exited({ code: code, signal: signal });\n      }\n    });\n\n    this.proc.on('exit', (code, signal) => {\n      if (this.exitStatus === undefined) {\n        this._exited({ code: code, signal: signal });\n      }\n    });\n\n    this.proc.on('error', (err) => {\n      if (this.exitStatus === undefined) {\n        this._exited(null);\n      }\n    });\n\n    this.proc.stdout.setEncoding('utf8');\n    this.proc.stdout.on('data', (data) => {\n      this.outputLog.write('stdout', data);\n      this.stdoutMatcher.write(data);\n    });\n\n    this.proc.stderr.setEncoding('utf8');\n    this.proc.stderr.on('data', (data) => {\n      this.outputLog.write('stderr', data);\n      this.stderrMatcher.write(data);\n    });\n  }\n\n  // Wait until we get text on stdout that matches 'pattern', which\n  // may be a regular expression or a string. Consume stdout up to\n  // that point. If this pattern does not appear after a timeout (or\n  // the program exits before emitting the pattern), fail.\n  match(pattern, _strict) {\n    this._ensureStarted();\n\n    let timeout = this.baseTimeout + this.extraTime;\n    timeout *= timeoutScaleFactor;\n    this.extraTime = 0;\n    return this.stdoutMatcher.match(pattern, timeout, _strict);\n  }\n\n  // As expect(), but for stderr instead of stdout.\n  matchErr(pattern, _strict) {\n    this._ensureStarted();\n\n    let timeout = this.baseTimeout + this.extraTime;\n    timeout *= timeoutScaleFactor;\n    this.extraTime = 0;\n    return this.stderrMatcher.match(pattern, timeout, _strict);\n  }\n\n  // Like match(), but won't skip ahead looking for a match. It must\n  // follow immediately after the last thing we matched or read.\n  read(pattern) {\n    return this.match(pattern, true);\n  }\n\n  // As read(), but for stderr instead of stdout.\n  readErr(pattern) {\n    return this.matchErr(pattern, true);\n  }\n\n  // Assert that 'pattern' (again, a regexp or string) has not\n  // occurred on stdout at any point so far in this run. Currently\n  // this works on complete lines, so unlike match() and read(),\n  // 'pattern' cannot span multiple lines, and furthermore if it is\n  // called before the end of the program, it may not see text on a\n  // partially read line. We could lift these restrictions easily, but\n  // there may not be any benefit since the usual way to use this is\n  // to call it after expectExit or expectEnd.\n  //\n  // Example:\n  // run = s.run(\"--help\");\n  // run.expectExit(1);  // <<-- improtant to actually run the command\n  // run.forbidErr(\"unwanted string\"); // <<-- important to run **after** the\n  //                                   // command ran the process.\n  forbid(pattern) {\n    this._ensureStarted();\n    this.outputLog.forbid(pattern, 'stdout');\n  }\n\n  // As forbid(), but for stderr instead of stdout.\n  forbidErr(pattern) {\n    this._ensureStarted();\n    this.outputLog.forbid(pattern, 'stderr');\n  }\n\n  // Combination of forbid() and forbidErr(). Forbids the pattern on\n  // both stdout and stderr.\n  forbidAll(pattern) {\n    this._ensureStarted();\n    this.outputLog.forbid(pattern);\n  }\n\n  // Expect the program to exit without anything further being\n  // printed on either stdout or stderr.\n  expectEnd() {\n    this._ensureStarted();\n\n    let timeout = this.baseTimeout + this.extraTime;\n    timeout *= timeoutScaleFactor;\n    this.extraTime = 0;\n    this.expectExit();\n\n    this.stdoutMatcher.matchEmpty();\n    this.stderrMatcher.matchEmpty();\n  }\n\n  // Expect the program to exit with the given (numeric) exit\n  // status. Fail if the process exits with a different code, or if\n  // the process does not exit after a timeout. You can also omit the\n  // argument to simply wait for the program to exit.\n  expectExit(code) {\n    this._ensureStarted();\n\n    this._endMatchers().await();\n\n    if (this.exitStatus === undefined) {\n      let timeout = this.baseTimeout + this.extraTime;\n      timeout *= timeoutScaleFactor;\n      this.extraTime = 0;\n\n      var timer;\n      const promise = new Promise((resolve, reject) => {\n        this.exitPromiseResolvers.push(resolve);\n        timer = setTimeout(() => {\n          this.exitPromiseResolvers =\n            this.exitPromiseResolvers.filter(r => r !== resolve);\n          reject(new TestFailure('exit-timeout', { run: this }));\n        }, timeout * 1000);\n      });\n\n      try {\n        promise.await();\n      } finally {\n        clearTimeout(timer);\n      }\n    }\n\n    if (! this.exitStatus) {\n      throw new TestFailure('spawn-failure', { run: this });\n    }\n    if (code !== undefined && this.exitStatus.code !== code) {\n      throw new TestFailure('wrong-exit-code', {\n        expected: { code: code },\n        actual: this.exitStatus,\n        run: this\n      });\n    }\n  }\n\n  // Extend the timeout for the next operation by 'secs' seconds.\n  waitSecs(secs) {\n    this.extraTime += secs;\n  }\n\n  // Send 'string' to the program on its stdin.\n  write(string) {\n    this._ensureStarted();\n    this.proc.stdin.write(string);\n  }\n\n  // Kill the program and then wait for it to actually exit.\n  stop() {\n    if (this.exitStatus === undefined) {\n      this._ensureStarted();\n      this.client && this.client.stop();\n      this._killProcess();\n      this.expectExit();\n    }\n  }\n\n  // Like stop, but doesn't wait for it to exit.\n  _stopWithoutWaiting() {\n    if (this.exitStatus === undefined && this.proc) {\n      this.client && this.client.stop();\n      this._killProcess();\n    }\n  }\n\n  // Kills the running process and it's child processes\n  _killProcess() {\n    if (!this.proc) {\n      throw new Error(\"Unexpected: `this.proc` undefined when calling _killProcess\");\n    }\n\n    if (process.platform === \"win32\") {\n      // looks like in Windows `this.proc.kill()` doesn't kill child\n      // processes.\n      execFileSync(\"taskkill\", [\"/pid\", this.proc.pid, '/f', '/t']);\n    } else {\n      this.proc.kill();\n    }\n  }\n\n  // If the fakeMongo option was set, sent a command to the stub\n  // mongod. Available commands currently are:\n  //\n  // - { stdout: \"xyz\" } to make fake-mongod write \"xyz\" to stdout\n  // - { stderr: \"xyz\" } likewise for stderr\n  // - { exit: 123 } to make fake-mongod exit with code 123\n  //\n  // Blocks until a connection to fake-mongod can be\n  // established. Throws a TestFailure if it cannot be established.\n  tellMongo(command) {\n    if (! this.fakeMongoPort) {\n      throw new Error(\"fakeMongo option on sandbox must be set\");\n    }\n\n    this._ensureStarted();\n\n    // If it's the first time we've called tellMongo on this sandbox,\n    // open a connection to fake-mongod. Wait up to 60 seconds for it\n    // to accept the connection, retrying every 100ms.\n    //\n    // XXX we never clean up this connection. Hopefully once\n    // fake-mongod has dropped its end of the connection, and we hold\n    // no reference to our end, it will get gc'd. If not, that's not\n    // great, but it probably doesn't actually create any practical\n    // problems since this is only for testing.\n    if (! this.fakeMongoConnection) {\n      const net = require('net');\n\n      let lastStartTime = 0;\n      for (let attempts = 0; ! this.fakeMongoConnection && attempts < 600;\n           attempts ++) {\n        // Throttle attempts to one every 100ms\n        sleepMs((lastStartTime + 100) - (+ new Date));\n        lastStartTime = +(new Date);\n\n        new Promise((resolve) => {\n          // This is all arranged so that if a previous attempt\n          // belatedly succeeds, somehow, we ignore it.\n          const conn = net.connect(this.fakeMongoPort, () => {\n            if (resolve) {\n              this.fakeMongoConnection = conn;\n              resolve(true);\n              resolve = null;\n            }\n          });\n          conn.setNoDelay();\n          function fail() {\n            if (resolve) {\n              resolve(false);\n              resolve = null;\n            }\n          }\n          conn.on('error', fail);\n          setTimeout(fail, 100); // 100ms connection timeout\n        }).await();\n      }\n\n      if (! this.fakeMongoConnection) {\n        throw new TestFailure(\"mongo-not-running\", { run: this });\n      }\n    }\n\n    this.fakeMongoConnection.write(JSON.stringify(command) + \"\\n\");\n    // If we told it to exit, then we should close our end and connect again if\n    // asked to send more.\n    if (command.exit) {\n      this.fakeMongoConnection.end();\n      this.fakeMongoConnection = null;\n    }\n  }\n}\n\nconst wrapWithMarkStack = (func) => markStack(func);\n\n// `Run` class methods to wrap with `markStack`\n[\n  'expectEnd',\n  'expectExit',\n  'forbid',\n  'forbidAll',\n  'forbidErr',\n  'match',\n  'matchBeforeExit',\n  'matchErr',\n  'matchErrBeforeExit',\n  'read',\n  'readErr',\n  'stop',\n  'tellMongo',\n].forEach(functionName =>\n  Run.prototype[functionName] = wrapWithMarkStack(Run.prototype[functionName]));\n\n///////////////////////////////////////////////////////////////////////////////\n// Defining tests\n///////////////////////////////////////////////////////////////////////////////\n\nclass Test {\n  constructor(options) {\n    this.name = options.name;\n    this.file = options.file;\n    this.fileHash = options.fileHash;\n    this.tags = options.tags || [];\n    this.f = options.func;\n    this.durationMs = null;\n    this.cleanupHandlers = [];\n  }\n\n  onCleanup(cleanupHandler) {\n    this.cleanupHandlers.push(cleanupHandler);\n  }\n\n  cleanup() {\n    this.cleanupHandlers.forEach((cleanupHandler) => {\n      cleanupHandler();\n    });\n    this.cleanupHandlers = [];\n  }\n}\n\nlet allTests = null;\nlet fileBeingLoaded = null;\nlet fileBeingLoadedHash = null;\nlet runningTest = null;\nconst getAllTests = () => {\n  if (allTests) {\n    return allTests;\n  }\n  allTests = [];\n\n  // Load all files in the 'tests' directory that end in .js. They\n  // are supposed to then call define() to register their tests.\n  const testdir = files.pathJoin(__dirname, '..', 'tests');\n  const filenames = files.readdir(testdir);\n  filenames.forEach((n) => {\n    if (! n.match(/^[^.].*\\.js$/)) {\n      // ends in '.js', doesn't start with '.'\n      return;\n    }\n    try {\n      if (fileBeingLoaded) {\n        throw new Error(\"called recursively?\");\n      }\n      fileBeingLoaded = files.pathBasename(n, '.js');\n\n      const fullPath = files.pathJoin(testdir, n);\n      const contents = files.readFile(fullPath, 'utf8');\n      fileBeingLoadedHash =\n        require('crypto').createHash('sha1').update(contents).digest('hex');\n\n      require(files.pathJoin(testdir, n));\n    } finally {\n      fileBeingLoaded = null;\n      fileBeingLoadedHash = null;\n    }\n  });\n\n  return allTests;\n};\n\nexport function define(name, tagsList, f) {\n  if (typeof tagsList === \"function\") {\n    // tagsList is optional\n    f = tagsList;\n    tagsList = [];\n  }\n\n  const tags = tagsList.slice();\n  tags.sort();\n\n  allTests.push(new Test({\n    name: name,\n    tags: tags,\n    file: fileBeingLoaded,\n    fileHash: fileBeingLoadedHash,\n    func: f\n  }));\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Choosing tests\n///////////////////////////////////////////////////////////////////////////////\n\nconst tagDescriptions = {\n  checkout: 'can only run from checkouts',\n  net: 'require an internet connection',\n  slow: 'take quite a long time; use --slow to include',\n  galaxy: 'galaxy-specific test testing galaxy integration',\n  cordova: 'requires Cordova support in tool (eg not on Windows)',\n  windows: 'runs only on Windows',\n  // these are pseudo-tags, assigned to tests when you specify\n  // --changed, --file, or a pattern argument\n  unchanged: 'unchanged since last pass',\n  'non-matching': \"don't match specified pattern\",\n  'in other files': \"\",\n  // These tests require a setup step which can be amortized across multiple\n  // similar tests, so it makes sense to segregate them\n  'custom-warehouse': \"requires a custom warehouse\"\n};\n\n// Returns a TestList object representing a filtered list of tests,\n// according to the options given (which are based closely on the\n// command-line arguments).  Used as the first step of both listTests\n// and runTests.\n//\n// Options: testRegexp, fileRegexp, onlyChanged, offline, includeSlowTests, galaxyOnly\nfunction getFilteredTests(options) {\n  options = options || {};\n  let allTests = getAllTests();\n  let testState;\n\n  if (allTests.length) {\n    testState = readTestState();\n\n    // Add pseudo-tags 'non-matching', 'unchanged', 'non-galaxy' and 'in other\n    // files' (but only so that we can then skip tests with those tags)\n    allTests = allTests.map((test) => {\n      const newTags = [];\n\n      if (options.fileRegexp && ! options.fileRegexp.test(test.file)) {\n        newTags.push('in other files');\n      } else if (options.testRegexp && ! options.testRegexp.test(test.name)) {\n        newTags.push('non-matching');\n      } else if (options.onlyChanged &&\n                 test.fileHash === testState.lastPassedHashes[test.file]) {\n        newTags.push('unchanged');\n      } else if (options.excludeRegexp &&\n                 options.excludeRegexp.test(test.name)) {\n        newTags.push('excluded');\n      }\n\n      // We make sure to not run galaxy tests unless the user explicitly asks us\n      // to. Someday, this might not be the case.\n      if (! test.tags.includes(\"galaxy\")) {\n        newTags.push('non-galaxy');\n      }\n\n      if (! newTags.length) {\n        return test;\n      }\n\n      return Object.assign(\n        Object.create(Object.getPrototypeOf(test)),\n        test,\n        {\n          tags: test.tags.concat(newTags),\n        }\n      );\n    });\n  }\n\n  // (order of tags is significant to the \"skip counts\" that are displayed)\n  const tagsToSkip = [];\n  if (options.fileRegexp) {\n    tagsToSkip.push('in other files');\n  }\n  if (options.testRegexp) {\n    tagsToSkip.push('non-matching');\n  }\n  if (options.excludeRegexp) {\n    tagsToSkip.push('excluded');\n  }\n  if (options.onlyChanged) {\n    tagsToSkip.push('unchanged');\n  }\n  if (! files.inCheckout()) {\n    tagsToSkip.push('checkout');\n  }\n  if (options.galaxyOnly) {\n    // We consider `galaxy` to imply `slow` and `net` since almost all galaxy\n    // tests involve deploying an app to a (probably) remote server.\n    tagsToSkip.push('non-galaxy');\n  } else {\n    tagsToSkip.push('galaxy');\n    if (options.offline) {\n      tagsToSkip.push('net');\n    }\n    if (! options.includeSlowTests) {\n      tagsToSkip.push('slow');\n    }\n  }\n\n  if (options['without-tag']) {\n    tagsToSkip.push(options['without-tag']);\n  }\n\n  if (process.platform === \"win32\") {\n    tagsToSkip.push(\"cordova\");\n    tagsToSkip.push(\"yet-unsolved-windows-failure\");\n  } else {\n    tagsToSkip.push(\"windows\");\n  }\n\n  const tagsToMatch = options['with-tag'] ? [options['with-tag']] : [];\n  return new TestList(allTests, tagsToSkip, tagsToMatch, testState);\n};\n\nfunction groupTestsByFile(tests) {\n  const grouped = {};\n  tests.forEach(test => {\n    grouped[test.file] = grouped[test.file] || [];\n    grouped[test.file].push(test);\n  });\n\n  return grouped;\n}\n\n// A TestList is the result of getFilteredTests.  It holds the original\n// list of all tests, the filtered list, and stats on how many tests\n// were skipped (see generateSkipReport).\n//\n// TestList also has code to save the hashes of files where all tests\n// ran and passed (for the `--changed` option).  If a testState is\n// provided, the notifyFailed and saveTestState can be used to modify\n// the testState appropriately and write it out.\nclass TestList {\n  constructor(allTests, tagsToSkip, tagsToMatch, testState) {\n    tagsToSkip = (tagsToSkip || []);\n    testState = (testState || null); // optional\n    this.allTests = allTests;\n    this.skippedTags = tagsToSkip;\n    this.skipCounts = {};\n    this.testState = testState;\n\n    tagsToSkip.forEach((tag) => {\n      this.skipCounts[tag] = 0;\n    });\n\n    this.fileInfo = {}; // path -> {hash, hasSkips, hasFailures}\n\n    this.filteredTests = allTests.filter((test) => {\n\n      if (! this.fileInfo[test.file]) {\n        this.fileInfo[test.file] = {\n          hash: test.fileHash,\n          hasSkips: false,\n          hasFailures: false\n        };\n      }\n      const fileInfo = this.fileInfo[test.file];\n\n      if (tagsToMatch.length) {\n        const matches = tagsToMatch.some((tag) => test.tags.includes(tag));\n        if (!matches) {\n          return false;\n        }\n      }\n\n      // We look for tagsToSkip *in order*, and when we decide to\n      // skip a test, we don't keep looking at more tags, and we don't\n      // add the test to any further \"skip counts\".\n      return !tagsToSkip.some((tag) => {\n        if (test.tags.includes(tag)) {\n          this.skipCounts[tag]++;\n          fileInfo.hasSkips = true;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    });\n  }\n\n  // Mark a test's file as having failures.  This prevents\n  // saveTestState from saving its hash as a potentially\n  // \"unchanged\" file to be skipped in a future run.\n  notifyFailed(test, failureObject) {\n    // Mark the file that this test lives in as having failures.\n    this.fileInfo[test.file].hasFailures = true;\n\n    // Mark that the specific test failed.\n    test.failed = true;\n\n    // If there is a failure object, store that for potential output.\n    if (failureObject) {\n      test.failureObject = failureObject;\n    }\n  }\n\n  saveJUnitOutput(path) {\n    const grouped = groupTestsByFile(this.filteredTests);\n\n    // We'll form an collection of \"testsuites\"\n    const testSuites = [];\n\n    const attrSafe = attr => (attr || \"\").replace('\"', \"&quot;\");\n    const durationForOutput = durationMs => durationMs / 1000;\n\n    // Each file is a testsuite.\n    Object.keys(grouped).forEach((file) => {\n      const testCases = [];\n\n      let countError = 0;\n      let countFailure = 0;\n\n      // Each test is a \"testcase\".\n      grouped[file].forEach((test) => {\n        const testCaseAttrs = [\n          `name=\"${attrSafe(test.name)}\"`,\n        ];\n\n        if (test.durationMs) {\n          testCaseAttrs.push(`time=\"${durationForOutput(test.durationMs)}\"`);\n        }\n\n        const testCaseAttrsString = testCaseAttrs.join(' ');\n\n        if (test.failed) {\n          let failureElement = \"\";\n\n          if (test.failureObject instanceof TestFailure) {\n            countFailure++;\n\n            failureElement = [\n              `<error type=\"${test.failureObject.reason}\">`,\n              '<![CDATA[',\n              inspect(test.failureObject.details, { depth: 4 }),\n              ']]>',\n              '</error>',\n            ].join('\\n');\n          } else if (test.failureObject && test.failureObject.stack) {\n            countError++;\n\n            failureElement = [\n              '<failure>',\n              '<![CDATA[',\n              test.failureObject.stack,\n              ']]>',\n              '</failure>',\n            ].join('\\n');\n          } else {\n            countError++;\n\n            failureElement = '<failure />';\n          }\n\n          testCases.push(\n            [\n              `<testcase ${testCaseAttrsString}>`,\n              failureElement,\n              '</testcase>',\n            ].join('\\n'),\n          );\n        } else {\n          testCases.push(`<testcase ${testCaseAttrsString}/>`);\n        }\n      });\n\n      const testSuiteAttrs = [\n        `name=\"${file}\"`,\n        `tests=\"${testCases.length}\"`,\n        `failures=\"${countFailure}\"`,\n        `errors=\"${countError}\"`,\n        `time=\"${durationForOutput(this.durationMs)}\"`,\n      ];\n\n      const testSuiteAttrsString = testSuiteAttrs.join(' ');\n\n      testSuites.push(\n        [\n          `<testsuite ${testSuiteAttrsString}>`,\n          testCases.join('\\n'),\n          '</testsuite>',\n        ].join('\\n'),\n      );\n    });\n\n    const xmlHeader = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n\n    const testSuitesString = testSuites.join('\\n');\n\n    files.writeFile(path,\n      [\n        xmlHeader,\n        `<testsuites>`,\n        testSuitesString,\n        `</testsuites>`,\n      ].join('\\n'),\n      'utf8',\n    );\n  }\n\n  // If this TestList was constructed with a testState,\n  // modify it and write it out based on which tests\n  // were skipped and which tests had failures.\n  saveTestState() {\n    const testState = this.testState;\n    if (! (testState && this.filteredTests.length)) {\n      return;\n    }\n\n    Object.keys(this.fileInfo).forEach((f) => {\n      const info = this.fileInfo[f];\n      if (info.hasFailures) {\n        delete testState.lastPassedHashes[f];\n      } else if (! info.hasSkips) {\n        testState.lastPassedHashes[f] = info.hash;\n      }\n    });\n\n    writeTestState(testState);\n  }\n\n  // Return a string like \"Skipped 1 foo test\\nSkipped 5 bar tests\\n\"\n  generateSkipReport() {\n    let result = '';\n\n    this.skippedTags.forEach((tag) => {\n      const count = this.skipCounts[tag];\n      if (count) {\n        const noun = \"test\" + (count > 1 ? \"s\" : \"\"); // \"test\" or \"tests\"\n        // \"non-matching tests\" or \"tests in other files\"\n        const nounPhrase = (/ /.test(tag) ?\n                          (noun + \" \" + tag) : (tag + \" \" + noun));\n        // \" (foo)\" or \"\"\n        const parenthetical = (tagDescriptions[tag] ? \" (\" +\n                            tagDescriptions[tag] + \")\" : '');\n        result += (\"Skipped \" + count + \" \" + nounPhrase + parenthetical + '\\n');\n      }\n    });\n\n    return result;\n  }\n}\n\nfunction getTestStateFilePath() {\n  return files.pathJoin(files.getHomeDir(), '.meteortest');\n};\n\nfunction readTestState() {\n  const testStateFile = getTestStateFilePath();\n  let testState;\n  if (files.exists(testStateFile)) {\n    testState = JSON.parse(files.readFile(testStateFile, 'utf8'));\n  }\n  if (! testState || testState.version !== 1) {\n    testState = { version: 1, lastPassedHashes: {} };\n  }\n  return testState;\n};\n\nfunction writeTestState(testState) {\n  const testStateFile = getTestStateFilePath();\n  files.writeFile(testStateFile, JSON.stringify(testState), 'utf8');\n}\n\n// Same options as getFilteredTests.  Writes to stdout and stderr.\nexport function listTests(options) {\n  const testList = getFilteredTests(options);\n\n  if (! testList.allTests.length) {\n    Console.error(\"No tests defined.\\n\");\n    return;\n  }\n\n  const grouped = groupTestsByFile(testList.filteredTests);\n\n  Object.keys(grouped).forEach((file) => {\n    Console.rawInfo(file + ':\\n');\n    grouped[file].forEach((test) => {\n      Console.rawInfo('  - ' + test.name +\n                      (test.tags.length ? ' [' + test.tags.join(' ') + ']'\n                      : '') + '\\n');\n    });\n  });\n\n  Console.error();\n  Console.error(testList.filteredTests.length + \" tests listed.\");\n  Console.error(testList.generateSkipReport());\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Running tests\n///////////////////////////////////////////////////////////////////////////////\n\n// options: onlyChanged, offline, includeSlowTests, historyLines, testRegexp,\n//          fileRegexp,\n//          clients:\n//             - browserstack (need s3cmd credentials)\nexport function runTests(options) {\n  const testList = getFilteredTests(options);\n\n  if (! testList.allTests.length) {\n    Console.error(\"No tests defined.\");\n    return 0;\n  }\n\n  testList.startTime = new Date;\n\n  let totalRun = 0;\n  const failedTests = [];\n\n  testList.filteredTests.forEach((test) => {\n    totalRun++;\n    Console.error(test.file + \": \" + test.name + \" ... \");\n    runTest(test);\n  });\n\n  testList.endTime = new Date;\n  testList.durationMs = testList.endTime - testList.startTime;\n\n  function runTest(test, tries = 3) {\n    let failure = null;\n    let startTime;\n    try {\n      runningTest = test;\n      startTime = +(new Date);\n      // ensure we mark the bottom of the stack each time we start a new test\n      parseStackMarkBottom(() => {\n        test.f(options);\n      })();\n    } catch (e) {\n      failure = e;\n    } finally {\n      runningTest = null;\n      test.cleanup();\n    }\n\n    test.durationMs = +(new Date) - startTime;\n\n    if (failure) {\n      Console.error(\"... fail!\", Console.options({ indent: 2 }));\n\n      if (--tries > 0) {\n        Console.error(\n          \"... retrying (\" + tries + (tries === 1 ? \" try\" : \" tries\") + \" remaining) ...\",\n          Console.options({ indent: 2 })\n        );\n\n        return runTest(test, tries);\n      }\n\n      if (failure instanceof TestFailure) {\n        const frames = parseStackParse(failure).outsideFiber;\n        const relpath = files.pathRelative(files.getCurrentToolsDir(),\n                                         frames[0].file);\n        Console.rawError(\"  => \" + failure.reason + \" at \" +\n                         relpath + \":\" + frames[0].line + \"\\n\");\n        if (failure.reason === 'no-match' || failure.reason === 'junk-before' ||\n            failure.reason === 'match-timeout') {\n          Console.arrowError(\"Pattern: \" + failure.details.pattern, 2);\n        }\n        if (failure.reason === \"wrong-exit-code\") {\n          const s = (status) => {\n            return status.signal || ('' + status.code) || \"???\";\n          };\n\n          Console.rawError(\n            \"  => \" + \"Expected: \" + s(failure.details.expected) +\n              \"; actual: \" + s(failure.details.actual) + \"\\n\");\n        }\n        if (failure.reason === 'expected-exception') {\n        }\n        if (failure.reason === 'not-equal') {\n          Console.rawError(\n            \"  => \" + \"Expected: \" + JSON.stringify(failure.details.expected) +\n              \"; actual: \" + JSON.stringify(failure.details.actual) + \"\\n\");\n        }\n\n        if (failure.details.run) {\n          failure.details.run.outputLog.end();\n          const lines = failure.details.run.outputLog.get();\n          if (! lines.length) {\n            Console.arrowError(\"No output\", 2);\n          } else {\n            const historyLines = options.historyLines || 100;\n\n            Console.arrowError(\"Last \" + historyLines + \" lines:\", 2);\n            lines.slice(-historyLines).forEach((line) => {\n              Console.rawError(\"  \" +\n                               (line.channel === \"stderr\" ? \"2| \" : \"1| \") +\n                               line.text +\n                               (line.bare ? \"%\" : \"\") + \"\\n\");\n            });\n          }\n        }\n\n        if (failure.details.messages) {\n          Console.arrowError(\"Errors while building:\", 2);\n          Console.rawError(failure.details.messages.formatMessages() + \"\\n\");\n        }\n      } else {\n        Console.rawError(\"  => Test threw exception: \" + failure.stack + \"\\n\");\n      }\n\n      failedTests.push(test);\n      testList.notifyFailed(test, failure);\n    } else {\n      Console.error(\n        \"... ok (\" + test.durationMs + \" ms)\",\n        Console.options({ indent: 2 }));\n    }\n  }\n\n  testList.saveTestState();\n\n  if (options.junit) {\n    testList.saveJUnitOutput(options.junit);\n  }\n\n  if (totalRun > 0) {\n    Console.error();\n  }\n\n  Console.error(testList.generateSkipReport());\n\n  if (testList.filteredTests.length === 0) {\n    Console.error(\"No tests run.\");\n    return 0;\n  } else if (failedTests.length === 0) {\n    let disclaimers = '';\n    if (testList.filteredTests.length < testList.allTests.length) {\n      disclaimers += \" other\";\n    }\n    Console.error(\"All\" + disclaimers + \" tests passed.\");\n    return 0;\n  } else {\n    const failureCount = failedTests.length;\n    Console.error(failureCount + \" failure\" +\n                  (failureCount > 1 ? \"s\" : \"\") + \":\");\n    failedTests.forEach((test) => {\n      Console.rawError(\"  - \" + test.file + \": \" + test.name + \"\\n\");\n    });\n    return 1;\n  }\n};\n\n// To create self-tests:\n//\n// Create a new .js file in the tests directory. It will be picked\n// up automatically.\n//\n// Start your file with something like:\n//   var selftest = require('./selftest.js');\n//   var Sandbox = selftest.Sandbox;\n//\n// Define tests with:\n//   selftest.define(\"test-name\", ['tag1', 'tag2'], function () {\n//     ...\n//   });\n//\n// The tags are used to group tests. Currently used tags:\n//   - 'checkout': should only be run when we're running from a\n//     checkout as opposed to a released copy.\n//   - 'net': test requires an internet connection. Not going to work\n//     if you're on a plane; will be skipped if we appear to be\n//     offline unless run with 'self-test --force-online'.\n//   - 'slow': test is slow enough that you don't want to run it\n//     except on purpose. Won't run unless you say 'self-test --slow'.\n//\n// If you don't want to set any tags, you can omit that parameter\n// entirely.\n//\n// Inside your test function, first create a Sandbox object, then call\n// the run() method on the sandbox to set up a new run of meteor with\n// arguments of your choice, and then use functions like match(),\n// write(), and expectExit() to script that run.\n"]}