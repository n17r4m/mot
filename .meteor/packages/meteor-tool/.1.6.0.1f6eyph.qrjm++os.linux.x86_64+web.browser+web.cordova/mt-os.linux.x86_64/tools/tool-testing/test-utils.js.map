{"version":3,"sources":["/tools/tool-testing/test-utils.js"],"names":["loadIsopackage","module","watch","require","v","config","utils","auth","selftest","httpHelpers","_","randomString","charsCount","chars","str","i","charAt","Math","floor","random","length","exports","accountsCommandTimeoutSecs","timeoutScaleFactor","randomAppName","randomUserEmail","login","s","username","password","run","waitSecs","matchErr","write","expectExit","logout","registrationUrlRegexp","ddpConnect","url","DDP","connect","registerWithToken","token","email","accountsConn","getAuthDDPUrl","registrationTokenInfo","call","registrationCode","code","emails","close","randomOrgName","createOrganization","orgName","withAccountsConnection","conn","meteorAccountsLoginInfo","clientInfo","err","fail","getMeteorRuntimeConfigFromHTML","html","m","match","JSON","parse","decodeURIComponent","checkForSettings","markStack","appName","settings","timeoutSecs","timeoutDate","Date","valueOf","result","request","mrc","body","e","isEqual","PUBLIC_SETTINGS"],"mappings":"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","file":"tools/tool-testing/test-utils.js.map","sourcesContent":["var config = require('../meteor-services/config.js');\nvar utils = require('../utils/utils.js');\nvar auth = require('../meteor-services/auth.js');\nvar selftest = require('./selftest.js');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar _ = require('underscore');\n\nimport { loadIsopackage } from '../tool-env/isopackets.js'\n\nvar randomString = function (charsCount) {\n  var chars = 'abcdefghijklmnopqrstuvwxyz';\n  var str = '';\n  for (var i = 0; i < charsCount; i++) {\n    str = str + chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return str;\n};\n\nexports.accountsCommandTimeoutSecs = 15 * utils.timeoutScaleFactor;\n\nexports.randomString = randomString;\n\nvar randomAppName = function () {\n  return 'selftest-app-' + randomString(10);\n};\n\nexports.randomAppName = randomAppName;\n\nexports.randomUserEmail = function () {\n  return 'selftest-user-' + randomString(15) + '@guerrillamail.com';\n};\n\nexports.login = function (s, username, password) {\n  var run = s.run('login');\n  run.waitSecs(15);\n  run.matchErr('Username:');\n  run.write(username + '\\n');\n  run.matchErr('Password:');\n  run.write(password + '\\n');\n  run.waitSecs(15);\n  run.matchErr('Logged in as ' + username + \".\");\n  run.expectExit(0);\n};\n\nexports.logout = function (s) {\n  var run = s.run('logout');\n  run.waitSecs(15);\n  run.matchErr('Logged out');\n  run.expectExit(0);\n};\n\nvar registrationUrlRegexp =\n      /https:\\/\\/www\\.meteor\\.com\\/setPassword\\?([a-zA-Z0-9\\+\\/]+)/;\nexports.registrationUrlRegexp = registrationUrlRegexp;\n\nfunction ddpConnect(url) {\n  return loadIsopackage('ddp-client').DDP.connect(url);\n}\n\nexports.ddpConnect = ddpConnect;\n\n// Given a registration token created by doing a deferred registration\n// with `email`, makes a DDP connection to the accounts server and\n// finishes the registration process.\nexports.registerWithToken = function (token, username, password, email) {\n  // XXX It might make more sense to hard-code the DDP url to\n  // https://www.meteor.com, since that's who the sandboxes are talking\n  // to.\n  var accountsConn = ddpConnect(config.getAuthDDPUrl());\n  var registrationTokenInfo = accountsConn.call('registrationTokenInfo',\n                                                token);\n  var registrationCode = registrationTokenInfo.code;\n  accountsConn.call('register', {\n    username: username,\n    password: password,\n    emails: [email],\n    token: token,\n    code: registrationCode\n  });\n  accountsConn.close();\n};\n\nexports.randomOrgName = function () {\n  return \"selftestorg\" + exports.randomString(10);\n};\n\n// Logs in as the specified user and creates a randomly named\n// organization. Returns the organization name. Calls selftest.fail if\n// the organization can't be created.\nexports.createOrganization = function (username, password) {\n  var orgName = exports.randomOrgName();\n  auth.withAccountsConnection(function (conn) {\n    try {\n      conn.call(\"login\", {\n        meteorAccountsLoginInfo: { username: username, password: password },\n        clientInfo: {}\n      });\n    } catch (err) {\n      selftest.fail(\"Failed to log in to Meteor developer accounts\\n\" +\n                    \"with test user: \" + err);\n    }\n\n    try {\n      conn.call(\"createOrganization\", orgName);\n    } catch (err) {\n      selftest.fail(\"Failed to create organization: \" + err);\n    }\n  })();\n\n  return orgName;\n};\n\nexports.getMeteorRuntimeConfigFromHTML = function (html) {\n  var m = html.match(/__meteor_runtime_config__ = JSON.parse\\(decodeURIComponent\\(\"([^\"]+?)\"\\)\\)/);\n  if (! m) {\n    selftest.fail(\"Can't find __meteor_runtime_config__\");\n  }\n  return JSON.parse(decodeURIComponent(m[1]));\n};\n\n\n// Poll the given app looking for the correct settings. Throws an error\n// if the settings aren't found after a timeout.\nexports.checkForSettings = selftest.markStack(function (appName, settings, timeoutSecs) {\n  var timeoutDate = new Date(new Date().valueOf() + timeoutSecs * 1000);\n  while (true) {\n    if (new Date() >= timeoutDate) {\n      selftest.fail('Expected settings not found on app ' + appName);\n    }\n\n    var result = httpHelpers.request('http://' + appName);\n\n    // XXX This is brittle; the test will break if we start formatting the\n    // __meteor_runtime_config__ JS differently. Ideally we'd do something\n    // like point a phantom at the deployed app and actually evaluate\n    // Meteor.settings.\n    try {\n      var mrc = exports.getMeteorRuntimeConfigFromHTML(result.body);\n    } catch (e) {\n      // ignore\n      continue;\n    }\n\n    if (_.isEqual(mrc.PUBLIC_SETTINGS, settings['public'])) {\n      return;\n    }\n  }\n});\n"]}