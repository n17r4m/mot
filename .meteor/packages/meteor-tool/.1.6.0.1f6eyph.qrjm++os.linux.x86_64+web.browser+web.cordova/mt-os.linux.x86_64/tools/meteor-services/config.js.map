{"version":3,"sources":["/tools/meteor-services/config.js"],"names":["module","export","getOauthUrl","getAccountsApiUrl","getAuthDDPUrl","getBuildFarmUrl","getBuildFarmDomain","getPackageServerUrl","getPackageServerDomain","getPackageStatsServerUrl","getPackageStatsServerDomain","getPackageServerFilePrefix","getPackagesDirectoryName","getLocalPackageCacheFilename","getPackageStorage","getIsopacketRoot","getAccountsDomain","getSessionFilePath","urlParse","watch","require","parse","v","pathJoin","getCurrentToolsDir","getHomeDir","inCheckout","tropohouse","default","process","env","METEOR_BUILD_FARM_URL","host","METEOR_PACKAGE_SERVER_URL","METEOR_PACKAGE_STATS_SERVER_URL","serverUrl","replace","prefix","options","root","METEOR_SESSION_FILE"],"mappings":"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","file":"tools/meteor-services/config.js.map","sourcesContent":["import { parse as urlParse } from 'url';\nimport {\n  pathJoin,\n  getCurrentToolsDir,\n  getHomeDir,\n  inCheckout,\n} from '../fs/files.js';\nimport tropohouse from '../packaging/tropohouse.js';\n\n// A few functions in the `meteor` tool talk to MDG servers: primarily\n// checking for updates, logging into your Meteor account, and\n// deploying apps to the MDG free hosting sandbox, publishing packages,\n// getting an ssh access to a build farm. These functions need\n// configuration.\n\n// Base URL for Meteor Accounts OAuth services. Endpoints include /authorize\n// and /token.\nexport function getOauthUrl() {\n  return \"https://www.meteor.com/oauth2\";\n}\n\n// Base URL for Meteor Accounts API. Endpoints include '/login' and\n// '/logoutById'.\nexport function getAccountsApiUrl() {\n  return \"https://www.meteor.com/api/v1\";\n}\n\n// URL for the DDP interface to Meteor Accounts.\nexport function getAuthDDPUrl() {\n  return \"https://www.meteor.com/auth\";\n}\n\n// URL for the DDP interface to the meteor build farm, typically\n// \"https://build.meteor.com\".\nexport function getBuildFarmUrl() {\n  return process.env.METEOR_BUILD_FARM_URL || \"https://build.meteor.com\";\n}\n\nexport function getBuildFarmDomain() {\n  return urlParse(getBuildFarmUrl()).host;\n}\n\n// URL for the DDP interface to the package server, typically\n// \"https://packages.meteor.com\".\nexport function getPackageServerUrl() {\n  return process.env.METEOR_PACKAGE_SERVER_URL ||\n    \"https://packages.meteor.com\";\n}\n\nexport function getPackageServerDomain() {\n  return urlParse(getPackageServerUrl()).host;\n}\n\nexport function getPackageStatsServerUrl() {\n  return process.env.METEOR_PACKAGE_STATS_SERVER_URL ||\n    \"https://activity.meteor.com\";\n}\n\nexport function getPackageStatsServerDomain() {\n  return urlParse(getPackageStatsServerUrl()).host;\n}\n\n// Note: this is NOT guaranteed to return a distinct prefix for every\n// conceivable URL.  But it sure ought to return a distinct prefix for every\n// server we actually use.\nexport function getPackageServerFilePrefix(serverUrl) {\n  if (!serverUrl) {\n    serverUrl = getPackageServerUrl();\n  }\n\n  // Chop off http:// and https:// and trailing slashes.\n  serverUrl = serverUrl.replace(/^\\https:\\/\\//, '');\n  serverUrl = serverUrl.replace(/^\\http:\\/\\//, '');\n  serverUrl = serverUrl.replace(/\\/+$/, '');\n\n  // Chop off meteor.com.\n  serverUrl = serverUrl.replace(/\\.meteor\\.com$/, '');\n\n  // Replace other weird stuff with X.\n  serverUrl = serverUrl.replace(/[^a-zA-Z0-9.-]/g, 'X');\n\n  return serverUrl;\n}\n\nexport function getPackagesDirectoryName(serverUrl) {\n  var prefix = getPackageServerFilePrefix(serverUrl);\n  if (prefix !== 'packages') {\n    prefix = pathJoin('packages-from-server', prefix);\n  }\n\n  return prefix;\n}\n\nexport function getLocalPackageCacheFilename(serverUrl) {\n  var prefix = getPackageServerFilePrefix(serverUrl);\n\n  // Should look like 'packages.data.db' in the default case\n  // (packages.data.json before 0.9.4).\n  return prefix + \".data.db\";\n}\n\nexport function getPackageStorage(options) {\n  options = options || {};\n  var root = options.root || tropohouse.default.root;\n  return pathJoin(root, \"package-metadata\", \"v2.0.1\",\n    getLocalPackageCacheFilename(options.serverUrl));\n}\n\nexport function getIsopacketRoot() {\n  if (inCheckout()) {\n    return pathJoin(getCurrentToolsDir(), '.meteor', 'isopackets');\n  } else {\n    return pathJoin(getCurrentToolsDir(), 'isopackets');\n  }\n}\n\n// Return the domain name of the current Meteor Accounts server in\n// use. This is used as a key for storing your Meteor Accounts\n// login token.\nexport function getAccountsDomain() {\n  return \"www.meteor.com\";\n}\n\n// Path to file that contains our credentials for any services that\n// we're logged in to. Typically .meteorsession in the user's home\n// directory.\nexport function getSessionFilePath() {\n  // METEOR_SESSION_FILE is for automated testing purposes only.\n  return process.env.METEOR_SESSION_FILE ||\n    pathJoin(getHomeDir(), '.meteorsession');\n}\n"]}