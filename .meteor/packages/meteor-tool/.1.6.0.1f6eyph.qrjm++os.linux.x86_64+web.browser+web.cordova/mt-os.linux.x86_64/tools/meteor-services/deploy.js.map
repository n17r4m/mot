{"version":3,"sources":["/tools/meteor-services/deploy.js"],"names":["module1","module","export","bundleAndDeploy","deleteApp","temporaryMongoUrl","logs","listAuthorized","changeAuthorized","listSites","pathJoin","createTarGzStream","getSettings","mkdtemp","watch","require","v","request","buildmessage","default","pollForRegistrationCompletion","doInteractivePasswordLogin","loggedInUsername","isLoggedIn","maybePrintRegistrationLink","recordPackages","Console","hasOwn","Object","prototype","hasOwnProperty","CAPABILITIES","deployRpc","options","assign","headers","cookie","Error","qs","capabilities","deployURLBase","getDeployURL","site","await","printDeployURL","info","result","url","operation","method","bodyStream","useAuthHeader","encoding","e","statusCode","errorMessage","message","response","body","ret","length","contentType","payload","JSON","parse","hasAllExpectedKeys","expectPayload","map","key","call","every","x","expectMessage","authedRpc","rpcOptions","preflight","infoResult","promptIfAuthFails","error","isInteractive","username","readLine","prompt","stream","process","stderr","loginOptions","suppressErrorMessage","protection","authorized","printUnauthorizedMessage","command","canonicalizeSite","match","parsed","hostname","pathname","hash","query","recordPackageUsage","undefined","noLogout","rawOptions","buildDir","bundlePath","settings","messages","capture","title","rootPath","cwd","settingsFile","hasMessages","bundler","bundleResult","bundle","projectContext","outputPath","buildOptions","errors","formatMessages","what","enterJob","preflightPassword","timeout","deployedAt","dns","resolve","err","cnames","addresses","checkAuthThenSendRpc","loginResult","doUsernamePasswordLogin","retry","leadingNewline","forEach","rawInfo","action","verbs","add","remove","transfer","sites","sort","addScheme","hostOrURL","galaxyDiscoveryCache","Map","env","DEPLOY_HOSTNAME","Promise","trim","defaultURL","has","get","p","discoverGalaxy","catch","set","scheme","discoveryURL","json","strictSSL","followRedirect","galaxyDiscoveryVersion","deployURL"],"mappings":"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","file":"tools/meteor-services/deploy.js.map","sourcesContent":["// URL parsing and validation\n// RPC to server (endpoint, arguments)\n// see if RPC requires password\n// prompt for password\n// send RPC with or without password as required\n\nimport {\n  pathJoin,\n  createTarGzStream,\n  getSettings,\n  mkdtemp,\n} from '../fs/files.js';\nimport { request } from '../utils/http-helpers.js';\nimport buildmessage from '../utils/buildmessage.js';\nimport {\n  pollForRegistrationCompletion,\n  doInteractivePasswordLogin,\n  loggedInUsername,\n  isLoggedIn,\n  maybePrintRegistrationLink,\n} from './auth.js';\nimport { recordPackages } from './stats.js';\nimport { Console } from '../console/console.js';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nconst CAPABILITIES = ['showDeployMessages', 'canTransferAuthorization'];\n\n// Make a synchronous RPC to the \"classic\" MDG deploy API. The deploy\n// API has the following contract:\n//\n// - Parameters are always sent in the query string.\n// - A tarball can be sent in the body (when deploying an app).\n// - On success, all calls return HTTP 200. Those that return a value\n//   either return a JSON payload or a plaintext payload and the\n//   Content-Type header is set appropriately.\n// - On failure, calls return some non-200 HTTP status code and\n//   provide a human-readable error message in the body.\n// - URLs are of the form \"/[operation]/[site]\".\n// - Body encodings are always utf8.\n// - Meteor Accounts auth is possible using first-party MDG cookies\n//   (rather than OAuth).\n//\n// Options include:\n// - method: GET, POST, or DELETE. default GET\n// - operation: \"info\", \"logs\", \"mongo\", \"deploy\", \"authorized-apps\"\n// - site: site name\n// - expectPayload: an array of key names. if present, then we expect\n//   the server to return JSON content on success and to return an\n//   object with all of these key names.\n// - expectMessage: if true, then we expect the server to return text\n//   content on success.\n// - bodyStream: if provided, a stream to use as the request body\n// - any other parameters accepted by the node 'request' module, for example\n//   'qs' to set query string parameters\n// - printDeployURL: provided if we should show the deploy URL; set this\n//   for the first RPC of any user command\n//\n// Waits until server responds, then returns an object with the\n// following keys:\n//\n// - statusCode: HTTP status code, or null if the server couldn't be\n//   contacted\n// - payload: if successful, and the server returned a JSON body, the\n//   parsed JSON body\n// - message: if successful, and the server returned a text body, the\n//   body as a string\n// - errorMessage: if unsuccessful, a human-readable error message,\n//   derived from either a transport-level exception, the response\n//   body, or a generic 'try again later' message, as appropriate\n\nfunction deployRpc(options) {\n  options = Object.assign({}, options);\n  options.headers = Object.assign({}, options.headers || {});\n  if (options.headers.cookie) {\n    throw new Error(\"sorry, can't combine cookie headers yet\");\n  }\n  options.qs = Object.assign({}, options.qs, {capabilities: CAPABILITIES});\n\n  const deployURLBase = getDeployURL(options.site).await();\n\n  if (options.printDeployURL) {\n    Console.info(\"Talking to Galaxy servers at \" + deployURLBase);\n  }\n\n  // XXX: Reintroduce progress for upload\n  try {\n    var result = request(Object.assign(options, {\n      url: deployURLBase + '/' + options.operation +\n        (options.site ? ('/' + options.site) : ''),\n      method: options.method || 'GET',\n      bodyStream: options.bodyStream,\n      useAuthHeader: true,\n      encoding: 'utf8' // Hack, but good enough for the deploy server..\n    }));\n  } catch (e) {\n    return {\n      statusCode: null,\n      errorMessage: \"Connection error (\" + e.message + \")\"\n    };\n  }\n\n  var response = result.response;\n  var body = result.body;\n  var ret = { statusCode: response.statusCode };\n\n  if (response.statusCode !== 200) {\n    if (body.length > 0) {\n      ret.errorMessage = body;\n    } else {\n      ret.errorMessage = \"Server error \" + response.statusCode +\n        \" (please try again later)\";\n    }\n    return ret;\n  }\n\n  var contentType = response.headers[\"content-type\"] || '';\n  if (contentType === \"application/json; charset=utf-8\") {\n    try {\n      ret.payload = JSON.parse(body);\n    } catch (e) {\n      ret.errorMessage =\n        \"Server error (please try again later)\\n\"\n        + \"Invalid JSON: \" + body;\n      return ret;\n    }\n  } else if (contentType === \"text/plain; charset=utf-8\") {\n    ret.message = body;\n  }\n\n  const hasAllExpectedKeys =\n    (options.expectPayload || [])\n      .map(key => ret.payload && hasOwn.call(ret.payload, key))\n      .every(x => x);\n\n  if ((options.expectPayload && ! hasOwn.call(ret, 'payload')) ||\n      (options.expectMessage && ! hasOwn.call(ret, 'message')) ||\n      ! hasAllExpectedKeys) {\n    delete ret.payload;\n    delete ret.message;\n\n    ret.errorMessage = \"Server error (please try again later)\\n\" +\n      \"Response missing expected keys.\";\n  }\n\n  return ret;\n};\n\n// Just like deployRpc, but also presents authentication. It will\n// prompt the user for a password, or use a Meteor Accounts\n// credential, as necessary.\n//\n// Additional options (beyond deployRpc):\n//\n// - preflight: if true, do everything but the actual RPC. The only\n//   other necessary option is 'site'. On failure, returns an object\n//   with errorMessage (just like deployRpc). On success, returns an\n//   object without an errorMessage key and with possible keys\n//   'protection' (value either 'password' or 'account') and\n//   'authorized' (true if the current user is an authorized user on\n//   this app).\n// - promptIfAuthFails: if true, then we think we are logged in with the\n//   accounts server but our authentication actually fails, then prompt\n//   the user to log in with a username and password and then resend the\n//   RPC.\nfunction authedRpc(options) {\n  var rpcOptions = Object.assign({}, options);\n  var preflight = rpcOptions.preflight;\n  delete rpcOptions.preflight;\n\n  // Fetch auth info\n  var infoResult = deployRpc({\n    operation: 'info',\n    site: rpcOptions.site,\n    expectPayload: [],\n    qs: options.qs,\n    printDeployURL: options.printDeployURL\n  });\n  delete rpcOptions.printDeployURL;\n\n  if (infoResult.statusCode === 401 && rpcOptions.promptIfAuthFails) {\n    Console.error(\"Authentication failed or login token expired.\");\n\n    if (!Console.isInteractive()) {\n      return {\n        statusCode: 401,\n        errorMessage: \"login failed.\"\n      };\n    }\n\n    // Our authentication didn't validate, so prompt the user to log in\n    // again, and resend the RPC if the login succeeds.\n    var username = Console.readLine({\n      prompt: \"Username: \",\n      stream: process.stderr\n    });\n    var loginOptions = {\n      username: username,\n      suppressErrorMessage: true\n    };\n    if (doInteractivePasswordLogin(loginOptions)) {\n      return authedRpc(options);\n    } else {\n      return {\n        statusCode: 403,\n        errorMessage: \"login failed.\"\n      };\n    }\n  }\n\n  if (infoResult.statusCode === 404) {\n    // Doesn't exist, therefore not protected.\n    return preflight ? { } : deployRpc(rpcOptions);\n  }\n\n  if (infoResult.errorMessage) {\n    return infoResult;\n  }\n  var info = infoResult.payload;\n\n  if (! hasOwn.call(info, 'protection')) {\n    // Not protected.\n    //\n    // XXX should prompt the user to claim the app (only if deploying?)\n    return preflight ? { } : deployRpc(rpcOptions);\n  }\n\n  if (info.protection === \"account\") {\n    if (! hasOwn.call(info, 'authorized')) {\n      // Absence of this implies that we are not an authorized user on\n      // this app\n      if (preflight) {\n        return { protection: info.protection };\n      } else {\n        return {\n          statusCode: null,\n          errorMessage: isLoggedIn() ?\n            // XXX better error message (probably need to break out of\n            // the 'errorMessage printed with brief prefix' pattern)\n            \"Not an authorized user on this site\" :\n            \"Not logged in\"\n        };\n      }\n    }\n\n    // Sweet, we're an authorized user.\n    if (preflight) {\n      return {\n        protection: info.protection,\n        authorized: info.authorized\n      };\n    } else {\n      return deployRpc(rpcOptions);\n    }\n  }\n\n  return {\n    statusCode: null,\n    errorMessage: \"You need a newer version of Meteor to work with this site\"\n  };\n};\n\n// When the user is trying to do something with an app that they are not\n// authorized for, instruct them to get added via 'meteor authorized\n// --add' or switch accounts.\nfunction printUnauthorizedMessage() {\n  var username = loggedInUsername();\n  Console.error(\"Sorry, that site belongs to a different user.\");\n  if (username) {\n    Console.error(\"You are currently logged in as \" + username + \".\");\n  }\n  Console.error();\n  Console.error(\n    \"Either have the site owner use \" +\n    Console.command(\"'meteor authorized --add'\") + \" to add you as an \" +\n    \"authorized developer for the site, or switch to an authorized account \" +\n    \"with \" + Console.command(\"'meteor login'\") + \".\");\n};\n\n// Take a proposed sitename for deploying to. If it looks\n// syntactically good, canonicalize it (this essentially means\n// stripping 'http://' or a trailing '/' if present) and return it. If\n// not, print an error message to stderr and return null.\nfunction canonicalizeSite(site) {\n  // There are actually two different bugs here. One is that the meteor deploy\n  // server does not support apps whose total site length is greater than 63\n  // (because of how it generates Mongo database names); that can be fixed on\n  // the server. After that, this check will be too strong, but we still will\n  // want to check that each *component* of the hostname is at most 63\n  // characters (url.parse will do something very strange if a component is\n  // larger than 63, which is the maximum legal length).\n  if (site.length > 63) {\n    Console.error(\n      \"The maximum hostname length currently supported is 63 characters: \" +\n      site + \" is too long. \" +\n      \"Please try again with a shorter URL for your site.\");\n    return false;\n  }\n\n  var url = site;\n  if (!url.match(':\\/\\/')) {\n    url = 'http://' + url;\n  }\n\n  var parsed = require('url').parse(url);\n\n  if (! parsed.hostname) {\n    Console.info(\n      \"Please specify a domain to connect to, such as www.example.com or \" +\n      \"http://www.example.com/\");\n    return false;\n  }\n\n  if (parsed.pathname != '/' || parsed.hash || parsed.query) {\n    Console.info(\n      \"Sorry, Meteor does not yet support specific path URLs, such as \" +\n      Console.url(\"http://www.example.com/blog\") + \" .  Please specify the root of a domain.\");\n    return false;\n  }\n\n  return parsed.hostname;\n};\n\n// Run the bundler and deploy the result. Print progress\n// messages. Return a command exit code.\n//\n// Options:\n// - projectContext: the ProjectContext for the app\n// - site: site to deploy as\n// - settingsFile: file from which to read deploy settings (undefined\n//   to leave unchanged from previous deploy of the app, if any)\n// - recordPackageUsage: (defaults to true) if set to false, don't\n//   send information about packages used by this app to the package\n//   stats server.\n// - buildOptions: the 'buildOptions' argument to the bundler\n// - rawOptions: any unknown options that were passed to the command line tool\nexport function bundleAndDeploy(options) {\n  if (options.recordPackageUsage === undefined) {\n    options.recordPackageUsage = true;\n  }\n\n  var site = canonicalizeSite(options.site);\n  if (! site) {\n    return 1;\n  }\n\n  // We should give a username/password prompt if the user was logged in\n  // but the credentials are expired, unless the user is logged in but\n  // doesn't have a username (in which case they should hit the email\n  // prompt -- a user without a username shouldn't be given a username\n  // prompt). There's an edge case where things happen in the following\n  // order: user creates account, user sets username, credential expires\n  // or is revoked, user comes back to deploy again. In that case,\n  // they'll get an email prompt instead of a username prompt because\n  // the command-line tool didn't have time to learn about their\n  // username before the credential was expired.\n  pollForRegistrationCompletion({\n    noLogout: true\n  });\n  var promptIfAuthFails = (loggedInUsername() !== null);\n\n  // Check auth up front, rather than after the (potentially lengthy)\n  // bundling process.\n  var preflight = authedRpc({\n    site: site,\n    preflight: true,\n    promptIfAuthFails: promptIfAuthFails,\n    qs: options.rawOptions,\n    printDeployURL: true\n  });\n\n  if (preflight.errorMessage) {\n    Console.error(\"Error deploying application: \" + preflight.errorMessage);\n    return 1;\n  }\n\n  if (preflight.protection === \"account\" &&\n             ! preflight.authorized) {\n    printUnauthorizedMessage();\n    return 1;\n  }\n\n  var buildDir = mkdtemp('build_tar');\n  var bundlePath = pathJoin(buildDir, 'bundle');\n\n  Console.info('Deploying your app...');\n\n  var settings = null;\n  var messages = buildmessage.capture({\n    title: \"preparing to deploy\",\n    rootPath: process.cwd()\n  }, function () {\n    if (options.settingsFile) {\n      settings = getSettings(options.settingsFile);\n    }\n  });\n\n  if (! messages.hasMessages()) {\n    var bundler = require('../isobuild/bundler.js');\n\n    var bundleResult = bundler.bundle({\n      projectContext: options.projectContext,\n      outputPath: bundlePath,\n      buildOptions: options.buildOptions,\n    });\n\n    if (bundleResult.errors) {\n      messages = bundleResult.errors;\n    }\n  }\n\n  if (messages.hasMessages()) {\n    Console.info(\"\\nErrors prevented deploying:\");\n    Console.info(messages.formatMessages());\n    return 1;\n  }\n\n  if (options.recordPackageUsage) {\n    recordPackages({\n      what: \"sdk.deploy\",\n      projectContext: options.projectContext,\n      site: site\n    });\n  }\n\n  var result = buildmessage.enterJob({ title: \"uploading\" }, function () {\n    return authedRpc({\n      method: 'POST',\n      operation: 'deploy',\n      site: site,\n      qs: Object.assign({}, options.rawOptions, settings !== null ? {settings: settings} : {}),\n      bodyStream: createTarGzStream(pathJoin(buildDir, 'bundle')),\n      expectPayload: ['url'],\n      preflightPassword: preflight.preflightPassword,\n      // Disable the HTTP timeout for this POST request.\n      timeout: null,\n    });\n  });\n\n  if (result.errorMessage) {\n    Console.error(\"\\nError deploying application: \" + result.errorMessage);\n    return 1;\n  }\n\n  if (result.payload.message) {\n    Console.info(result.payload.message);\n  } else {\n    var deployedAt = require('url').parse(result.payload.url);\n    var hostname = deployedAt.hostname;\n\n    Console.info('Now serving at http://' + hostname);\n\n    if (! hostname.match(/meteor\\.com$/)) {\n      var dns = require('dns');\n      dns.resolve(hostname, 'CNAME', function (err, cnames) {\n        if (err || cnames[0] !== 'origin.meteor.com') {\n          dns.resolve(hostname, 'A', function (err, addresses) {\n            if (err || addresses[0] !== '107.22.210.133') {\n              Console.info('-------------');\n              Console.info(\n                \"You've deployed to a custom domain.\",\n                \"Please be sure to CNAME your hostname\",\n                \"to origin.meteor.com, or set an A record to 107.22.210.133.\");\n              Console.info('-------------');\n            }\n          });\n        }\n      });\n    }\n  }\n\n  return 0;\n};\n\nexport function deleteApp(site) {\n  site = canonicalizeSite(site);\n  if (! site) {\n    return 1;\n  }\n\n  var result = authedRpc({\n    method: 'DELETE',\n    operation: 'deploy',\n    site: site,\n    promptIfAuthFails: true,\n    printDeployURL: true\n  });\n\n  if (result.errorMessage) {\n    Console.error(\"Couldn't delete application: \" + result.errorMessage);\n    return 1;\n  }\n\n  Console.info(\"Deleted.\");\n  return 0;\n};\n\n// Helper that does a preflight request to check auth, and prints the\n// appropriate error message if auth fails or if this is a legacy\n// password-protected app. If auth succeeds, then it runs the actual\n// RPC. 'site' and 'operation' are the site and operation for the\n// RPC. 'what' is a string describing the operation, for use in error\n// messages.  Returns the result of the RPC if successful, or null\n// otherwise (including if auth failed or if the user is not authorized\n// for this site).\nfunction checkAuthThenSendRpc(site, operation, what) {\n  var preflight = authedRpc({\n    operation: operation,\n    site: site,\n    preflight: true,\n    promptIfAuthFails: true,\n    printDeployURL: true\n  });\n\n  if (preflight.errorMessage) {\n    Console.error(\"Couldn't \" + what + \": \" + preflight.errorMessage);\n    return null;\n  }\n\n  if (preflight.protection === \"account\" &&\n             ! preflight.authorized) {\n    if (! isLoggedIn()) {\n      // Maybe the user is authorized for this app but not logged in\n      // yet, so give them a login prompt.\n      var loginResult = doUsernamePasswordLogin({ retry: true });\n      if (loginResult) {\n        // Once we've logged in, retry the whole operation. We need to\n        // do the preflight request again instead of immediately moving\n        // on to the real RPC because we don't yet know if the newly\n        // logged-in user is authorized for this app, and if they\n        // aren't, then we want to print the nice unauthorized error\n        // message.\n        return checkAuthThenSendRpc(site, operation, what);\n      } else {\n        // Shouldn't ever get here because we set the retry flag on the\n        // login, but just in case.\n        Console.error(\n          \"\\nYou must be logged in to \" + what + \" for this app. Use \" +\n           Console.command(\"'meteor login'\") + \"to log in.\");\n        Console.error();\n        Console.error(\n          \"If you don't have a Meteor developer account yet, you can quickly \" +\n          \"create one at www.meteor.com.\");\n        return null;\n      }\n    } else { // User is logged in but not authorized for this app\n      Console.error();\n      printUnauthorizedMessage();\n      return null;\n    }\n  }\n\n  // User is authorized for the app; go ahead and do the actual RPC.\n\n  var result = authedRpc({\n    operation: operation,\n    site: site,\n    expectMessage: true,\n    promptIfAuthFails: true\n  });\n\n  if (result.errorMessage) {\n    Console.error(\"Couldn't \" + what + \": \" + result.errorMessage);\n    return null;\n  }\n\n  return result;\n};\n\n// On failure, prints a message to stderr and returns null. Otherwise,\n// returns a temporary authenticated Mongo URL allowing access to this\n// site's database.\nexport function temporaryMongoUrl(site) {\n  site = canonicalizeSite(site);\n  if (! site) {\n    // canonicalizeSite printed an error\n    return null;\n  }\n\n  var result = checkAuthThenSendRpc(site, 'mongo', 'open a mongo connection');\n\n  if (result !== null) {\n    return result.message;\n  } else {\n    return null;\n  }\n};\n\nexport function logs(site) {\n  site = canonicalizeSite(site);\n  if (! site) {\n    return 1;\n  }\n\n  var result = checkAuthThenSendRpc(site, 'logs', 'view logs');\n\n  if (result === null) {\n    return 1;\n  } else {\n    Console.info(result.message);\n    maybePrintRegistrationLink({ leadingNewline: true });\n    return 0;\n  }\n};\n\nexport function listAuthorized(site) {\n  site = canonicalizeSite(site);\n  if (! site) {\n    return 1;\n  }\n\n  var result = deployRpc({\n    operation: 'info',\n    site: site,\n    expectPayload: [],\n    printDeployURL: true\n  });\n  if (result.errorMessage) {\n    Console.error(\"Couldn't get authorized users list: \" + result.errorMessage);\n    return 1;\n  }\n  var info = result.payload;\n\n  if (! hasOwn.call(info, 'protection')) {\n    Console.info(\"<anyone>\");\n    return 0;\n  }\n\n  if (info.protection === \"account\") {\n    if (! hasOwn.call(info, 'authorized')) {\n      Console.error(\"Couldn't get authorized users list: \" +\n                    \"You are not authorized\");\n      return 1;\n    }\n\n    Console.info((loggedInUsername() || \"<you>\"));\n    info.authorized.forEach(username => {\n      if (username) {\n        // Current username rules don't let you register anything that we might\n        // want to split over multiple lines (ex: containing a space), but we\n        // don't want confusion if we ever change some implementation detail.\n        Console.rawInfo(username + \"\\n\");\n      }\n    });\n    return 0;\n  }\n};\n\n// action is \"add\", \"transfer\" or \"remove\"\nexport function changeAuthorized(site, action, username) {\n  site = canonicalizeSite(site);\n  if (! site) {\n    // canonicalizeSite will have already printed an error\n    return 1;\n  }\n\n  var result = authedRpc({\n    method: 'POST',\n    operation: 'authorized',\n    site: site,\n    qs: {[action]: username},\n    promptIfAuthFails: true,\n    printDeployURL: true\n  });\n\n  if (result.errorMessage) {\n    Console.error(\"Couldn't change authorized users: \" + result.errorMessage);\n    return 1;\n  }\n\n  const verbs = {\n    add: \"added\",\n    remove: \"removed\",\n    transfer: \"transferred\"\n  };\n  Console.info(`${site}: ${verbs[action]} ${username}`);\n  return 0;\n};\n\nexport function listSites() {\n  var result = deployRpc({\n    method: \"GET\",\n    operation: \"authorized-apps\",\n    promptIfAuthFails: true,\n    expectPayload: [\"sites\"]\n  });\n\n  if (result.errorMessage) {\n    Console.error(\"Couldn't list sites: \" + result.errorMessage);\n    return 1;\n  }\n\n  if (! result.payload ||\n      ! result.payload.sites ||\n      ! result.payload.sites.length) {\n    Console.info(\"You don't have any sites yet.\");\n  } else {\n    result.payload.sites\n      .sort()\n      .forEach(site => Console.info(site));\n  }\n  return 0;\n};\n\n// Given a hostname, add \"http://\" or \"https://\" as\n// appropriate. (localhost gets http; anything else is always https.)\nfunction addScheme(hostOrURL) {\n  if (hostOrURL.match(/^http/)) {\n    return hostOrURL;\n  } else if (hostOrURL.match(/^localhost(:\\d+)?$/)) {\n    return \"http://\" + hostOrURL;\n  } else {\n    return \"https://\" + hostOrURL;\n  }\n};\n\n// Maps from \"site\" to Promise<deploy URL>, so we don't have to re-ping on each\n// RPC (even if the calls to getDeployURL overlap).\nconst galaxyDiscoveryCache = new Map;\n\n// getDeployURL returns the a Promise for the base deploy URL for the given app.\n// \"app\" may be falsey for certain RPCs (eg meteor list-sites).\nfunction getDeployURL(site) {\n  // Always trust explicitly configuration via env.\n  if (process.env.DEPLOY_HOSTNAME) {\n    return Promise.resolve(addScheme(process.env.DEPLOY_HOSTNAME.trim()));\n  }\n\n  const defaultURL = \"https://us-east-1.galaxy-deploy.meteor.com\";\n\n  // No site? Just use the default.\n  if (!site) {\n    return Promise.resolve(defaultURL);\n  }\n\n  // If we have a site, we can try to do Galaxy discovery.\n\n  // Do we already have an answer?\n  if (galaxyDiscoveryCache.has(site)) {\n    return galaxyDiscoveryCache.get(site);\n  }\n\n  // Otherwise, try https first, then http, then just use the default.\n  const p = discoverGalaxy(site, \"https\")\n          .catch(() => discoverGalaxy(site, \"http\"))\n          .catch(() => defaultURL);\n  galaxyDiscoveryCache.set(site, p);\n  return p;\n}\n\n// discoverGalaxy returns the URL to use for Galaxy discovery, or an error if it\n// couldn't be fetched.\nasync function discoverGalaxy(site, scheme) {\n  const discoveryURL =\n          scheme + \"://\" + site + \"/.well-known/meteor/deploy-url\";\n  // If httpHelpers.request throws, the returned Promise will reject, which is\n  // fine.\n  const { response, body } = request({\n    url: discoveryURL,\n    json: true,\n    strictSSL: true,\n    // We don't want to be confused by, eg, a non-Galaxy-hosted site which\n    // redirects to a Galaxy-hosted site.\n    followRedirect: false\n  });\n  if (response.statusCode !== 200) {\n    throw new Error(\"bad status code: \" + response.statusCode);\n  }\n  if (!body) {\n    throw new Error(\"response had no body\");\n  }\n  if (body.galaxyDiscoveryVersion !== \"galaxy-1\") {\n    throw new Error(\n      \"unexpected galaxyDiscoveryVersion: \" + body.galaxyDiscoveryVersion);\n  }\n  if (! hasOwn.call(body, \"deployURL\")) {\n    throw new Error(\"no deployURL\");\n  }\n  return body.deployURL;\n}\n"]}