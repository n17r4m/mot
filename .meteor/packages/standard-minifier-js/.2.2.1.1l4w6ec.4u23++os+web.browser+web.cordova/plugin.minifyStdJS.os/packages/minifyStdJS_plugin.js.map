{"version":3,"sources":["meteor://ðŸ’»app/packages/minifyStdJS/plugin/minify-js.js","meteor://ðŸ’»app/packages/minifyStdJS/plugin/stats.js","meteor://ðŸ’»app/packages/minifyStdJS/plugin/visitor.js","meteor://ðŸ’»app/packages/minifyStdJS/plugin/utils.js"],"names":["extractModuleSizesTree","module","watch","require","v","Plugin","registerMinifier","extensions","archMatching","minifier","MeteorBabelMinifier","prototype","processFilesForBundle","files","options","mode","minifyMode","forEach","file","addJavaScript","data","getContentsAsBuffer","sourceMap","getSourceMap","path","getPathInBundle","maybeThrowMinifyErrorBySourceFile","error","minifierErrorRegex","parseError","exec","message","lineErrorMessage","lineErrorLineNumber","parseErrorContentIndex","contents","getContentsAsString","split","lineContent","lineSrcLineParts","lineSrcLineContent","lineSrcLineNumber","c","sourceLine","test","parseErrorPath","substring","replace","minError","Error","toBeAdded","stats","Object","create","minified","meteorJsMinify","code","err","filePath","tree","Buffer","byteLength","nudge","length","export","Visitor","default","meteorInstallRegExp","RegExp","map","exp","source","join","match","ast","Babel","parse","name","meteorInstallVisitor","visit","reset","root","meteorInstallName","visitCallExpression","node","isIdWithName","callee","walk","expr","type","slice","start","end","properties","prop","keyName","getKeyName","key","value","arguments","visitChildren","isObject","isNodeLike","codeOfUnderscore","charCodeAt","apply","visitWithoutReset","Array","isArray","method","call","keys","keyCount","i","child","codeOfA","codeOfZ","isCapitalized","string"],"mappings":"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","file":"/packages/minifyStdJS_plugin.js","sourcesContent":["import { extractModuleSizesTree } from \"./stats.js\";\n\nPlugin.registerMinifier({\n  extensions: ['js'],\n  archMatching: 'web'\n}, function () {\n  var minifier = new MeteorBabelMinifier();\n  return minifier;\n});\n\nfunction MeteorBabelMinifier () {};\n\nMeteorBabelMinifier.prototype.processFilesForBundle = function(files, options) {\n  var mode = options.minifyMode;\n\n  // don't minify anything for development\n  if (mode === 'development') {\n    files.forEach(function (file) {\n      file.addJavaScript({\n        data: file.getContentsAsBuffer(),\n        sourceMap: file.getSourceMap(),\n        path: file.getPathInBundle(),\n      });\n    });\n    return;\n  }\n\n  function maybeThrowMinifyErrorBySourceFile(error, file) {\n    var minifierErrorRegex = /^(.*?)\\s?\\((\\d+):(\\d+)\\)$/;\n    var parseError = minifierErrorRegex.exec(error.message);\n\n    if (!parseError) {\n      // If we were unable to parse it, just let the usual error handling work.\n      return;\n    }\n\n    var lineErrorMessage = parseError[1];\n    var lineErrorLineNumber = parseError[2];\n\n    var parseErrorContentIndex = lineErrorLineNumber - 1;\n\n    // Unlikely, since we have a multi-line fixed header in this file.\n    if (parseErrorContentIndex < 0) {\n      return;\n    }\n\n    /*\n\n    What we're parsing looks like this:\n\n    /////////////////////////////////////////\n    //                                     //\n    // path/to/file.js                     //\n    //                                     //\n    /////////////////////////////////////////\n                                           // 1\n       var illegalECMAScript = true;       // 2\n                                           // 3\n    /////////////////////////////////////////\n\n    Btw, the above code is intentionally not newer ECMAScript so\n    we don't break ourselves.\n\n    */\n\n    var contents = file.getContentsAsString().split(/\\n/);\n    var lineContent = contents[parseErrorContentIndex];\n\n    // Try to grab the line number, which sometimes doesn't exist on\n    // line, abnormally-long lines in a larger block.\n    var lineSrcLineParts = /^(.*?)(?:\\s*\\/\\/ (\\d+))?$/.exec(lineContent);\n\n    // The line didn't match at all?  Let's just not try.\n    if (!lineSrcLineParts) {\n      return;\n    }\n\n    var lineSrcLineContent = lineSrcLineParts[1];\n    var lineSrcLineNumber = lineSrcLineParts[2];\n\n    // Count backward from the failed line to find the filename.\n    for (var c = parseErrorContentIndex - 1; c >= 0; c--) {\n      var sourceLine = contents[c];\n\n      // If the line is a boatload of slashes, we're in the right place.\n      if (/^\\/\\/\\/{6,}$/.test(sourceLine)) {\n\n        // If 4 lines back is the same exact line, we've found the framing.\n        if (contents[c - 4] === sourceLine) {\n\n          // So in that case, 2 lines back is the file path.\n          var parseErrorPath = contents[c - 2]\n            .substring(3)\n            .replace(/\\s+\\/\\//, \"\");\n\n          var minError = new Error(\n            \"Babili minification error \" +\n            \"within \" + file.getPathInBundle() + \":\\n\" +\n            parseErrorPath +\n            (lineSrcLineNumber ? \", line \" + lineSrcLineNumber : \"\") + \"\\n\" +\n            \"\\n\" +\n            lineErrorMessage + \":\\n\" +\n            \"\\n\" +\n            lineSrcLineContent + \"\\n\"\n          );\n\n          throw minError;\n        }\n      }\n    }\n  }\n\n  const toBeAdded = {\n    data: \"\",\n    stats: Object.create(null)\n  };\n\n  files.forEach(file => {\n    // Don't reminify *.min.js.\n    if (/\\.min\\.js$/.test(file.getPathInBundle())) {\n      toBeAdded.data += file.getContentsAsString();\n    } else {\n      var minified;\n\n      try {\n        minified = meteorJsMinify(file.getContentsAsString());\n\n        if (!(minified && typeof minified.code === \"string\")) {\n          throw new Error();\n        }\n\n      } catch (err) {\n        var filePath = file.getPathInBundle();\n\n        maybeThrowMinifyErrorBySourceFile(err, file);\n\n        err.message += \" while minifying \" + filePath;\n        throw err;\n      }\n\n      const tree = extractModuleSizesTree(minified.code);\n      if (tree) {\n        toBeAdded.stats[file.getPathInBundle()] =\n          [Buffer.byteLength(minified.code), tree];\n      } else {\n        toBeAdded.stats[file.getPathInBundle()] =\n          Buffer.byteLength(minified.code);\n      }\n\n      toBeAdded.data += minified.code;\n    }\n\n    toBeAdded.data += '\\n\\n';\n\n    Plugin.nudge();\n  });\n\n  if (files.length) {\n    files[0].addJavaScript(toBeAdded);\n  }\n};\n","import Visitor from \"./visitor.js\";\n\n// This RegExp will be used to scan the source for calls to meteorInstall,\n// taking into consideration that the function name may have been mangled\n// to something other than \"meteorInstall\" by the minifier.\nconst meteorInstallRegExp = new RegExp([\n  // If meteorInstall is called by its unminified name, then that's what\n  // we should be looking for in the AST.\n  /\\b(meteorInstall)\\(\\{/,\n  // If the meteorInstall function name has been minified, we can figure\n  // out its mangled name by examining the import assingment.\n  /\\b(\\w+)=Package.modules.meteorInstall\\b/,\n  /\\b(\\w+)=Package\\[\"modules-runtime\"\\].meteorInstall\\b/,\n].map(exp => exp.source).join(\"|\"));\n\nexport function extractModuleSizesTree(source) {\n  const match = meteorInstallRegExp.exec(source);\n  if (match) {\n    const ast = Babel.parse(source);\n    const name = match[1] || match[2] || match[3];\n    meteorInstallVisitor.visit(ast, name, source);\n    return meteorInstallVisitor.tree;\n  }\n}\n\nconst meteorInstallVisitor = new (class extends Visitor {\n  reset(root, meteorInstallName, source) {\n    this.name = meteorInstallName;\n    this.source = source;\n    this.tree = null;\n  }\n\n  visitCallExpression(node) {\n    if (this.tree !== null) {\n      return;\n    }\n\n    if (isIdWithName(node.callee, this.name)) {\n      const source = this.source;\n\n      function walk(expr) {\n        if (expr.type !== \"ObjectExpression\") {\n          return Buffer.byteLength(source.slice(expr.start, expr.end));\n        }\n\n        const contents = Object.create(null);\n\n        expr.properties.forEach(prop => {\n          const keyName = getKeyName(prop.key);\n          if (typeof keyName === \"string\") {\n            contents[keyName] = walk(prop.value);\n          }\n        });\n\n        return contents;\n      }\n\n      this.tree = walk(node.arguments[0]);\n\n    } else {\n      this.visitChildren(node);\n    }\n  }\n});\n\nfunction isIdWithName(node, name) {\n  return node &&\n    node.type === \"Identifier\" &&\n    node.name === name;\n}\n\nfunction getKeyName(key) {\n  if (key.type === \"Identifier\") {\n    return key.name;\n  }\n\n  if (key.type === \"StringLiteral\" ||\n      key.type === \"Literal\") {\n    return key.value;\n  }\n\n  return null;\n}","\"use strict\";\n\nimport {\n  isObject,\n  isNodeLike,\n} from \"./utils.js\";\n\nconst codeOfUnderscore = \"_\".charCodeAt(0);\n\nexport default class Visitor {\n  visit(root) {\n    this.reset.apply(this, arguments);\n    this.visitWithoutReset(root);\n  }\n\n  visitWithoutReset(node) {\n    if (Array.isArray(node)) {\n      node.forEach(this.visitWithoutReset, this);\n    } else if (isNodeLike(node)) {\n      const method = this[\"visit\" + node.type];\n      if (typeof method === \"function\") {\n        // The method must call this.visitChildren(node) to continue\n        // traversing.\n        method.call(this, node);\n      } else {\n        this.visitChildren(node);\n      }\n    }\n  }\n\n  visitChildren(node) {\n    if (! isNodeLike(node)) {\n      return;\n    }\n\n    const keys = Object.keys(node);\n    const keyCount = keys.length;\n\n    for (let i = 0; i < keyCount; ++i) {\n      const key = keys[i];\n\n      if (key === \"loc\" || // Ignore .loc.{start,end} objects.\n          // Ignore \"private\" properties added by Babel.\n          key.charCodeAt(0) === codeOfUnderscore) {\n        continue;\n      }\n\n      const child = node[key];\n      if (! isObject(child)) {\n        // Ignore properties whose values aren't objects.\n        continue;\n      }\n\n      this.visitWithoutReset(child);\n    }\n  }\n}\n","\"use strict\";\n\nconst codeOfA = \"A\".charCodeAt(0);\nconst codeOfZ = \"Z\".charCodeAt(0);\n\nexport function isObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n\n// Without a complete list of Node .type names, we have to settle for this\n// fuzzy matching of object shapes. However, the infeasibility of\n// maintaining a complete list of type names is one of the reasons we're\n// using the FastPath/Visitor abstraction in the first place.\nexport function isNodeLike(value) {\n  return isObject(value) &&\n    ! Array.isArray(value) &&\n    isCapitalized(value.type);\n}\n\nfunction isCapitalized(string) {\n  if (typeof string !== \"string\") {\n    return false;\n  }\n  const code = string.charCodeAt(0);\n  return code >= codeOfA && code <= codeOfZ;\n}\n"]}