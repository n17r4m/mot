(function () {

/* Imports */
var ECMAScript = Package.ecmascript.ECMAScript;
var EJSON = Package.ejson.EJSON;
var semanticUiDataPackage = Package['semantic:ui-data'].semanticUiDataPackage;
var meteorInstall = Package.modules.meteorInstall;
var Buffer = Package.modules.Buffer;
var process = Package.modules.process;
var Symbol = Package['ecmascript-runtime'].Symbol;
var Map = Package['ecmascript-runtime'].Map;
var Set = Package['ecmascript-runtime'].Set;
var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
var Promise = Package.promise.Promise;

/* Package-scope variables */
var semanticUiPackage, fileHandler, filesToDelete, definitionsGenerator, themesGenerator, sitesGenerator, customJsonGenerator;

var require = meteorInstall({"node_modules":{"meteor":{"generateSemanticUi":{"semantic-ui.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/semantic-ui.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
// one global variable (namespace)                                                                                     //
semanticUiPackage = {};                                                                                                // 2
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"data":{"definitions-data.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/data/definitions-data.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     //
  DO NOT MODIFY - This file has been generated by https://github.com/flemay/Semantic-UI-Meteorize                      //
*/                                                                                                                     //
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 5
                                                                                                                       //
var definitionsData = {};                                                                                              // 7
                                                                                                                       //
definitionsData.data = [{ "name": "api", "js": "lib/semantic-ui/src/definitions/behaviors/api.js" }, { "name": "colorize", "js": "lib/semantic-ui/src/definitions/behaviors/colorize.js" }, { "name": "form", "js": "lib/semantic-ui/src/definitions/behaviors/form.js", "less": "lib/semantic-ui/src/definitions/collections/form.import.less" }, { "name": "state", "js": "lib/semantic-ui/src/definitions/behaviors/state.js" }, { "name": "visibility", "js": "lib/semantic-ui/src/definitions/behaviors/visibility.js" }, { "name": "visit", "js": "lib/semantic-ui/src/definitions/behaviors/visit.js" }, { "name": "breadcrumb", "less": "lib/semantic-ui/src/definitions/collections/breadcrumb.import.less" }, { "name": "grid", "less": "lib/semantic-ui/src/definitions/collections/grid.import.less" }, { "name": "menu", "less": "lib/semantic-ui/src/definitions/collections/menu.import.less" }, { "name": "message", "less": "lib/semantic-ui/src/definitions/collections/message.import.less" }, { "name": "table", "less": "lib/semantic-ui/src/definitions/collections/table.import.less" }, { "name": "button", "less": "lib/semantic-ui/src/definitions/elements/button.import.less" }, { "name": "container", "less": "lib/semantic-ui/src/definitions/elements/container.import.less" }, { "name": "divider", "less": "lib/semantic-ui/src/definitions/elements/divider.import.less" }, { "name": "flag", "less": "lib/semantic-ui/src/definitions/elements/flag.import.less" }, { "name": "header", "less": "lib/semantic-ui/src/definitions/elements/header.import.less" }, { "name": "icon", "less": "lib/semantic-ui/src/definitions/elements/icon.import.less" }, { "name": "image", "less": "lib/semantic-ui/src/definitions/elements/image.import.less" }, { "name": "input", "less": "lib/semantic-ui/src/definitions/elements/input.import.less" }, { "name": "label", "less": "lib/semantic-ui/src/definitions/elements/label.import.less" }, { "name": "list", "less": "lib/semantic-ui/src/definitions/elements/list.import.less" }, { "name": "loader", "less": "lib/semantic-ui/src/definitions/elements/loader.import.less" }, { "name": "rail", "less": "lib/semantic-ui/src/definitions/elements/rail.import.less" }, { "name": "reveal", "less": "lib/semantic-ui/src/definitions/elements/reveal.import.less" }, { "name": "segment", "less": "lib/semantic-ui/src/definitions/elements/segment.import.less" }, { "name": "step", "less": "lib/semantic-ui/src/definitions/elements/step.import.less" }, { "name": "reset", "less": "lib/semantic-ui/src/definitions/globals/reset.import.less" }, { "name": "site", "less": "lib/semantic-ui/src/definitions/globals/site.import.less", "js": "lib/semantic-ui/src/definitions/globals/site.js" }, { "name": "ad", "less": "lib/semantic-ui/src/definitions/views/ad.import.less" }, { "name": "card", "less": "lib/semantic-ui/src/definitions/views/card.import.less" }, { "name": "comment", "less": "lib/semantic-ui/src/definitions/views/comment.import.less" }, { "name": "feed", "less": "lib/semantic-ui/src/definitions/views/feed.import.less" }, { "name": "item", "less": "lib/semantic-ui/src/definitions/views/item.import.less" }, { "name": "statistic", "less": "lib/semantic-ui/src/definitions/views/statistic.import.less" }, { "name": "accordion", "less": "lib/semantic-ui/src/definitions/modules/accordion.import.less", "js": "lib/semantic-ui/src/definitions/modules/accordion.js" }, { "name": "checkbox", "less": "lib/semantic-ui/src/definitions/modules/checkbox.import.less", "js": "lib/semantic-ui/src/definitions/modules/checkbox.js" }, { "name": "dimmer", "less": "lib/semantic-ui/src/definitions/modules/dimmer.import.less", "js": "lib/semantic-ui/src/definitions/modules/dimmer.js" }, { "name": "dropdown", "less": "lib/semantic-ui/src/definitions/modules/dropdown.import.less", "js": "lib/semantic-ui/src/definitions/modules/dropdown.js" }, { "name": "embed", "less": "lib/semantic-ui/src/definitions/modules/embed.import.less", "js": "lib/semantic-ui/src/definitions/modules/embed.js" }, { "name": "modal", "less": "lib/semantic-ui/src/definitions/modules/modal.import.less", "js": "lib/semantic-ui/src/definitions/modules/modal.js" }, { "name": "nag", "less": "lib/semantic-ui/src/definitions/modules/nag.import.less", "js": "lib/semantic-ui/src/definitions/modules/nag.js" }, { "name": "popup", "less": "lib/semantic-ui/src/definitions/modules/popup.import.less", "js": "lib/semantic-ui/src/definitions/modules/popup.js" }, { "name": "progress", "less": "lib/semantic-ui/src/definitions/modules/progress.import.less", "js": "lib/semantic-ui/src/definitions/modules/progress.js" }, { "name": "rating", "less": "lib/semantic-ui/src/definitions/modules/rating.import.less", "js": "lib/semantic-ui/src/definitions/modules/rating.js" }, { "name": "search", "less": "lib/semantic-ui/src/definitions/modules/search.import.less", "js": "lib/semantic-ui/src/definitions/modules/search.js" }, { "name": "shape", "less": "lib/semantic-ui/src/definitions/modules/shape.import.less", "js": "lib/semantic-ui/src/definitions/modules/shape.js" }, { "name": "sidebar", "less": "lib/semantic-ui/src/definitions/modules/sidebar.import.less", "js": "lib/semantic-ui/src/definitions/modules/sidebar.js" }, { "name": "sticky", "less": "lib/semantic-ui/src/definitions/modules/sticky.import.less", "js": "lib/semantic-ui/src/definitions/modules/sticky.js" }, { "name": "tab", "less": "lib/semantic-ui/src/definitions/modules/tab.import.less", "js": "lib/semantic-ui/src/definitions/modules/tab.js" }, { "name": "transition", "less": "lib/semantic-ui/src/definitions/modules/transition.import.less", "js": "lib/semantic-ui/src/definitions/modules/transition.js" }];
                                                                                                                       //
definitionsData.exists = function (name) {                                                                             // 113
  var sameName = function sameName(definition) {                                                                       // 114
    return definition.name == name;                                                                                    // 115
  };                                                                                                                   // 116
  return _.isUndefined(_.find(this.data, sameName)) ? false : true;                                                    // 117
};                                                                                                                     // 118
                                                                                                                       //
definitionsData.lessFilePaths = function () {                                                                          // 120
  var definitionsWithLess = _.filter(this.data, function (d) {                                                         // 121
    return d.less;                                                                                                     // 122
  });                                                                                                                  // 123
  return _.map(definitionsWithLess, function (d) {                                                                     // 124
    return d.less;                                                                                                     // 125
  });                                                                                                                  // 126
};                                                                                                                     // 127
                                                                                                                       //
definitionsData.jsFilePaths = function () {                                                                            // 129
  var definitionsWithJs = _.filter(this.data, function (d) {                                                           // 130
    return d.js;                                                                                                       // 131
  });                                                                                                                  // 132
  return _.map(definitionsWithJs, function (d) {                                                                       // 133
    return d.js;                                                                                                       // 134
  });                                                                                                                  // 135
};                                                                                                                     // 136
                                                                                                                       //
definitionsData.semanticLessFile = 'lib/semantic-ui/src/semantic.less';                                                // 138
                                                                                                                       //
semanticUiPackage.definitionsData = definitionsData;                                                                   // 140
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"themes-data.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/data/themes-data.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     //
  DO NOT MODIFY - This file has been generated by https://github.com/flemay/Semantic-UI-Meteorize                      //
*/                                                                                                                     //
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 5
                                                                                                                       //
var themesData = {};                                                                                                   // 7
                                                                                                                       //
themesData.data = [{ "name": "basic", "overrides": ["lib/semantic-ui/src/themes/basic/modules/progress.overrides.import.less", "lib/semantic-ui/src/themes/basic/elements/button.overrides.import.less", "lib/semantic-ui/src/themes/basic/elements/icon.overrides.import.less", "lib/semantic-ui/src/themes/basic/elements/step.overrides.import.less", "lib/semantic-ui/src/themes/basic/collections/table.overrides.import.less", "lib/semantic-ui/src/themes/basic/globals/reset.overrides.import.less", "lib/semantic-ui/src/themes/basic/views/card.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/basic/modules/progress.variables.import.less", "lib/semantic-ui/src/themes/basic/elements/button.variables.import.less", "lib/semantic-ui/src/themes/basic/elements/icon.variables.import.less", "lib/semantic-ui/src/themes/basic/elements/step.variables.import.less", "lib/semantic-ui/src/themes/basic/collections/table.variables.import.less", "lib/semantic-ui/src/themes/basic/globals/reset.variables.import.less", "lib/semantic-ui/src/themes/basic/views/card.variables.import.less"], "assets": ["lib/semantic-ui/src/themes/basic/assets/fonts/icons.eot", "lib/semantic-ui/src/themes/basic/assets/fonts/icons.svg", "lib/semantic-ui/src/themes/basic/assets/fonts/icons.ttf", "lib/semantic-ui/src/themes/basic/assets/fonts/icons.woff"] }, { "name": "amazon", "overrides": ["lib/semantic-ui/src/themes/amazon/elements/button.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/amazon/globals/site.variables.import.less", "lib/semantic-ui/src/themes/amazon/elements/button.variables.import.less"], "assets": [] }, { "name": "bookish", "overrides": ["lib/semantic-ui/src/themes/bookish/elements/header.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/bookish/elements/header.variables.import.less"], "assets": [] }, { "name": "bootstrap3", "overrides": ["lib/semantic-ui/src/themes/bootstrap3/elements/button.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/bootstrap3/elements/button.variables.import.less"], "assets": [] }, { "name": "classic", "overrides": ["lib/semantic-ui/src/themes/classic/modules/progress.overrides.import.less", "lib/semantic-ui/src/themes/classic/elements/button.overrides.import.less", "lib/semantic-ui/src/themes/classic/elements/header.overrides.import.less", "lib/semantic-ui/src/themes/classic/views/card.overrides.import.less", "lib/semantic-ui/src/themes/classic/collections/table.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/classic/modules/progress.variables.import.less", "lib/semantic-ui/src/themes/classic/elements/button.variables.import.less", "lib/semantic-ui/src/themes/classic/elements/header.variables.import.less", "lib/semantic-ui/src/themes/classic/views/card.variables.import.less", "lib/semantic-ui/src/themes/classic/collections/table.variables.import.less"], "assets": [] }, { "name": "chubby", "overrides": ["lib/semantic-ui/src/themes/chubby/modules/accordion.overrides.import.less", "lib/semantic-ui/src/themes/chubby/views/comment.overrides.import.less", "lib/semantic-ui/src/themes/chubby/collections/form.overrides.import.less", "lib/semantic-ui/src/themes/chubby/collections/menu.overrides.import.less", "lib/semantic-ui/src/themes/chubby/elements/button.overrides.import.less", "lib/semantic-ui/src/themes/chubby/elements/header.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/chubby/modules/accordion.variables.import.less", "lib/semantic-ui/src/themes/chubby/views/comment.variables.import.less", "lib/semantic-ui/src/themes/chubby/collections/form.variables.import.less", "lib/semantic-ui/src/themes/chubby/collections/menu.variables.import.less", "lib/semantic-ui/src/themes/chubby/elements/button.variables.import.less", "lib/semantic-ui/src/themes/chubby/elements/header.variables.import.less"], "assets": [] }, { "name": "colored", "overrides": ["lib/semantic-ui/src/themes/colored/modules/checkbox.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/colored/modules/checkbox.variables.import.less"], "assets": [] }, { "name": "default", "overrides": ["lib/semantic-ui/src/themes/default/collections/breadcrumb.overrides.import.less", "lib/semantic-ui/src/themes/default/collections/form.overrides.import.less", "lib/semantic-ui/src/themes/default/collections/grid.overrides.import.less", "lib/semantic-ui/src/themes/default/collections/menu.overrides.import.less", "lib/semantic-ui/src/themes/default/collections/message.overrides.import.less", "lib/semantic-ui/src/themes/default/collections/table.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/button.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/container.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/divider.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/flag.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/header.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/icon.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/image.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/input.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/label.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/list.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/loader.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/rail.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/reveal.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/segment.overrides.import.less", "lib/semantic-ui/src/themes/default/elements/step.overrides.import.less", "lib/semantic-ui/src/themes/default/globals/reset.overrides.import.less", "lib/semantic-ui/src/themes/default/globals/site.overrides.import.less", "lib/semantic-ui/src/themes/default/views/ad.overrides.import.less", "lib/semantic-ui/src/themes/default/views/card.overrides.import.less", "lib/semantic-ui/src/themes/default/views/comment.overrides.import.less", "lib/semantic-ui/src/themes/default/views/feed.overrides.import.less", "lib/semantic-ui/src/themes/default/views/item.overrides.import.less", "lib/semantic-ui/src/themes/default/views/statistic.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/accordion.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/chatroom.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/checkbox.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/dimmer.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/dropdown.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/embed.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/modal.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/nag.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/popup.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/progress.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/rating.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/search.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/shape.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/sidebar.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/sticky.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/tab.overrides.import.less", "lib/semantic-ui/src/themes/default/modules/transition.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/default/collections/breadcrumb.variables.import.less", "lib/semantic-ui/src/themes/default/collections/form.variables.import.less", "lib/semantic-ui/src/themes/default/collections/grid.variables.import.less", "lib/semantic-ui/src/themes/default/collections/menu.variables.import.less", "lib/semantic-ui/src/themes/default/collections/message.variables.import.less", "lib/semantic-ui/src/themes/default/collections/table.variables.import.less", "lib/semantic-ui/src/themes/default/elements/button.variables.import.less", "lib/semantic-ui/src/themes/default/elements/container.variables.import.less", "lib/semantic-ui/src/themes/default/elements/divider.variables.import.less", "lib/semantic-ui/src/themes/default/elements/flag.variables.import.less", "lib/semantic-ui/src/themes/default/elements/header.variables.import.less", "lib/semantic-ui/src/themes/default/elements/icon.variables.import.less", "lib/semantic-ui/src/themes/default/elements/image.variables.import.less", "lib/semantic-ui/src/themes/default/elements/input.variables.import.less", "lib/semantic-ui/src/themes/default/elements/label.variables.import.less", "lib/semantic-ui/src/themes/default/elements/list.variables.import.less", "lib/semantic-ui/src/themes/default/elements/loader.variables.import.less", "lib/semantic-ui/src/themes/default/elements/rail.variables.import.less", "lib/semantic-ui/src/themes/default/elements/reveal.variables.import.less", "lib/semantic-ui/src/themes/default/elements/segment.variables.import.less", "lib/semantic-ui/src/themes/default/elements/step.variables.import.less", "lib/semantic-ui/src/themes/default/globals/reset.variables.import.less", "lib/semantic-ui/src/themes/default/globals/site.variables.import.less", "lib/semantic-ui/src/themes/default/views/ad.variables.import.less", "lib/semantic-ui/src/themes/default/views/card.variables.import.less", "lib/semantic-ui/src/themes/default/views/comment.variables.import.less", "lib/semantic-ui/src/themes/default/views/feed.variables.import.less", "lib/semantic-ui/src/themes/default/views/item.variables.import.less", "lib/semantic-ui/src/themes/default/views/statistic.variables.import.less", "lib/semantic-ui/src/themes/default/modules/accordion.variables.import.less", "lib/semantic-ui/src/themes/default/modules/chatroom.variables.import.less", "lib/semantic-ui/src/themes/default/modules/checkbox.variables.import.less", "lib/semantic-ui/src/themes/default/modules/dimmer.variables.import.less", "lib/semantic-ui/src/themes/default/modules/dropdown.variables.import.less", "lib/semantic-ui/src/themes/default/modules/embed.variables.import.less", "lib/semantic-ui/src/themes/default/modules/modal.variables.import.less", "lib/semantic-ui/src/themes/default/modules/nag.variables.import.less", "lib/semantic-ui/src/themes/default/modules/popup.variables.import.less", "lib/semantic-ui/src/themes/default/modules/progress.variables.import.less", "lib/semantic-ui/src/themes/default/modules/rating.variables.import.less", "lib/semantic-ui/src/themes/default/modules/search.variables.import.less", "lib/semantic-ui/src/themes/default/modules/shape.variables.import.less", "lib/semantic-ui/src/themes/default/modules/sidebar.variables.import.less", "lib/semantic-ui/src/themes/default/modules/sticky.variables.import.less", "lib/semantic-ui/src/themes/default/modules/tab.variables.import.less", "lib/semantic-ui/src/themes/default/modules/transition.variables.import.less"], "assets": ["lib/semantic-ui/src/themes/default/assets/images/flags.png", "lib/semantic-ui/src/themes/default/assets/fonts/icons.eot", "lib/semantic-ui/src/themes/default/assets/fonts/icons.svg", "lib/semantic-ui/src/themes/default/assets/fonts/icons.ttf", "lib/semantic-ui/src/themes/default/assets/fonts/icons.woff", "lib/semantic-ui/src/themes/default/assets/fonts/icons.woff2"] }, { "name": "fixed", "overrides": ["lib/semantic-ui/src/themes/fixed-width/collections/grid.overrides.import.less", "lib/semantic-ui/src/themes/fixed-width/modules/modal.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/fixed-width/collections/grid.variables.import.less", "lib/semantic-ui/src/themes/fixed-width/modules/modal.variables.import.less"], "assets": [] }, { "name": "duo", "overrides": ["lib/semantic-ui/src/themes/duo/elements/loader.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/duo/elements/loader.variables.import.less"], "assets": [] }, { "name": "github", "overrides": ["lib/semantic-ui/src/themes/github/elements/button.overrides.import.less", "lib/semantic-ui/src/themes/github/elements/icon.overrides.import.less", "lib/semantic-ui/src/themes/github/elements/input.overrides.import.less", "lib/semantic-ui/src/themes/github/elements/label.overrides.import.less", "lib/semantic-ui/src/themes/github/elements/segment.overrides.import.less", "lib/semantic-ui/src/themes/github/elements/step.overrides.import.less", "lib/semantic-ui/src/themes/github/collections/form.overrides.import.less", "lib/semantic-ui/src/themes/github/collections/menu.overrides.import.less", "lib/semantic-ui/src/themes/github/collections/message.overrides.import.less", "lib/semantic-ui/src/themes/github/modules/dropdown.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/github/elements/button.variables.import.less", "lib/semantic-ui/src/themes/github/elements/header.variables.import.less", "lib/semantic-ui/src/themes/github/elements/icon.variables.import.less", "lib/semantic-ui/src/themes/github/elements/image.variables.import.less", "lib/semantic-ui/src/themes/github/elements/input.variables.import.less", "lib/semantic-ui/src/themes/github/elements/label.variables.import.less", "lib/semantic-ui/src/themes/github/elements/segment.variables.import.less", "lib/semantic-ui/src/themes/github/elements/step.variables.import.less", "lib/semantic-ui/src/themes/github/globals/site.variables.import.less", "lib/semantic-ui/src/themes/github/collections/breadcrumb.variables.import.less", "lib/semantic-ui/src/themes/github/collections/form.variables.import.less", "lib/semantic-ui/src/themes/github/collections/grid.variables.import.less", "lib/semantic-ui/src/themes/github/collections/menu.variables.import.less", "lib/semantic-ui/src/themes/github/collections/message.variables.import.less", "lib/semantic-ui/src/themes/github/collections/table.variables.import.less", "lib/semantic-ui/src/themes/github/modules/dropdown.variables.import.less", "lib/semantic-ui/src/themes/github/modules/popup.variables.import.less"], "assets": ["lib/semantic-ui/src/themes/github/assets/fonts/octicons-local.ttf", "lib/semantic-ui/src/themes/github/assets/fonts/octicons.svg", "lib/semantic-ui/src/themes/github/assets/fonts/octicons.ttf", "lib/semantic-ui/src/themes/github/assets/fonts/octicons.woff"] }, { "name": "gmail", "overrides": ["lib/semantic-ui/src/themes/gmail/collections/message.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/gmail/collections/message.variables.import.less"], "assets": [] }, { "name": "instagram", "overrides": ["lib/semantic-ui/src/themes/instagram/views/card.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/instagram/views/card.variables.import.less"], "assets": [] }, { "name": "material", "overrides": ["lib/semantic-ui/src/themes/material/collections/menu.overrides.import.less", "lib/semantic-ui/src/themes/material/globals/site.overrides.import.less", "lib/semantic-ui/src/themes/material/elements/button.overrides.import.less", "lib/semantic-ui/src/themes/material/elements/header.overrides.import.less", "lib/semantic-ui/src/themes/material/elements/icon.overrides.import.less", "lib/semantic-ui/src/themes/material/modules/dropdown.overrides.import.less", "lib/semantic-ui/src/themes/material/modules/modal.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/material/collections/menu.variables.import.less", "lib/semantic-ui/src/themes/material/globals/site.variables.import.less", "lib/semantic-ui/src/themes/material/elements/button.variables.import.less", "lib/semantic-ui/src/themes/material/elements/header.variables.import.less", "lib/semantic-ui/src/themes/material/elements/icon.variables.import.less", "lib/semantic-ui/src/themes/material/modules/dropdown.variables.import.less", "lib/semantic-ui/src/themes/material/modules/modal.variables.import.less"], "assets": ["lib/semantic-ui/src/themes/material/assets/fonts/icons.eot", "lib/semantic-ui/src/themes/material/assets/fonts/icons.svg", "lib/semantic-ui/src/themes/material/assets/fonts/icons.ttf", "lib/semantic-ui/src/themes/material/assets/fonts/icons.woff"] }, { "name": "flat", "overrides": ["lib/semantic-ui/src/themes/flat/collections/form.overrides.import.less", "lib/semantic-ui/src/themes/flat/globals/site.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/flat/collections/form.variables.import.less", "lib/semantic-ui/src/themes/flat/globals/site.variables.import.less"], "assets": [] }, { "name": "raised", "overrides": ["lib/semantic-ui/src/themes/raised/elements/button.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/raised/elements/button.variables.import.less"], "assets": [] }, { "name": "resetcss", "overrides": ["lib/semantic-ui/src/themes/resetcss/globals/reset.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/resetcss/globals/reset.variables.import.less"], "assets": [] }, { "name": "pulsar", "overrides": ["lib/semantic-ui/src/themes/pulsar/elements/loader.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/pulsar/elements/loader.variables.import.less"], "assets": [] }, { "name": "round", "overrides": ["lib/semantic-ui/src/themes/round/elements/button.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/round/elements/button.variables.import.less"], "assets": [] }, { "name": "striped", "overrides": ["lib/semantic-ui/src/themes/striped/modules/progress.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/striped/modules/progress.variables.import.less"], "assets": [] }, { "name": "rtl", "overrides": ["lib/semantic-ui/src/themes/rtl/globals/site.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/rtl/globals/site.variables.import.less"], "assets": [] }, { "name": "timeline", "overrides": ["lib/semantic-ui/src/themes/timeline/views/feed.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/timeline/views/feed.variables.import.less"], "assets": [] }, { "name": "twitter", "overrides": ["lib/semantic-ui/src/themes/twitter/elements/button.overrides.import.less"], "variables": ["lib/semantic-ui/src/themes/twitter/elements/button.variables.import.less"], "assets": [] }];
                                                                                                                       //
themesData.exists = function (name) {                                                                                  // 59
  var sameName = function sameName(theme) {                                                                            // 60
    return theme.name == name;                                                                                         // 61
  };                                                                                                                   // 62
  return _.isUndefined(_.find(this.data, sameName)) ? false : true;                                                    // 63
};                                                                                                                     // 64
                                                                                                                       //
themesData.overridesFilePaths = function () {                                                                          // 66
  return filePaths(this.data, 'overrides');                                                                            // 67
};                                                                                                                     // 68
                                                                                                                       //
themesData.variablesFilePaths = function () {                                                                          // 70
  return filePaths(this.data, 'variables');                                                                            // 71
};                                                                                                                     // 72
                                                                                                                       //
themesData.assetsFilePaths = function () {                                                                             // 74
  return filePaths(this.data, 'assets');                                                                               // 75
};                                                                                                                     // 76
                                                                                                                       //
var filePaths = function filePaths(themes, property) {                                                                 // 78
  var themeWithProperty = _.filter(themes, function (theme) {                                                          // 79
    return theme[property];                                                                                            // 80
  });                                                                                                                  // 81
  return _.reduce(themeWithProperty, function (result, theme) {                                                        // 82
    return result.concat(theme[property]);                                                                             // 83
  }, []);                                                                                                              // 84
};                                                                                                                     // 85
                                                                                                                       //
themesData.themeConfigFile = 'lib/semantic-ui/src/theme.config.import.less';                                           // 87
themesData.themeLessFile = 'lib/semantic-ui/src/theme.import.less';                                                    // 88
                                                                                                                       //
semanticUiPackage.themesData = themesData;                                                                             // 90
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sites-data.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/data/sites-data.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     //
  DO NOT MODIFY - This file has been generated by https://github.com/flemay/Semantic-UI-Meteorize                      //
*/                                                                                                                     //
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 5
                                                                                                                       //
var sitesData = {};                                                                                                    // 7
                                                                                                                       //
sitesData.data = [{ "name": "breadcrumb", "overrides": ["lib/semantic-ui/src/site/collections/breadcrumb.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/collections/breadcrumb.variables.import.less"] }, { "name": "form", "overrides": ["lib/semantic-ui/src/site/collections/form.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/collections/form.variables.import.less"] }, { "name": "grid", "overrides": ["lib/semantic-ui/src/site/collections/grid.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/collections/grid.variables.import.less"] }, { "name": "menu", "overrides": ["lib/semantic-ui/src/site/collections/menu.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/collections/menu.variables.import.less"] }, { "name": "message", "overrides": ["lib/semantic-ui/src/site/collections/message.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/collections/message.variables.import.less"] }, { "name": "table", "overrides": ["lib/semantic-ui/src/site/collections/table.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/collections/table.variables.import.less"] }, { "name": "reset", "overrides": ["lib/semantic-ui/src/site/globals/reset.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/globals/reset.variables.import.less"] }, { "name": "site", "overrides": ["lib/semantic-ui/src/site/globals/site.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/globals/site.variables.import.less"] }, { "name": "button", "overrides": ["lib/semantic-ui/src/site/elements/button.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/button.variables.import.less"] }, { "name": "container", "overrides": ["lib/semantic-ui/src/site/elements/container.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/container.variables.import.less"] }, { "name": "divider", "overrides": ["lib/semantic-ui/src/site/elements/divider.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/divider.variables.import.less"] }, { "name": "flag", "overrides": ["lib/semantic-ui/src/site/elements/flag.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/flag.variables.import.less"] }, { "name": "header", "overrides": ["lib/semantic-ui/src/site/elements/header.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/header.variables.import.less"] }, { "name": "icon", "overrides": ["lib/semantic-ui/src/site/elements/icon.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/icon.variables.import.less"] }, { "name": "image", "overrides": ["lib/semantic-ui/src/site/elements/image.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/image.variables.import.less"] }, { "name": "input", "overrides": ["lib/semantic-ui/src/site/elements/input.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/input.variables.import.less"] }, { "name": "label", "overrides": ["lib/semantic-ui/src/site/elements/label.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/label.variables.import.less"] }, { "name": "list", "overrides": ["lib/semantic-ui/src/site/elements/list.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/list.variables.import.less"] }, { "name": "loader", "overrides": ["lib/semantic-ui/src/site/elements/loader.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/loader.variables.import.less"] }, { "name": "rail", "overrides": ["lib/semantic-ui/src/site/elements/rail.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/rail.variables.import.less"] }, { "name": "reveal", "overrides": ["lib/semantic-ui/src/site/elements/reveal.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/reveal.variables.import.less"] }, { "name": "segment", "overrides": ["lib/semantic-ui/src/site/elements/segment.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/segment.variables.import.less"] }, { "name": "step", "overrides": ["lib/semantic-ui/src/site/elements/step.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/elements/step.variables.import.less"] }, { "name": "ad", "overrides": ["lib/semantic-ui/src/site/views/ad.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/views/ad.variables.import.less"] }, { "name": "card", "overrides": ["lib/semantic-ui/src/site/views/card.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/views/card.variables.import.less"] }, { "name": "comment", "overrides": ["lib/semantic-ui/src/site/views/comment.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/views/comment.variables.import.less"] }, { "name": "feed", "overrides": ["lib/semantic-ui/src/site/views/feed.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/views/feed.variables.import.less"] }, { "name": "item", "overrides": ["lib/semantic-ui/src/site/views/item.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/views/item.variables.import.less"] }, { "name": "statistic", "overrides": ["lib/semantic-ui/src/site/views/statistic.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/views/statistic.variables.import.less"] }, { "name": "accordion", "overrides": ["lib/semantic-ui/src/site/modules/accordion.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/accordion.variables.import.less"] }, { "name": "chatroom", "overrides": ["lib/semantic-ui/src/site/modules/chatroom.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/chatroom.variables.import.less"] }, { "name": "checkbox", "overrides": ["lib/semantic-ui/src/site/modules/checkbox.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/checkbox.variables.import.less"] }, { "name": "dimmer", "overrides": ["lib/semantic-ui/src/site/modules/dimmer.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/dimmer.variables.import.less"] }, { "name": "dropdown", "overrides": ["lib/semantic-ui/src/site/modules/dropdown.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/dropdown.variables.import.less"] }, { "name": "embed", "overrides": ["lib/semantic-ui/src/site/modules/embed.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/embed.variables.import.less"] }, { "name": "modal", "overrides": ["lib/semantic-ui/src/site/modules/modal.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/modal.variables.import.less"] }, { "name": "nag", "overrides": ["lib/semantic-ui/src/site/modules/nag.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/nag.variables.import.less"] }, { "name": "popup", "overrides": ["lib/semantic-ui/src/site/modules/popup.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/popup.variables.import.less"] }, { "name": "progress", "overrides": ["lib/semantic-ui/src/site/modules/progress.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/progress.variables.import.less"] }, { "name": "rating", "overrides": ["lib/semantic-ui/src/site/modules/rating.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/rating.variables.import.less"] }, { "name": "search", "overrides": ["lib/semantic-ui/src/site/modules/search.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/search.variables.import.less"] }, { "name": "shape", "overrides": ["lib/semantic-ui/src/site/modules/shape.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/shape.variables.import.less"] }, { "name": "sidebar", "overrides": ["lib/semantic-ui/src/site/modules/sidebar.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/sidebar.variables.import.less"] }, { "name": "sticky", "overrides": ["lib/semantic-ui/src/site/modules/sticky.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/sticky.variables.import.less"] }, { "name": "tab", "overrides": ["lib/semantic-ui/src/site/modules/tab.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/tab.variables.import.less"] }, { "name": "transition", "overrides": ["lib/semantic-ui/src/site/modules/transition.overrides.import.less"], "variables": ["lib/semantic-ui/src/site/modules/transition.variables.import.less"] }];
                                                                                                                       //
sitesData.get = function (name) {                                                                                      // 105
  _.find(this.data, function (s) {                                                                                     // 106
    return s.name === name;                                                                                            // 107
  });                                                                                                                  // 108
};                                                                                                                     // 109
                                                                                                                       //
sitesData.overridesFilePaths = function () {                                                                           // 111
  return filePaths(this.data, 'overrides');                                                                            // 112
};                                                                                                                     // 113
                                                                                                                       //
sitesData.variablesFilePaths = function () {                                                                           // 115
  return filePaths(this.data, 'variables');                                                                            // 116
};                                                                                                                     // 117
                                                                                                                       //
var filePaths = function filePaths(themes, property) {                                                                 // 119
  var themeWithProperty = _.filter(themes, function (theme) {                                                          // 120
    return theme[property];                                                                                            // 121
  });                                                                                                                  // 122
  return _.reduce(themeWithProperty, function (result, theme) {                                                        // 123
    return result.concat(theme[property]);                                                                             // 124
  }, []);                                                                                                              // 125
};                                                                                                                     // 126
                                                                                                                       //
semanticUiPackage.sitesData = sitesData;                                                                               // 128
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"custom-semantic-data.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/data/custom-semantic-data.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 1
                                                                                                                       //
var customSemanticData = {};                                                                                           // 3
customSemanticData.data = {};                                                                                          // 4
                                                                                                                       //
customSemanticData.filterDefinitions = function (strings, matcherFunc) {                                               // 6
  return filter(this.requiredDefinitionsNames(), strings, matcherFunc);                                                // 7
};                                                                                                                     // 8
                                                                                                                       //
customSemanticData.requiredDefinitionsNames = function () {                                                            // 10
  var definitionsNames = _.keys(this.data.definitions);                                                                // 11
  var that = this;                                                                                                     // 12
  return _.filter(definitionsNames, function (name) {                                                                  // 13
    return that.data.definitions[name];                                                                                // 14
  });                                                                                                                  // 15
};                                                                                                                     // 16
                                                                                                                       //
customSemanticData.filterThemes = function (strings, matcherFunc) {                                                    // 18
  return filter(this.requiredThemesNames(), strings, matcherFunc);                                                     // 19
};                                                                                                                     // 20
                                                                                                                       //
/**                                                                                                                    //
  filter returns the strings that match \Wname\W or the provided matcher function.                                     //
*/                                                                                                                     //
var filter = function filter(names, strings, matcherFunc) {                                                            // 25
  return _.filter(strings, function (s) {                                                                              // 26
    var match = _.find(names, function (name) {                                                                        // 27
      if (matcherFunc) {                                                                                               // 28
        return matcherFunc(s, name);                                                                                   // 29
      } else {                                                                                                         // 30
        var regex = new RegExp("\\W" + name + "\\W", 'g');                                                             // 31
        return s.match(regex) !== null;                                                                                // 32
      }                                                                                                                // 33
    });                                                                                                                // 34
    return match;                                                                                                      // 35
  });                                                                                                                  // 36
};                                                                                                                     // 37
                                                                                                                       //
customSemanticData.requiredThemesNames = function () {                                                                 // 39
  var themesNames = _.keys(this.data.themes);                                                                          // 40
  var that = this;                                                                                                     // 41
  return _.filter(themesNames, function (name) {                                                                       // 42
    return that.data.themes[name];                                                                                     // 43
  });                                                                                                                  // 44
};                                                                                                                     // 45
                                                                                                                       //
customSemanticData.validate = function (definitionsData, themesData) {                                                 // 47
  var throwError = function throwError(name) {                                                                         // 48
    throw new Error('definition/theme "' + name + '"" does not exist. Please update your custom.semantic.json file.');
  };                                                                                                                   // 50
  _.each(_.keys(this.data.definitions), function (definitionName) {                                                    // 51
    if (!definitionsData.exists(definitionName)) {                                                                     // 52
      throwError(definitionName);                                                                                      // 53
    }                                                                                                                  // 54
  });                                                                                                                  // 55
  _.each(_.keys(this.data.themes), function (themeName) {                                                              // 56
    if (!themesData.exists(themeName)) {                                                                               // 57
      throwError(themeName);                                                                                           // 58
    }                                                                                                                  // 59
  });                                                                                                                  // 60
};                                                                                                                     // 61
                                                                                                                       //
semanticUiPackage.customSemanticData = customSemanticData;                                                             // 63
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"plugins":{"file-handler.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/plugins/file-handler.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 1
var fs = Npm.require('fs');                                                                                            // 2
var path = Npm.require('path');                                                                                        // 3
                                                                                                                       //
fileHandler = {};                                                                                                      // 5
                                                                                                                       //
fileHandler.getTextFileContents = function (paths) {                                                                   // 7
  var contents = [];                                                                                                   // 8
  _.each(paths, function (path) {                                                                                      // 9
    contents.push(semanticUiDataPackage.getTextFile(path));                                                            // 10
  });                                                                                                                  // 11
  return contents;                                                                                                     // 12
};                                                                                                                     // 13
                                                                                                                       //
fileHandler.getTextFile = function (path) {                                                                            // 15
  return semanticUiDataPackage.getTextFile(path);                                                                      // 16
};                                                                                                                     // 17
                                                                                                                       //
fileHandler.getBinaryFile = function (path) {                                                                          // 19
  return semanticUiDataPackage.getBinaryFile(path);                                                                    // 20
};                                                                                                                     // 21
                                                                                                                       //
fileHandler.getBinaryFileBuffer = function (path) {                                                                    // 23
  var binaryContent = semanticUiDataPackage.getBinaryFile(path);                                                       // 24
  return new Buffer(binaryContent);                                                                                    // 25
};                                                                                                                     // 26
                                                                                                                       //
fileHandler.fileExists = function (basePath, relativePath) {                                                           // 28
  var file = path.join(basePath, relativePath);                                                                        // 29
  return fs.existsSync(file);                                                                                          // 30
};                                                                                                                     // 31
                                                                                                                       //
fileHandler.readTextFile = function (basePath, relativePath) {                                                         // 33
  var file = path.join(basePath, relativePath);                                                                        // 34
  return fs.readFileSync(file, { encoding: 'utf8' });                                                                  // 35
};                                                                                                                     // 36
                                                                                                                       //
fileHandler.createDir = function (basePath, relativePath) {                                                            // 38
  var splitedPath = relativePath.split('/');                                                                           // 39
  _.reduce(splitedPath, function (resultPath, partPath) {                                                              // 40
    resultPath = path.join(resultPath, partPath);                                                                      // 41
    if (!fs.existsSync(resultPath)) {                                                                                  // 42
      fs.mkdirSync(resultPath);                                                                                        // 43
    }                                                                                                                  // 44
    return resultPath;                                                                                                 // 45
  }, basePath);                                                                                                        // 46
};                                                                                                                     // 47
                                                                                                                       //
fileHandler.writeTextFile = function (basePath, relativeFilePath, content) {                                           // 49
  fileHandler.createDir(basePath, path.dirname(relativeFilePath));                                                     // 50
  fs.writeFileSync(path.join(basePath, relativeFilePath), content, { encoding: 'utf8' });                              // 51
};                                                                                                                     // 52
                                                                                                                       //
fileHandler.writeTextFileFromContents = function (basePath, relativeFilePath, contents) {                              // 54
  fileHandler.createDir(basePath, path.dirname(relativeFilePath));                                                     // 55
  fs.writeFileSync(path.join(basePath, relativeFilePath), contents.join('\n'), { encoding: 'utf8' });                  // 56
};                                                                                                                     // 57
                                                                                                                       //
fileHandler.writeBinaryFile = function (basePath, relativeFilePath, binaryContent) {                                   // 59
  fileHandler.createDir(path.dirname(relativeFilePath));                                                               // 60
  var buffer = new Buffer(binaryContent);                                                                              // 61
  var wstream = fs.createWriteStream(path.join(basePath, relativeFilePath));                                           // 62
  wstream.write(buffer);                                                                                               // 63
  wstream.end();                                                                                                       // 64
};                                                                                                                     // 65
                                                                                                                       //
fileHandler.removeFile = function (filePath) {                                                                         // 67
  if (!fs.existsSync(filePath)) {                                                                                      // 68
    return;                                                                                                            // 69
  }                                                                                                                    // 70
  fs.unlinkSync(filePath);                                                                                             // 71
};                                                                                                                     // 72
                                                                                                                       //
fileHandler.removeDir = function (dirPath) {                                                                           // 74
  if (!fs.existsSync(dirPath)) {                                                                                       // 75
    return;                                                                                                            // 76
  }                                                                                                                    // 77
  filesToDelete = fs.readdirSync(dirPath);                                                                             // 78
  _.each(filesToDelete, function (f) {                                                                                 // 79
    var filePath = path.join(dirPath, f);                                                                              // 80
    if (fs.statSync(filePath).isDirectory()) {                                                                         // 81
      fileHandler.removeDir(filePath);                                                                                 // 82
    } else if (fs.statSync(filePath).isFile()) {                                                                       // 83
      fileHandler.removeFile(filePath);                                                                                // 84
    }                                                                                                                  // 85
  });                                                                                                                  // 86
  fs.rmdirSync(dirPath);                                                                                               // 87
};                                                                                                                     // 88
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"definitions-generator.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/plugins/definitions-generator.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 1
var path = Npm.require('path');                                                                                        // 2
var fs = Npm.require('fs');                                                                                            // 3
                                                                                                                       //
definitionsGenerator = {};                                                                                             // 5
/**                                                                                                                    //
  Generates the definitions folder.                                                                                    //
*/                                                                                                                     //
definitionsGenerator.generate = function (basePath, customSemanticData, definitionsData) {                             // 9
  cleanUp(basePath);                                                                                                   // 10
  var definitionsfiles = requiredDefinitionsfiles(definitionsData, customSemanticData);                                // 11
  var files = definitionsfiles.less.concat(definitionsfiles.js);                                                       // 12
  _.each(files, function (filePath) {                                                                                  // 13
    createDefinitionsFile(filePath, basePath);                                                                         // 14
  });                                                                                                                  // 15
  createSemanticLessFile(basePath, customSemanticData);                                                                // 16
};                                                                                                                     // 17
                                                                                                                       //
var cleanUp = function cleanUp(basePath) {                                                                             // 19
  fileHandler.removeDir(path.join(basePath, 'definitions'));                                                           // 20
  fileHandler.removeFile(path.join(basePath, 'semantic.less'));                                                        // 21
};                                                                                                                     // 22
                                                                                                                       //
var createSemanticLessFile = function createSemanticLessFile(basePath, customSemanticData) {                           // 24
  var file = fileHandler.getTextFile(semanticUiPackage.definitionsData.semanticLessFile);                              // 25
  var lines = file.split('\n');                                                                                        // 26
  var newLines = [];                                                                                                   // 27
  var definitionsNames = customSemanticData.requiredDefinitionsNames();                                                // 28
  _.each(lines, function (l) {                                                                                         // 29
    if (l.match(/@import/)) {                                                                                          // 30
      var matchedDefinitionName = _.find(definitionsNames, function (d) {                                              // 31
        return l.search("/" + d + ".") != -1;                                                                          // 32
      });                                                                                                              // 33
      if (matchedDefinitionName) {                                                                                     // 34
        newLines.push(l);                                                                                              // 35
      }                                                                                                                // 36
    } else {                                                                                                           // 37
      newLines.push(l);                                                                                                // 38
    }                                                                                                                  // 39
  });                                                                                                                  // 40
  fileHandler.writeTextFile(basePath, 'semantic.less', newLines.join('\n'));                                           // 41
};                                                                                                                     // 42
                                                                                                                       //
var createDefinitionsFile = function createDefinitionsFile(sourcePath, basePath) {                                     // 44
  var content = fileHandler.getTextFile(sourcePath);                                                                   // 45
  var relativePath = sourcePath.match(/definitions\/.+/)[0];                                                           // 46
  fileHandler.writeTextFile(basePath, relativePath, content);                                                          // 47
};                                                                                                                     // 48
                                                                                                                       //
var requiredDefinitionsfiles = function requiredDefinitionsfiles(definitionsData, customSemanticData) {                // 50
  var files = {};                                                                                                      // 51
  files.less = customSemanticData.filterDefinitions(definitionsData.lessFilePaths());                                  // 52
  files.js = customSemanticData.filterDefinitions(definitionsData.jsFilePaths());                                      // 53
                                                                                                                       //
  return files;                                                                                                        // 55
};                                                                                                                     // 56
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"themes-generator.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/plugins/themes-generator.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 1
var path = Npm.require('path');                                                                                        // 2
var fs = Npm.require('fs');                                                                                            // 3
                                                                                                                       //
themesGenerator = {};                                                                                                  // 5
                                                                                                                       //
/**                                                                                                                    //
  Always generates assets everytime the server restarts or refreshes                                                   //
*/                                                                                                                     //
themesGenerator.generateAssets = function (basePath, customSemanticData, themesData, customJsonFile) {                 // 10
  var themesFiles = requiredThemesFiles(themesData, customSemanticData);                                               // 11
  createAssetFiles(customJsonFile, themesFiles.assets);                                                                // 12
};                                                                                                                     // 13
                                                                                                                       //
/**                                                                                                                    //
  Generates the themes folder.                                                                                         //
*/                                                                                                                     //
themesGenerator.generate = function (basePath, customSemanticData, themesData) {                                       // 18
  cleanUp(basePath);                                                                                                   // 19
                                                                                                                       //
  var themesFiles = requiredThemesFiles(themesData, customSemanticData);                                               // 21
  var files = themesFiles.overrides.concat(themesFiles.variables);                                                     // 22
  _.each(files, function (filePath) {                                                                                  // 23
    createThemeFile(filePath, basePath);                                                                               // 24
  });                                                                                                                  // 25
  createThemeConfigFile(basePath, themesData);                                                                         // 26
  createThemeLessFile(basePath, themesData);                                                                           // 27
};                                                                                                                     // 28
                                                                                                                       //
var cleanUp = function cleanUp(basePath) {                                                                             // 30
  fileHandler.removeDir(path.join(basePath, 'themes'));                                                                // 31
  fileHandler.removeFile(path.join(basePath, 'theme.config'));                                                         // 32
  fileHandler.removeFile(path.join(basePath, 'theme.import.less'));                                                    // 33
};                                                                                                                     // 34
                                                                                                                       //
var createAssetFiles = function createAssetFiles(customJsonFile, assetsFiles) {                                        // 36
  _.each(assetsFiles, function (filePath) {                                                                            // 37
    customJsonFile.addAsset({                                                                                          // 38
      path: filePath,                                                                                                  // 39
      data: fileHandler.getBinaryFileBuffer(filePath)                                                                  // 40
    });                                                                                                                // 38
  });                                                                                                                  // 42
};                                                                                                                     // 43
                                                                                                                       //
/**                                                                                                                    //
  Creates the file theme.config.import.less if it does not exist.                                                      //
*/                                                                                                                     //
var createThemeConfigFile = function createThemeConfigFile(basePath, themesData) {                                     // 48
  if (fs.existsSync(path.join(basePath, 'theme.config.import.less'))) {                                                // 49
    return;                                                                                                            // 50
  }                                                                                                                    // 51
  var config = fileHandler.getTextFile(themesData.themeConfigFile);                                                    // 52
  fileHandler.writeTextFile(basePath, 'theme.config.import.less', config);                                             // 53
};                                                                                                                     // 54
                                                                                                                       //
var createThemeLessFile = function createThemeLessFile(basePath, themesData) {                                         // 56
  fileHandler.writeTextFile(basePath, 'theme.import.less', fileHandler.getTextFile(themesData.themeLessFile));         // 57
};                                                                                                                     // 58
                                                                                                                       //
var createThemeFile = function createThemeFile(sourcePath, basePath) {                                                 // 60
  var content = fileHandler.getTextFile(sourcePath);                                                                   // 61
  var relativePath = sourcePath.match(/themes\/.+/)[0];                                                                // 62
  fileHandler.writeTextFile(basePath, relativePath, content);                                                          // 63
};                                                                                                                     // 64
                                                                                                                       //
var requiredThemesFiles = function requiredThemesFiles(themesData, customSemanticData) {                               // 66
  var files = {};                                                                                                      // 67
  files.overrides = themesData.overridesFilePaths();                                                                   // 68
  files.variables = themesData.variablesFilePaths();                                                                   // 69
  files.assets = themesData.assetsFilePaths();                                                                         // 70
                                                                                                                       //
  files.overrides = customSemanticData.filterThemes(files.overrides);                                                  // 72
  files.variables = customSemanticData.filterThemes(files.variables);                                                  // 73
  files.assets = customSemanticData.filterThemes(files.assets);                                                        // 74
                                                                                                                       //
  files.overrides = customSemanticData.filterDefinitions(files.overrides);                                             // 76
  files.variables = customSemanticData.filterDefinitions(files.variables);                                             // 77
  files.assets = customSemanticData.filterDefinitions(files.assets, function (string, name) {                          // 78
    // icon and flag in assets end with a 's'                                                                          //
    var regex = new RegExp("\\W" + name + "\\w\\W", 'g');                                                              // 80
    return string.match(regex) !== null;                                                                               // 81
  });                                                                                                                  // 82
  return files;                                                                                                        // 83
};                                                                                                                     // 84
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sites-generator.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/plugins/sites-generator.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 1
var path = Npm.require('path');                                                                                        // 2
var fs = Npm.require('fs');                                                                                            // 3
                                                                                                                       //
sitesGenerator = {};                                                                                                   // 5
                                                                                                                       //
/**                                                                                                                    //
  Generates the site folder if it does not exist.                                                                      //
*/                                                                                                                     //
sitesGenerator.generate = function (basePath, customSemanticData, sitesData) {                                         // 10
  if (fs.existsSync(path.join(basePath, 'site'))) {                                                                    // 11
    return;                                                                                                            // 12
  }                                                                                                                    // 13
  var sitesFiles = requireSitesFiles(sitesData, customSemanticData);                                                   // 14
  var files = sitesFiles.overrides.concat(sitesFiles.variables);                                                       // 15
  _.each(files, function (filePath) {                                                                                  // 16
    createSitesFile(filePath, basePath);                                                                               // 17
  });                                                                                                                  // 18
};                                                                                                                     // 19
                                                                                                                       //
var createSitesFile = function createSitesFile(sourcePath, basePath) {                                                 // 21
  var content = fileHandler.getTextFile(sourcePath);                                                                   // 22
  var relativePath = sourcePath.match(/site\/.+/)[0];                                                                  // 23
  fileHandler.writeTextFile(basePath, relativePath, content);                                                          // 24
};                                                                                                                     // 25
                                                                                                                       //
var requireSitesFiles = function requireSitesFiles(sitesData, customSemanticData) {                                    // 27
  var files = {};                                                                                                      // 28
                                                                                                                       //
  files.overrides = sitesData.overridesFilePaths();                                                                    // 30
  files.variables = sitesData.variablesFilePaths();                                                                    // 31
  // Provide a custom matcher function because definition has name "site" and all the path has "_site".                //
  files.overrides = customSemanticData.filterDefinitions(files.overrides, function (string, name) {                    // 33
    return string.search(name + ".overrides") != -1;                                                                   // 34
  });                                                                                                                  // 35
  files.variables = customSemanticData.filterDefinitions(files.variables, function (string, name) {                    // 36
    return string.search(name + ".variables") != -1;                                                                   // 37
  });                                                                                                                  // 38
  return files;                                                                                                        // 39
};                                                                                                                     // 40
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"custom-semantic-json-generator.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/plugins/custom-semantic-json-generator.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 1
var path = Npm.require('path');                                                                                        // 2
                                                                                                                       //
customJsonGenerator = {};                                                                                              // 4
                                                                                                                       //
/**                                                                                                                    //
  Generates the custom semantic json file only if the file is empty.                                                   //
*/                                                                                                                     //
customJsonGenerator.generate = function (basePath, definitionsData, themesData) {                                      // 9
  var customJson = {};                                                                                                 // 10
  addDefinitions(customJson, definitionsData);                                                                         // 11
  addThemes(customJson, themesData);                                                                                   // 12
  createCustomSemanticJsonFile(basePath, customJson);                                                                  // 13
};                                                                                                                     // 14
                                                                                                                       //
var addDefinitions = function addDefinitions(customJson, definitionsData) {                                            // 16
  customJson.definitions = {};                                                                                         // 17
  _.each(definitionsData.data, function (d) {                                                                          // 18
    customJson.definitions[d.name] = true;                                                                             // 19
  });                                                                                                                  // 20
};                                                                                                                     // 21
                                                                                                                       //
var addThemes = function addThemes(customJson, themesData) {                                                           // 23
  customJson.themes = {};                                                                                              // 24
  _.each(themesData.data, function (d) {                                                                               // 25
    customJson.themes[d.name] = false;                                                                                 // 26
  });                                                                                                                  // 27
  customJson.themes['default'] = true;                                                                                 // 28
};                                                                                                                     // 29
                                                                                                                       //
var createCustomSemanticJsonFile = function createCustomSemanticJsonFile(basePath, customJson) {                       // 31
  fileHandler.writeTextFile(basePath, "custom.semantic.json", EJSON.stringify(customJson, { indent: true, canonical: true }));
};                                                                                                                     // 33
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"generator.js":["babel-runtime/helpers/classCallCheck",function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/generateSemanticUi/plugins/generator.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                                //
                                                                                                                       //
var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                       //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      //
                                                                                                                       //
var _ = Npm.require('lodash');                                                                                         // 1
var path = Npm.require('path');                                                                                        // 2
var diff = Npm.require('diff');                                                                                        // 3
                                                                                                                       //
Plugin.registerCompiler({                                                                                              // 5
  extensions: ['semantic.json'],                                                                                       // 6
  archMatching: 'web'                                                                                                  // 7
}, function () {                                                                                                       // 5
  return new SemanticGenerator();                                                                                      // 8
});                                                                                                                    // 8
                                                                                                                       //
var SemanticGenerator = function () {                                                                                  //
  function SemanticGenerator() {                                                                                       //
    (0, _classCallCheck3['default'])(this, SemanticGenerator);                                                         //
  }                                                                                                                    //
                                                                                                                       //
  SemanticGenerator.prototype.processFilesForTarget = function processFilesForTarget(files) {                          //
    var customJsonFile = files[0];                                                                                     // 12
    try {                                                                                                              // 13
      generate(customJsonFile);                                                                                        // 14
    } catch (error) {                                                                                                  // 15
      customJsonFile.error({                                                                                           // 16
        message: "Semantic UI Generator: " + error.message,                                                            // 17
        sourcePath: error.filename || customJsonFile.getPathInPackage(),                                               // 18
        line: error.line,                                                                                              // 19
        column: error.column                                                                                           // 20
      });                                                                                                              // 16
      return;                                                                                                          // 22
    }                                                                                                                  // 23
  };                                                                                                                   // 24
                                                                                                                       //
  return SemanticGenerator;                                                                                            //
}();                                                                                                                   //
                                                                                                                       //
var generate = function generate(customJsonFile) {                                                                     // 27
  var customJsonContent = customJsonFile.getContentsAsString();                                                        // 28
  var basePath = customJsonFile.getDirname();                                                                          // 29
                                                                                                                       //
  if (customJsonContent !== '') {                                                                                      // 31
    semanticUiPackage.customSemanticData.data = JSON.parse(customJsonContent);                                         // 32
                                                                                                                       //
    if (isGeneratingNeeded(basePath, customJsonContent)) {                                                             // 34
      semanticUiPackage.customSemanticData.validate(semanticUiPackage.definitionsData, semanticUiPackage.themesData);  // 35
      definitionsGenerator.generate(basePath, semanticUiPackage.customSemanticData, semanticUiPackage.definitionsData);
      themesGenerator.generate(basePath, semanticUiPackage.customSemanticData, semanticUiPackage.themesData);          // 37
      sitesGenerator.generate(basePath, semanticUiPackage.customSemanticData, semanticUiPackage.sitesData);            // 38
      fileHandler.writeTextFile(basePath, '.custom.semantic.json', customJsonContent);                                 // 39
    }                                                                                                                  // 40
    // Always generate assets                                                                                          //
    themesGenerator.generateAssets(basePath, semanticUiPackage.customSemanticData, semanticUiPackage.themesData, customJsonFile);
  } else {                                                                                                             // 43
    customJsonGenerator.generate(basePath, semanticUiPackage.definitionsData, semanticUiPackage.themesData);           // 44
    fileHandler.writeTextFile(basePath, '.custom.semantic.json', fileHandler.readTextFile(basePath, 'custom.semantic.json'));
  }                                                                                                                    // 46
};                                                                                                                     // 47
                                                                                                                       //
var isGeneratingNeeded = function isGeneratingNeeded(basePath, customJsonContent) {                                    // 49
  if (customJsonContent === '') {                                                                                      // 50
    return true;                                                                                                       // 51
  }                                                                                                                    // 52
  if (!fileHandler.fileExists(basePath, '.custom.semantic.json')) {                                                    // 53
    return true;                                                                                                       // 54
  }                                                                                                                    // 55
                                                                                                                       //
  var dotCustomJsonContent = fileHandler.readTextFile(basePath, '.custom.semantic.json');                              // 57
                                                                                                                       //
  var dotCustomJson;                                                                                                   // 59
  try {                                                                                                                // 60
    dotCustomJson = JSON.parse(dotCustomJsonContent);                                                                  // 61
  } catch (error) {                                                                                                    // 62
    return true;                                                                                                       // 63
  }                                                                                                                    // 64
  var diffResult = diff.diffJson(dotCustomJson, JSON.parse(customJsonContent));                                        // 65
                                                                                                                       //
  return diffResult.length == 1 ? false : true;                                                                        // 67
};                                                                                                                     // 68
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]}}}}},{"extensions":[".js",".json"]});
require("./node_modules/meteor/generateSemanticUi/semantic-ui.js");
require("./node_modules/meteor/generateSemanticUi/data/definitions-data.js");
require("./node_modules/meteor/generateSemanticUi/data/themes-data.js");
require("./node_modules/meteor/generateSemanticUi/data/sites-data.js");
require("./node_modules/meteor/generateSemanticUi/data/custom-semantic-data.js");
require("./node_modules/meteor/generateSemanticUi/plugins/file-handler.js");
require("./node_modules/meteor/generateSemanticUi/plugins/definitions-generator.js");
require("./node_modules/meteor/generateSemanticUi/plugins/themes-generator.js");
require("./node_modules/meteor/generateSemanticUi/plugins/sites-generator.js");
require("./node_modules/meteor/generateSemanticUi/plugins/custom-semantic-json-generator.js");
require("./node_modules/meteor/generateSemanticUi/plugins/generator.js");

/* Exports */
if (typeof Package === 'undefined') Package = {};
Package.generateSemanticUi = {};

})();



//# sourceURL=meteor://💻app/packages/generateSemanticUi_plugin.js
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGVvcjovL/CfkrthcHAvcGFja2FnZXMvZ2VuZXJhdGVTZW1hbnRpY1VpL3NlbWFudGljLXVpLmpzIiwibWV0ZW9yOi8v8J+Su2FwcC9wYWNrYWdlcy9nZW5lcmF0ZVNlbWFudGljVWkvZGF0YS9kZWZpbml0aW9ucy1kYXRhLmpzIiwibWV0ZW9yOi8v8J+Su2FwcC9wYWNrYWdlcy9nZW5lcmF0ZVNlbWFudGljVWkvZGF0YS90aGVtZXMtZGF0YS5qcyIsIm1ldGVvcjovL/CfkrthcHAvcGFja2FnZXMvZ2VuZXJhdGVTZW1hbnRpY1VpL2RhdGEvc2l0ZXMtZGF0YS5qcyIsIm1ldGVvcjovL/CfkrthcHAvcGFja2FnZXMvZ2VuZXJhdGVTZW1hbnRpY1VpL2RhdGEvY3VzdG9tLXNlbWFudGljLWRhdGEuanMiLCJtZXRlb3I6Ly/wn5K7YXBwL3BhY2thZ2VzL2dlbmVyYXRlU2VtYW50aWNVaS9wbHVnaW5zL2ZpbGUtaGFuZGxlci5qcyIsIm1ldGVvcjovL/CfkrthcHAvcGFja2FnZXMvZ2VuZXJhdGVTZW1hbnRpY1VpL3BsdWdpbnMvZGVmaW5pdGlvbnMtZ2VuZXJhdG9yLmpzIiwibWV0ZW9yOi8v8J+Su2FwcC9wYWNrYWdlcy9nZW5lcmF0ZVNlbWFudGljVWkvcGx1Z2lucy90aGVtZXMtZ2VuZXJhdG9yLmpzIiwibWV0ZW9yOi8v8J+Su2FwcC9wYWNrYWdlcy9nZW5lcmF0ZVNlbWFudGljVWkvcGx1Z2lucy9zaXRlcy1nZW5lcmF0b3IuanMiLCJtZXRlb3I6Ly/wn5K7YXBwL3BhY2thZ2VzL2dlbmVyYXRlU2VtYW50aWNVaS9wbHVnaW5zL2N1c3RvbS1zZW1hbnRpYy1qc29uLWdlbmVyYXRvci5qcyIsIm1ldGVvcjovL/CfkrthcHAvcGFja2FnZXMvZ2VuZXJhdGVTZW1hbnRpY1VpL3BsdWdpbnMvZ2VuZXJhdG9yLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLG9CQUFvQixFQUFwQixxRzs7Ozs7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RCxNQUFJLENBQUMsWUFBWSxVQUFaLENBQXVCLFFBQXZCLEVBQWlDLHVCQUFqQyxDQUFMLEVBQWdFO0FBQzlELFdBQU8sSUFBUDtBQUNEOztBQUVELE1BQUksdUJBQXVCLFlBQVksWUFBWixDQUF5QixRQUF6QixFQUFtQyx1QkFBbkMsQ0FBM0I7O0FBRUEsTUFBSSxhQUFKO0FBQ0EsTUFBSTtBQUNGLG9CQUFnQixLQUFLLEtBQUwsQ0FBVyxvQkFBWCxDQUFoQjtBQUNELEdBRkQsQ0FFRSxPQUFPLEtBQVAsRUFBYztBQUNkLFdBQU8sSUFBUDtBQUNEO0FBQ0QsTUFBSSxhQUFjLEtBQUssUUFBTCxDQUFjLGFBQWQsRUFBNkIsS0FBSyxLQUFMLENBQVcsaUJBQVgsQ0FBN0IsQ0FBbEI7O0FBRUEsU0FBTyxXQUFXLE1BQVgsSUFBcUIsQ0FBckIsR0FBeUIsS0FBekIsR0FBaUMsSUFBeEM7QUFDRCxDQW5CRCwySCIsImZpbGUiOiIvcGFja2FnZXMvZ2VuZXJhdGVTZW1hbnRpY1VpX3BsdWdpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIG9uZSBnbG9iYWwgdmFyaWFibGUgKG5hbWVzcGFjZSlcbnNlbWFudGljVWlQYWNrYWdlID0ge307XG4iLCIvKlxuICBETyBOT1QgTU9ESUZZIC0gVGhpcyBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCBieSBodHRwczovL2dpdGh1Yi5jb20vZmxlbWF5L1NlbWFudGljLVVJLU1ldGVvcml6ZVxuKi9cblxudmFyIF8gPSBOcG0ucmVxdWlyZSgnbG9kYXNoJyk7XG5cbnZhciBkZWZpbml0aW9uc0RhdGEgPSB7fTtcblxuZGVmaW5pdGlvbnNEYXRhLmRhdGEgPSBbXG4gIFxuICAgIHtcIm5hbWVcIjpcImFwaVwiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvYmVoYXZpb3JzL2FwaS5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiY29sb3JpemVcIixcImpzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL2JlaGF2aW9ycy9jb2xvcml6ZS5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiZm9ybVwiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvYmVoYXZpb3JzL2Zvcm0uanNcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvY29sbGVjdGlvbnMvZm9ybS5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwic3RhdGVcIixcImpzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL2JlaGF2aW9ycy9zdGF0ZS5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwidmlzaWJpbGl0eVwiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvYmVoYXZpb3JzL3Zpc2liaWxpdHkuanNcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcInZpc2l0XCIsXCJqc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9iZWhhdmlvcnMvdmlzaXQuanNcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImJyZWFkY3J1bWJcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvY29sbGVjdGlvbnMvYnJlYWRjcnVtYi5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiZ3JpZFwiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9jb2xsZWN0aW9ucy9ncmlkLmltcG9ydC5sZXNzXCJ9LFxuICBcbiAgICB7XCJuYW1lXCI6XCJtZW51XCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL2NvbGxlY3Rpb25zL21lbnUuaW1wb3J0Lmxlc3NcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcIm1lc3NhZ2VcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvY29sbGVjdGlvbnMvbWVzc2FnZS5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwidGFibGVcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvY29sbGVjdGlvbnMvdGFibGUuaW1wb3J0Lmxlc3NcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImJ1dHRvblwiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9lbGVtZW50cy9idXR0b24uaW1wb3J0Lmxlc3NcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImNvbnRhaW5lclwiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9lbGVtZW50cy9jb250YWluZXIuaW1wb3J0Lmxlc3NcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImRpdmlkZXJcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvZWxlbWVudHMvZGl2aWRlci5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiZmxhZ1wiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9lbGVtZW50cy9mbGFnLmltcG9ydC5sZXNzXCJ9LFxuICBcbiAgICB7XCJuYW1lXCI6XCJoZWFkZXJcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvZWxlbWVudHMvaGVhZGVyLmltcG9ydC5sZXNzXCJ9LFxuICBcbiAgICB7XCJuYW1lXCI6XCJpY29uXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL2VsZW1lbnRzL2ljb24uaW1wb3J0Lmxlc3NcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImltYWdlXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL2VsZW1lbnRzL2ltYWdlLmltcG9ydC5sZXNzXCJ9LFxuICBcbiAgICB7XCJuYW1lXCI6XCJpbnB1dFwiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9lbGVtZW50cy9pbnB1dC5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwibGFiZWxcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvZWxlbWVudHMvbGFiZWwuaW1wb3J0Lmxlc3NcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImxpc3RcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvZWxlbWVudHMvbGlzdC5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwibG9hZGVyXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL2VsZW1lbnRzL2xvYWRlci5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwicmFpbFwiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9lbGVtZW50cy9yYWlsLmltcG9ydC5sZXNzXCJ9LFxuICBcbiAgICB7XCJuYW1lXCI6XCJyZXZlYWxcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvZWxlbWVudHMvcmV2ZWFsLmltcG9ydC5sZXNzXCJ9LFxuICBcbiAgICB7XCJuYW1lXCI6XCJzZWdtZW50XCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL2VsZW1lbnRzL3NlZ21lbnQuaW1wb3J0Lmxlc3NcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcInN0ZXBcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvZWxlbWVudHMvc3RlcC5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwicmVzZXRcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvZ2xvYmFscy9yZXNldC5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwic2l0ZVwiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9nbG9iYWxzL3NpdGUuaW1wb3J0Lmxlc3NcIixcImpzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL2dsb2JhbHMvc2l0ZS5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiYWRcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvdmlld3MvYWQuaW1wb3J0Lmxlc3NcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImNhcmRcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvdmlld3MvY2FyZC5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiY29tbWVudFwiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy92aWV3cy9jb21tZW50LmltcG9ydC5sZXNzXCJ9LFxuICBcbiAgICB7XCJuYW1lXCI6XCJmZWVkXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL3ZpZXdzL2ZlZWQuaW1wb3J0Lmxlc3NcIn0sXG4gIFxuICAgIHtcIm5hbWVcIjpcIml0ZW1cIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvdmlld3MvaXRlbS5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwic3RhdGlzdGljXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL3ZpZXdzL3N0YXRpc3RpYy5pbXBvcnQubGVzc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiYWNjb3JkaW9uXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL21vZHVsZXMvYWNjb3JkaW9uLmltcG9ydC5sZXNzXCIsXCJqc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9tb2R1bGVzL2FjY29yZGlvbi5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiY2hlY2tib3hcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9jaGVja2JveC5pbXBvcnQubGVzc1wiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9jaGVja2JveC5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiZGltbWVyXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL21vZHVsZXMvZGltbWVyLmltcG9ydC5sZXNzXCIsXCJqc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9tb2R1bGVzL2RpbW1lci5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiZHJvcGRvd25cIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9kcm9wZG93bi5pbXBvcnQubGVzc1wiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9kcm9wZG93bi5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwiZW1iZWRcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9lbWJlZC5pbXBvcnQubGVzc1wiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9lbWJlZC5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwibW9kYWxcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9tb2RhbC5pbXBvcnQubGVzc1wiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9tb2RhbC5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwibmFnXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL21vZHVsZXMvbmFnLmltcG9ydC5sZXNzXCIsXCJqc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9tb2R1bGVzL25hZy5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwicG9wdXBcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9wb3B1cC5pbXBvcnQubGVzc1wiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9wb3B1cC5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwicHJvZ3Jlc3NcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9wcm9ncmVzcy5pbXBvcnQubGVzc1wiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9wcm9ncmVzcy5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwicmF0aW5nXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL21vZHVsZXMvcmF0aW5nLmltcG9ydC5sZXNzXCIsXCJqc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9tb2R1bGVzL3JhdGluZy5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwic2VhcmNoXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL21vZHVsZXMvc2VhcmNoLmltcG9ydC5sZXNzXCIsXCJqc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9tb2R1bGVzL3NlYXJjaC5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwic2hhcGVcIixcImxlc3NcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9zaGFwZS5pbXBvcnQubGVzc1wiLFwianNcIjpcImxpYi9zZW1hbnRpYy11aS9zcmMvZGVmaW5pdGlvbnMvbW9kdWxlcy9zaGFwZS5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwic2lkZWJhclwiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9tb2R1bGVzL3NpZGViYXIuaW1wb3J0Lmxlc3NcIixcImpzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL21vZHVsZXMvc2lkZWJhci5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwic3RpY2t5XCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL21vZHVsZXMvc3RpY2t5LmltcG9ydC5sZXNzXCIsXCJqc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9tb2R1bGVzL3N0aWNreS5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwidGFiXCIsXCJsZXNzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL21vZHVsZXMvdGFiLmltcG9ydC5sZXNzXCIsXCJqc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9tb2R1bGVzL3RhYi5qc1wifSxcbiAgXG4gICAge1wibmFtZVwiOlwidHJhbnNpdGlvblwiLFwibGVzc1wiOlwibGliL3NlbWFudGljLXVpL3NyYy9kZWZpbml0aW9ucy9tb2R1bGVzL3RyYW5zaXRpb24uaW1wb3J0Lmxlc3NcIixcImpzXCI6XCJsaWIvc2VtYW50aWMtdWkvc3JjL2RlZmluaXRpb25zL21vZHVsZXMvdHJhbnNpdGlvbi5qc1wifSxcbiAgXG5dO1xuXG5kZWZpbml0aW9uc0RhdGEuZXhpc3RzID0gZnVuY3Rpb24obmFtZSkge1xuICB2YXIgc2FtZU5hbWUgPSBmdW5jdGlvbihkZWZpbml0aW9uKSB7XG4gICAgcmV0dXJuIGRlZmluaXRpb24ubmFtZSA9PSBuYW1lO1xuICB9O1xuICByZXR1cm4gXy5pc1VuZGVmaW5lZChfLmZpbmQodGhpcy5kYXRhLCBzYW1lTmFtZSkpID8gZmFsc2UgOiB0cnVlO1xufTtcblxuZGVmaW5pdGlvbnNEYXRhLmxlc3NGaWxlUGF0aHMgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGRlZmluaXRpb25zV2l0aExlc3MgPSBfLmZpbHRlcih0aGlzLmRhdGEsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5sZXNzO1xuICB9KTtcbiAgcmV0dXJuIF8ubWFwKGRlZmluaXRpb25zV2l0aExlc3MsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5sZXNzO1xuICB9KTtcbn07XG5cbmRlZmluaXRpb25zRGF0YS5qc0ZpbGVQYXRocyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgZGVmaW5pdGlvbnNXaXRoSnMgPSBfLmZpbHRlcih0aGlzLmRhdGEsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5qcztcbiAgfSk7XG4gIHJldHVybiBfLm1hcChkZWZpbml0aW9uc1dpdGhKcywgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmpzO1xuICB9KTtcbn07XG5cbmRlZmluaXRpb25zRGF0YS5zZW1hbnRpY0xlc3NGaWxlID0gJ2xpYi9zZW1hbnRpYy11aS9zcmMvc2VtYW50aWMubGVzcyc7XG5cbnNlbWFudGljVWlQYWNrYWdlLmRlZmluaXRpb25zRGF0YSA9IGRlZmluaXRpb25zRGF0YTtcbiIsIi8qXG4gIERPIE5PVCBNT0RJRlkgLSBUaGlzIGZpbGUgaGFzIGJlZW4gZ2VuZXJhdGVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9mbGVtYXkvU2VtYW50aWMtVUktTWV0ZW9yaXplXG4qL1xuXG52YXIgXyA9IE5wbS5yZXF1aXJlKCdsb2Rhc2gnKTtcblxudmFyIHRoZW1lc0RhdGEgPSB7fTtcblxudGhlbWVzRGF0YS5kYXRhID0gW1xuICBcbiAgICB7XCJuYW1lXCI6XCJiYXNpY1wiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvYmFzaWMvbW9kdWxlcy9wcm9ncmVzcy5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2Jhc2ljL2VsZW1lbnRzL2J1dHRvbi5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2Jhc2ljL2VsZW1lbnRzL2ljb24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9iYXNpYy9lbGVtZW50cy9zdGVwLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvYmFzaWMvY29sbGVjdGlvbnMvdGFibGUub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9iYXNpYy9nbG9iYWxzL3Jlc2V0Lm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvYmFzaWMvdmlld3MvY2FyZC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9iYXNpYy9tb2R1bGVzL3Byb2dyZXNzLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvYmFzaWMvZWxlbWVudHMvYnV0dG9uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvYmFzaWMvZWxlbWVudHMvaWNvbi52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2Jhc2ljL2VsZW1lbnRzL3N0ZXAudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9iYXNpYy9jb2xsZWN0aW9ucy90YWJsZS52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2Jhc2ljL2dsb2JhbHMvcmVzZXQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9iYXNpYy92aWV3cy9jYXJkLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2Jhc2ljL2Fzc2V0cy9mb250cy9pY29ucy5lb3RcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2Jhc2ljL2Fzc2V0cy9mb250cy9pY29ucy5zdmdcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2Jhc2ljL2Fzc2V0cy9mb250cy9pY29ucy50dGZcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2Jhc2ljL2Fzc2V0cy9mb250cy9pY29ucy53b2ZmXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiYW1hem9uXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9hbWF6b24vZWxlbWVudHMvYnV0dG9uLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2FtYXpvbi9nbG9iYWxzL3NpdGUudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9hbWF6b24vZWxlbWVudHMvYnV0dG9uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiYm9va2lzaFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvYm9va2lzaC9lbGVtZW50cy9oZWFkZXIub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvYm9va2lzaC9lbGVtZW50cy9oZWFkZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdLFwiYXNzZXRzXCI6W119LFxuICBcbiAgICB7XCJuYW1lXCI6XCJib290c3RyYXAzXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9ib290c3RyYXAzL2VsZW1lbnRzL2J1dHRvbi5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9ib290c3RyYXAzL2VsZW1lbnRzL2J1dHRvbi52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl0sXCJhc3NldHNcIjpbXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImNsYXNzaWNcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2NsYXNzaWMvbW9kdWxlcy9wcm9ncmVzcy5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2NsYXNzaWMvZWxlbWVudHMvYnV0dG9uLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvY2xhc3NpYy9lbGVtZW50cy9oZWFkZXIub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jbGFzc2ljL3ZpZXdzL2NhcmQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jbGFzc2ljL2NvbGxlY3Rpb25zL3RhYmxlLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2NsYXNzaWMvbW9kdWxlcy9wcm9ncmVzcy52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2NsYXNzaWMvZWxlbWVudHMvYnV0dG9uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvY2xhc3NpYy9lbGVtZW50cy9oZWFkZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jbGFzc2ljL3ZpZXdzL2NhcmQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jbGFzc2ljL2NvbGxlY3Rpb25zL3RhYmxlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiY2h1YmJ5XCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jaHViYnkvbW9kdWxlcy9hY2NvcmRpb24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jaHViYnkvdmlld3MvY29tbWVudC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2NodWJieS9jb2xsZWN0aW9ucy9mb3JtLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvY2h1YmJ5L2NvbGxlY3Rpb25zL21lbnUub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jaHViYnkvZWxlbWVudHMvYnV0dG9uLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvY2h1YmJ5L2VsZW1lbnRzL2hlYWRlci5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jaHViYnkvbW9kdWxlcy9hY2NvcmRpb24udmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jaHViYnkvdmlld3MvY29tbWVudC52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2NodWJieS9jb2xsZWN0aW9ucy9mb3JtLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvY2h1YmJ5L2NvbGxlY3Rpb25zL21lbnUudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jaHViYnkvZWxlbWVudHMvYnV0dG9uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvY2h1YmJ5L2VsZW1lbnRzL2hlYWRlci52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl0sXCJhc3NldHNcIjpbXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImNvbG9yZWRcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2NvbG9yZWQvbW9kdWxlcy9jaGVja2JveC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9jb2xvcmVkL21vZHVsZXMvY2hlY2tib3gudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdLFwiYXNzZXRzXCI6W119LFxuICBcbiAgICB7XCJuYW1lXCI6XCJkZWZhdWx0XCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2NvbGxlY3Rpb25zL2JyZWFkY3J1bWIub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2NvbGxlY3Rpb25zL2Zvcm0ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2NvbGxlY3Rpb25zL2dyaWQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2NvbGxlY3Rpb25zL21lbnUub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2NvbGxlY3Rpb25zL21lc3NhZ2Uub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2NvbGxlY3Rpb25zL3RhYmxlLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9lbGVtZW50cy9idXR0b24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL2NvbnRhaW5lci5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvZGl2aWRlci5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvZmxhZy5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvaGVhZGVyLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9lbGVtZW50cy9pY29uLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9lbGVtZW50cy9pbWFnZS5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvaW5wdXQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL2xhYmVsLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9lbGVtZW50cy9saXN0Lm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9lbGVtZW50cy9sb2FkZXIub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL3JhaWwub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL3JldmVhbC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvc2VnbWVudC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvc3RlcC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZ2xvYmFscy9yZXNldC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZ2xvYmFscy9zaXRlLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC92aWV3cy9hZC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvdmlld3MvY2FyZC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvdmlld3MvY29tbWVudC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvdmlld3MvZmVlZC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvdmlld3MvaXRlbS5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvdmlld3Mvc3RhdGlzdGljLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL2FjY29yZGlvbi5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy9jaGF0cm9vbS5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy9jaGVja2JveC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy9kaW1tZXIub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvZHJvcGRvd24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvZW1iZWQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvbW9kYWwub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvbmFnLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL3BvcHVwLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL3Byb2dyZXNzLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL3JhdGluZy5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy9zZWFyY2gub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvc2hhcGUub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvc2lkZWJhci5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy9zdGlja3kub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvdGFiLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL3RyYW5zaXRpb24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9jb2xsZWN0aW9ucy9icmVhZGNydW1iLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9jb2xsZWN0aW9ucy9mb3JtLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9jb2xsZWN0aW9ucy9ncmlkLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9jb2xsZWN0aW9ucy9tZW51LnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9jb2xsZWN0aW9ucy9tZXNzYWdlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9jb2xsZWN0aW9ucy90YWJsZS52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvYnV0dG9uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9lbGVtZW50cy9jb250YWluZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL2RpdmlkZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL2ZsYWcudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL2hlYWRlci52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvaWNvbi52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvaW1hZ2UudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL2lucHV0LnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9lbGVtZW50cy9sYWJlbC52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvbGlzdC52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvZWxlbWVudHMvbG9hZGVyLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9lbGVtZW50cy9yYWlsLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9lbGVtZW50cy9yZXZlYWwudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL3NlZ21lbnQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2VsZW1lbnRzL3N0ZXAudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2dsb2JhbHMvcmVzZXQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2dsb2JhbHMvc2l0ZS52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvdmlld3MvYWQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L3ZpZXdzL2NhcmQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L3ZpZXdzL2NvbW1lbnQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L3ZpZXdzL2ZlZWQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L3ZpZXdzL2l0ZW0udmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L3ZpZXdzL3N0YXRpc3RpYy52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy9hY2NvcmRpb24udmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvY2hhdHJvb20udmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvY2hlY2tib3gudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvZGltbWVyLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL2Ryb3Bkb3duLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL2VtYmVkLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL21vZGFsLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL25hZy52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy9wb3B1cC52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy9wcm9ncmVzcy52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy9yYXRpbmcudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvc2VhcmNoLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL3NoYXBlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL3NpZGViYXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L21vZHVsZXMvc3RpY2t5LnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9tb2R1bGVzL3RhYi52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvbW9kdWxlcy90cmFuc2l0aW9uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvYXNzZXRzL2ltYWdlcy9mbGFncy5wbmdcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvYXNzZXRzL2ZvbnRzL2ljb25zLmVvdFwiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZGVmYXVsdC9hc3NldHMvZm9udHMvaWNvbnMuc3ZnXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kZWZhdWx0L2Fzc2V0cy9mb250cy9pY29ucy50dGZcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvYXNzZXRzL2ZvbnRzL2ljb25zLndvZmZcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2RlZmF1bHQvYXNzZXRzL2ZvbnRzL2ljb25zLndvZmYyXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiZml4ZWRcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2ZpeGVkLXdpZHRoL2NvbGxlY3Rpb25zL2dyaWQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9maXhlZC13aWR0aC9tb2R1bGVzL21vZGFsLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2ZpeGVkLXdpZHRoL2NvbGxlY3Rpb25zL2dyaWQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9maXhlZC13aWR0aC9tb2R1bGVzL21vZGFsLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiZHVvXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9kdW8vZWxlbWVudHMvbG9hZGVyLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2R1by9lbGVtZW50cy9sb2FkZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdLFwiYXNzZXRzXCI6W119LFxuICBcbiAgICB7XCJuYW1lXCI6XCJnaXRodWJcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9lbGVtZW50cy9idXR0b24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvZWxlbWVudHMvaWNvbi5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9lbGVtZW50cy9pbnB1dC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9lbGVtZW50cy9sYWJlbC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9lbGVtZW50cy9zZWdtZW50Lm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2VsZW1lbnRzL3N0ZXAub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvY29sbGVjdGlvbnMvZm9ybS5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9jb2xsZWN0aW9ucy9tZW51Lm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2NvbGxlY3Rpb25zL21lc3NhZ2Uub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvbW9kdWxlcy9kcm9wZG93bi5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvZWxlbWVudHMvYnV0dG9uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2VsZW1lbnRzL2hlYWRlci52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9lbGVtZW50cy9pY29uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2VsZW1lbnRzL2ltYWdlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2VsZW1lbnRzL2lucHV0LnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2VsZW1lbnRzL2xhYmVsLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2VsZW1lbnRzL3NlZ21lbnQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvZWxlbWVudHMvc3RlcC52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9nbG9iYWxzL3NpdGUudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvY29sbGVjdGlvbnMvYnJlYWRjcnVtYi52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9jb2xsZWN0aW9ucy9mb3JtLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2NvbGxlY3Rpb25zL2dyaWQudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvY29sbGVjdGlvbnMvbWVudS52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9jb2xsZWN0aW9ucy9tZXNzYWdlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2NvbGxlY3Rpb25zL3RhYmxlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL21vZHVsZXMvZHJvcGRvd24udmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvbW9kdWxlcy9wb3B1cC52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl0sXCJhc3NldHNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvYXNzZXRzL2ZvbnRzL29jdGljb25zLWxvY2FsLnR0ZlwiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ2l0aHViL2Fzc2V0cy9mb250cy9vY3RpY29ucy5zdmdcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL2dpdGh1Yi9hc3NldHMvZm9udHMvb2N0aWNvbnMudHRmXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9naXRodWIvYXNzZXRzL2ZvbnRzL29jdGljb25zLndvZmZcIl19LFxuICBcbiAgICB7XCJuYW1lXCI6XCJnbWFpbFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvZ21haWwvY29sbGVjdGlvbnMvbWVzc2FnZS5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9nbWFpbC9jb2xsZWN0aW9ucy9tZXNzYWdlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiaW5zdGFncmFtXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9pbnN0YWdyYW0vdmlld3MvY2FyZC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9pbnN0YWdyYW0vdmlld3MvY2FyZC52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl0sXCJhc3NldHNcIjpbXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcIm1hdGVyaWFsXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9tYXRlcmlhbC9jb2xsZWN0aW9ucy9tZW51Lm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvbWF0ZXJpYWwvZ2xvYmFscy9zaXRlLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvbWF0ZXJpYWwvZWxlbWVudHMvYnV0dG9uLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvbWF0ZXJpYWwvZWxlbWVudHMvaGVhZGVyLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvbWF0ZXJpYWwvZWxlbWVudHMvaWNvbi5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL21hdGVyaWFsL21vZHVsZXMvZHJvcGRvd24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9tYXRlcmlhbC9tb2R1bGVzL21vZGFsLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL21hdGVyaWFsL2NvbGxlY3Rpb25zL21lbnUudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9tYXRlcmlhbC9nbG9iYWxzL3NpdGUudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9tYXRlcmlhbC9lbGVtZW50cy9idXR0b24udmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9tYXRlcmlhbC9lbGVtZW50cy9oZWFkZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9tYXRlcmlhbC9lbGVtZW50cy9pY29uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvbWF0ZXJpYWwvbW9kdWxlcy9kcm9wZG93bi52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIixcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL21hdGVyaWFsL21vZHVsZXMvbW9kYWwudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdLFwiYXNzZXRzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvbWF0ZXJpYWwvYXNzZXRzL2ZvbnRzL2ljb25zLmVvdFwiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvbWF0ZXJpYWwvYXNzZXRzL2ZvbnRzL2ljb25zLnN2Z1wiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvbWF0ZXJpYWwvYXNzZXRzL2ZvbnRzL2ljb25zLnR0ZlwiLFwibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvbWF0ZXJpYWwvYXNzZXRzL2ZvbnRzL2ljb25zLndvZmZcIl19LFxuICBcbiAgICB7XCJuYW1lXCI6XCJmbGF0XCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9mbGF0L2NvbGxlY3Rpb25zL2Zvcm0ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9mbGF0L2dsb2JhbHMvc2l0ZS5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9mbGF0L2NvbGxlY3Rpb25zL2Zvcm0udmFyaWFibGVzLmltcG9ydC5sZXNzXCIsXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9mbGF0L2dsb2JhbHMvc2l0ZS52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl0sXCJhc3NldHNcIjpbXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcInJhaXNlZFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvcmFpc2VkL2VsZW1lbnRzL2J1dHRvbi5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9yYWlzZWQvZWxlbWVudHMvYnV0dG9uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltdfSxcbiAgXG4gICAge1wibmFtZVwiOlwicmVzZXRjc3NcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL3Jlc2V0Y3NzL2dsb2JhbHMvcmVzZXQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvcmVzZXRjc3MvZ2xvYmFscy9yZXNldC52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl0sXCJhc3NldHNcIjpbXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcInB1bHNhclwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvcHVsc2FyL2VsZW1lbnRzL2xvYWRlci5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9wdWxzYXIvZWxlbWVudHMvbG9hZGVyLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltdfSxcbiAgXG4gICAge1wibmFtZVwiOlwicm91bmRcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL3JvdW5kL2VsZW1lbnRzL2J1dHRvbi5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9yb3VuZC9lbGVtZW50cy9idXR0b24udmFyaWFibGVzLmltcG9ydC5sZXNzXCJdLFwiYXNzZXRzXCI6W119LFxuICBcbiAgICB7XCJuYW1lXCI6XCJzdHJpcGVkXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9zdHJpcGVkL21vZHVsZXMvcHJvZ3Jlc3Mub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvc3RyaXBlZC9tb2R1bGVzL3Byb2dyZXNzLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltdfSxcbiAgXG4gICAge1wibmFtZVwiOlwicnRsXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy9ydGwvZ2xvYmFscy9zaXRlLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWVzL3J0bC9nbG9iYWxzL3NpdGUudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdLFwiYXNzZXRzXCI6W119LFxuICBcbiAgICB7XCJuYW1lXCI6XCJ0aW1lbGluZVwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvdGltZWxpbmUvdmlld3MvZmVlZC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lcy90aW1lbGluZS92aWV3cy9mZWVkLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXSxcImFzc2V0c1wiOltdfSxcbiAgXG4gICAge1wibmFtZVwiOlwidHdpdHRlclwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvdHdpdHRlci9lbGVtZW50cy9idXR0b24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy90aGVtZXMvdHdpdHRlci9lbGVtZW50cy9idXR0b24udmFyaWFibGVzLmltcG9ydC5sZXNzXCJdLFwiYXNzZXRzXCI6W119LFxuICBcbl07XG5cbnRoZW1lc0RhdGEuZXhpc3RzID0gZnVuY3Rpb24obmFtZSkge1xuICB2YXIgc2FtZU5hbWUgPSBmdW5jdGlvbih0aGVtZSkge1xuICAgIHJldHVybiB0aGVtZS5uYW1lID09IG5hbWU7XG4gIH07XG4gIHJldHVybiBfLmlzVW5kZWZpbmVkKF8uZmluZCh0aGlzLmRhdGEsIHNhbWVOYW1lKSkgPyBmYWxzZSA6IHRydWU7XG59O1xuXG50aGVtZXNEYXRhLm92ZXJyaWRlc0ZpbGVQYXRocyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gZmlsZVBhdGhzKHRoaXMuZGF0YSwgJ292ZXJyaWRlcycpO1xufTtcblxudGhlbWVzRGF0YS52YXJpYWJsZXNGaWxlUGF0aHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGZpbGVQYXRocyh0aGlzLmRhdGEsICd2YXJpYWJsZXMnKTtcbn07XG5cbnRoZW1lc0RhdGEuYXNzZXRzRmlsZVBhdGhzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBmaWxlUGF0aHModGhpcy5kYXRhLCAnYXNzZXRzJyk7XG59O1xuXG52YXIgZmlsZVBhdGhzID0gZnVuY3Rpb24odGhlbWVzLCBwcm9wZXJ0eSkge1xuICB2YXIgdGhlbWVXaXRoUHJvcGVydHkgPSBfLmZpbHRlcih0aGVtZXMsIGZ1bmN0aW9uKHRoZW1lKSB7XG4gICAgcmV0dXJuIHRoZW1lW3Byb3BlcnR5XTtcbiAgfSk7XG4gIHJldHVybiBfLnJlZHVjZSh0aGVtZVdpdGhQcm9wZXJ0eSwgZnVuY3Rpb24ocmVzdWx0LCB0aGVtZSkge1xuICAgIHJldHVybiByZXN1bHQuY29uY2F0KHRoZW1lW3Byb3BlcnR5XSk7XG4gIH0sIFtdKTtcbn07XG5cbnRoZW1lc0RhdGEudGhlbWVDb25maWdGaWxlID0gJ2xpYi9zZW1hbnRpYy11aS9zcmMvdGhlbWUuY29uZmlnLmltcG9ydC5sZXNzJztcbnRoZW1lc0RhdGEudGhlbWVMZXNzRmlsZSA9ICdsaWIvc2VtYW50aWMtdWkvc3JjL3RoZW1lLmltcG9ydC5sZXNzJztcblxuc2VtYW50aWNVaVBhY2thZ2UudGhlbWVzRGF0YSA9IHRoZW1lc0RhdGE7XG4iLCIvKlxuICBETyBOT1QgTU9ESUZZIC0gVGhpcyBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCBieSBodHRwczovL2dpdGh1Yi5jb20vZmxlbWF5L1NlbWFudGljLVVJLU1ldGVvcml6ZVxuKi9cblxudmFyIF8gPSBOcG0ucmVxdWlyZSgnbG9kYXNoJyk7XG5cbnZhciBzaXRlc0RhdGEgPSB7fTtcblxuc2l0ZXNEYXRhLmRhdGEgPSBbXG4gIFxuICAgIHtcIm5hbWVcIjpcImJyZWFkY3J1bWJcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9icmVhZGNydW1iLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9icmVhZGNydW1iLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImZvcm1cIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9mb3JtLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9mb3JtLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImdyaWRcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9ncmlkLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9ncmlkLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcIm1lbnVcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9tZW51Lm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9tZW51LnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcIm1lc3NhZ2VcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9tZXNzYWdlLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9jb2xsZWN0aW9ucy9tZXNzYWdlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcInRhYmxlXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvY29sbGVjdGlvbnMvdGFibGUub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2NvbGxlY3Rpb25zL3RhYmxlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcInJlc2V0XCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZ2xvYmFscy9yZXNldC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZ2xvYmFscy9yZXNldC52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl19LFxuICBcbiAgICB7XCJuYW1lXCI6XCJzaXRlXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZ2xvYmFscy9zaXRlLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9nbG9iYWxzL3NpdGUudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiYnV0dG9uXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZWxlbWVudHMvYnV0dG9uLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9lbGVtZW50cy9idXR0b24udmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiY29udGFpbmVyXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZWxlbWVudHMvY29udGFpbmVyLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9lbGVtZW50cy9jb250YWluZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiZGl2aWRlclwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL2RpdmlkZXIub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL2RpdmlkZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiZmxhZ1wiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL2ZsYWcub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL2ZsYWcudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiaGVhZGVyXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZWxlbWVudHMvaGVhZGVyLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9lbGVtZW50cy9oZWFkZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiaWNvblwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL2ljb24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL2ljb24udmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiaW1hZ2VcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9lbGVtZW50cy9pbWFnZS5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZWxlbWVudHMvaW1hZ2UudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiaW5wdXRcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9lbGVtZW50cy9pbnB1dC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZWxlbWVudHMvaW5wdXQudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwibGFiZWxcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9lbGVtZW50cy9sYWJlbC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZWxlbWVudHMvbGFiZWwudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwibGlzdFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL2xpc3Qub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL2xpc3QudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwibG9hZGVyXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZWxlbWVudHMvbG9hZGVyLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9lbGVtZW50cy9sb2FkZXIudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwicmFpbFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL3JhaWwub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL3JhaWwudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwicmV2ZWFsXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvZWxlbWVudHMvcmV2ZWFsLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9lbGVtZW50cy9yZXZlYWwudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwic2VnbWVudFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL3NlZ21lbnQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL3NlZ21lbnQudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwic3RlcFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL3N0ZXAub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL2VsZW1lbnRzL3N0ZXAudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiYWRcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS92aWV3cy9hZC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvdmlld3MvYWQudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiY2FyZFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL3ZpZXdzL2NhcmQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL3ZpZXdzL2NhcmQudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiY29tbWVudFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL3ZpZXdzL2NvbW1lbnQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL3ZpZXdzL2NvbW1lbnQudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiZmVlZFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL3ZpZXdzL2ZlZWQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL3ZpZXdzL2ZlZWQudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiaXRlbVwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL3ZpZXdzL2l0ZW0ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL3ZpZXdzL2l0ZW0udmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwic3RhdGlzdGljXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvdmlld3Mvc3RhdGlzdGljLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS92aWV3cy9zdGF0aXN0aWMudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiYWNjb3JkaW9uXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvbW9kdWxlcy9hY2NvcmRpb24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvYWNjb3JkaW9uLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImNoYXRyb29tXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvbW9kdWxlcy9jaGF0cm9vbS5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvbW9kdWxlcy9jaGF0cm9vbS52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl19LFxuICBcbiAgICB7XCJuYW1lXCI6XCJjaGVja2JveFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvY2hlY2tib3gub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvY2hlY2tib3gudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwiZGltbWVyXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvbW9kdWxlcy9kaW1tZXIub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvZGltbWVyLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcImRyb3Bkb3duXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvbW9kdWxlcy9kcm9wZG93bi5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvbW9kdWxlcy9kcm9wZG93bi52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl19LFxuICBcbiAgICB7XCJuYW1lXCI6XCJlbWJlZFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvZW1iZWQub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvZW1iZWQudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwibW9kYWxcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL21vZGFsLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL21vZGFsLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcIm5hZ1wiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvbmFnLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL25hZy52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl19LFxuICBcbiAgICB7XCJuYW1lXCI6XCJwb3B1cFwiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvcG9wdXAub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvcG9wdXAudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwicHJvZ3Jlc3NcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL3Byb2dyZXNzLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL3Byb2dyZXNzLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcInJhdGluZ1wiLFwib3ZlcnJpZGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvcmF0aW5nLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL3JhdGluZy52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl19LFxuICBcbiAgICB7XCJuYW1lXCI6XCJzZWFyY2hcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL3NlYXJjaC5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvbW9kdWxlcy9zZWFyY2gudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwic2hhcGVcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL3NoYXBlLm92ZXJyaWRlcy5pbXBvcnQubGVzc1wiXSxcInZhcmlhYmxlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL3NoYXBlLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcInNpZGViYXJcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL3NpZGViYXIub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvc2lkZWJhci52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl19LFxuICBcbiAgICB7XCJuYW1lXCI6XCJzdGlja3lcIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL3N0aWNreS5vdmVycmlkZXMuaW1wb3J0Lmxlc3NcIl0sXCJ2YXJpYWJsZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvbW9kdWxlcy9zdGlja3kudmFyaWFibGVzLmltcG9ydC5sZXNzXCJdfSxcbiAgXG4gICAge1wibmFtZVwiOlwidGFiXCIsXCJvdmVycmlkZXNcIjpbXCJsaWIvc2VtYW50aWMtdWkvc3JjL3NpdGUvbW9kdWxlcy90YWIub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvdGFiLnZhcmlhYmxlcy5pbXBvcnQubGVzc1wiXX0sXG4gIFxuICAgIHtcIm5hbWVcIjpcInRyYW5zaXRpb25cIixcIm92ZXJyaWRlc1wiOltcImxpYi9zZW1hbnRpYy11aS9zcmMvc2l0ZS9tb2R1bGVzL3RyYW5zaXRpb24ub3ZlcnJpZGVzLmltcG9ydC5sZXNzXCJdLFwidmFyaWFibGVzXCI6W1wibGliL3NlbWFudGljLXVpL3NyYy9zaXRlL21vZHVsZXMvdHJhbnNpdGlvbi52YXJpYWJsZXMuaW1wb3J0Lmxlc3NcIl19LFxuICBcbl07XG5cbnNpdGVzRGF0YS5nZXQgPSBmdW5jdGlvbihuYW1lKSB7XG4gIF8uZmluZCh0aGlzLmRhdGEsIGZ1bmN0aW9uKHMpIHtcbiAgICByZXR1cm4gcy5uYW1lID09PSBuYW1lO1xuICB9KTtcbn07XG5cbnNpdGVzRGF0YS5vdmVycmlkZXNGaWxlUGF0aHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGZpbGVQYXRocyh0aGlzLmRhdGEsICdvdmVycmlkZXMnKTtcbn07XG5cbnNpdGVzRGF0YS52YXJpYWJsZXNGaWxlUGF0aHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGZpbGVQYXRocyh0aGlzLmRhdGEsICd2YXJpYWJsZXMnKTtcbn07XG5cbnZhciBmaWxlUGF0aHMgPSBmdW5jdGlvbih0aGVtZXMsIHByb3BlcnR5KSB7XG4gIHZhciB0aGVtZVdpdGhQcm9wZXJ0eSA9IF8uZmlsdGVyKHRoZW1lcywgZnVuY3Rpb24odGhlbWUpIHtcbiAgICByZXR1cm4gdGhlbWVbcHJvcGVydHldO1xuICB9KTtcbiAgcmV0dXJuIF8ucmVkdWNlKHRoZW1lV2l0aFByb3BlcnR5LCBmdW5jdGlvbihyZXN1bHQsIHRoZW1lKSB7XG4gICAgcmV0dXJuIHJlc3VsdC5jb25jYXQodGhlbWVbcHJvcGVydHldKTtcbiAgfSwgW10pO1xufTtcblxuc2VtYW50aWNVaVBhY2thZ2Uuc2l0ZXNEYXRhID0gc2l0ZXNEYXRhO1xuIiwidmFyIF8gPSBOcG0ucmVxdWlyZSgnbG9kYXNoJyk7XG5cbnZhciBjdXN0b21TZW1hbnRpY0RhdGEgPSB7fTtcbmN1c3RvbVNlbWFudGljRGF0YS5kYXRhID0ge307XG5cbmN1c3RvbVNlbWFudGljRGF0YS5maWx0ZXJEZWZpbml0aW9ucyA9IGZ1bmN0aW9uKHN0cmluZ3MsIG1hdGNoZXJGdW5jKSB7XG4gIHJldHVybiBmaWx0ZXIodGhpcy5yZXF1aXJlZERlZmluaXRpb25zTmFtZXMoKSwgc3RyaW5ncywgbWF0Y2hlckZ1bmMpO1xufTtcblxuY3VzdG9tU2VtYW50aWNEYXRhLnJlcXVpcmVkRGVmaW5pdGlvbnNOYW1lcyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgZGVmaW5pdGlvbnNOYW1lcyA9IF8ua2V5cyh0aGlzLmRhdGEuZGVmaW5pdGlvbnMpO1xuICB2YXIgdGhhdCA9IHRoaXM7XG4gIHJldHVybiBfLmZpbHRlcihkZWZpbml0aW9uc05hbWVzLCBmdW5jdGlvbihuYW1lKSB7XG4gICAgcmV0dXJuIHRoYXQuZGF0YS5kZWZpbml0aW9uc1tuYW1lXTtcbiAgfSk7XG59O1xuXG5jdXN0b21TZW1hbnRpY0RhdGEuZmlsdGVyVGhlbWVzID0gZnVuY3Rpb24oc3RyaW5ncywgbWF0Y2hlckZ1bmMpIHtcbiAgcmV0dXJuIGZpbHRlcih0aGlzLnJlcXVpcmVkVGhlbWVzTmFtZXMoKSwgc3RyaW5ncywgbWF0Y2hlckZ1bmMpO1xufTtcblxuLyoqXG4gIGZpbHRlciByZXR1cm5zIHRoZSBzdHJpbmdzIHRoYXQgbWF0Y2ggXFxXbmFtZVxcVyBvciB0aGUgcHJvdmlkZWQgbWF0Y2hlciBmdW5jdGlvbi5cbiovXG52YXIgZmlsdGVyID0gZnVuY3Rpb24obmFtZXMsIHN0cmluZ3MsIG1hdGNoZXJGdW5jKSB7XG4gIHJldHVybiBfLmZpbHRlcihzdHJpbmdzLCBmdW5jdGlvbihzKSB7XG4gICAgdmFyIG1hdGNoID0gXy5maW5kKG5hbWVzLCBmdW5jdGlvbihuYW1lKSB7XG4gICAgICBpZiAobWF0Y2hlckZ1bmMpIHtcbiAgICAgICAgcmV0dXJuIG1hdGNoZXJGdW5jKHMsIG5hbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cChcIlxcXFxXXCIgKyBuYW1lICsgXCJcXFxcV1wiLCAnZycpO1xuICAgICAgICByZXR1cm4gcy5tYXRjaChyZWdleCkgIT09IG51bGw7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG1hdGNoO1xuICB9KTtcbn07XG5cbmN1c3RvbVNlbWFudGljRGF0YS5yZXF1aXJlZFRoZW1lc05hbWVzID0gZnVuY3Rpb24oKSB7XG4gIHZhciB0aGVtZXNOYW1lcyA9IF8ua2V5cyh0aGlzLmRhdGEudGhlbWVzKTtcbiAgdmFyIHRoYXQgPSB0aGlzO1xuICByZXR1cm4gXy5maWx0ZXIodGhlbWVzTmFtZXMsIGZ1bmN0aW9uKG5hbWUpIHtcbiAgICByZXR1cm4gdGhhdC5kYXRhLnRoZW1lc1tuYW1lXTtcbiAgfSk7XG59O1xuXG5jdXN0b21TZW1hbnRpY0RhdGEudmFsaWRhdGUgPSBmdW5jdGlvbihkZWZpbml0aW9uc0RhdGEsIHRoZW1lc0RhdGEpIHtcbiAgdmFyIHRocm93RXJyb3IgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdkZWZpbml0aW9uL3RoZW1lIFwiJyArIG5hbWUgKyAnXCJcIiBkb2VzIG5vdCBleGlzdC4gUGxlYXNlIHVwZGF0ZSB5b3VyIGN1c3RvbS5zZW1hbnRpYy5qc29uIGZpbGUuJyk7XG4gIH07XG4gIF8uZWFjaChfLmtleXModGhpcy5kYXRhLmRlZmluaXRpb25zKSwgZnVuY3Rpb24oZGVmaW5pdGlvbk5hbWUpIHtcbiAgICBpZiAoIWRlZmluaXRpb25zRGF0YS5leGlzdHMoZGVmaW5pdGlvbk5hbWUpKSB7XG4gICAgICB0aHJvd0Vycm9yKGRlZmluaXRpb25OYW1lKTtcbiAgICB9XG4gIH0pO1xuICBfLmVhY2goXy5rZXlzKHRoaXMuZGF0YS50aGVtZXMpLCBmdW5jdGlvbih0aGVtZU5hbWUpIHtcbiAgICBpZiAoIXRoZW1lc0RhdGEuZXhpc3RzKHRoZW1lTmFtZSkpIHtcbiAgICAgIHRocm93RXJyb3IodGhlbWVOYW1lKTtcbiAgICB9XG4gIH0pO1xufTtcblxuc2VtYW50aWNVaVBhY2thZ2UuY3VzdG9tU2VtYW50aWNEYXRhID0gY3VzdG9tU2VtYW50aWNEYXRhO1xuIiwidmFyIF8gPSBOcG0ucmVxdWlyZSgnbG9kYXNoJyk7XG52YXIgZnMgPSBOcG0ucmVxdWlyZSgnZnMnKTtcbnZhciBwYXRoID0gTnBtLnJlcXVpcmUoJ3BhdGgnKTtcblxuZmlsZUhhbmRsZXIgPSB7fTtcblxuZmlsZUhhbmRsZXIuZ2V0VGV4dEZpbGVDb250ZW50cyA9IGZ1bmN0aW9uKHBhdGhzKSB7XG4gIHZhciBjb250ZW50cyA9IFtdO1xuICBfLmVhY2gocGF0aHMsIGZ1bmN0aW9uKHBhdGgpIHtcbiAgICAgY29udGVudHMucHVzaChzZW1hbnRpY1VpRGF0YVBhY2thZ2UuZ2V0VGV4dEZpbGUocGF0aCkpO1xuICB9KTtcbiAgcmV0dXJuIGNvbnRlbnRzO1xufTtcblxuZmlsZUhhbmRsZXIuZ2V0VGV4dEZpbGUgPSBmdW5jdGlvbihwYXRoKSB7XG4gIHJldHVybiBzZW1hbnRpY1VpRGF0YVBhY2thZ2UuZ2V0VGV4dEZpbGUocGF0aCk7XG59O1xuXG5maWxlSGFuZGxlci5nZXRCaW5hcnlGaWxlID0gZnVuY3Rpb24ocGF0aCkge1xuICByZXR1cm4gc2VtYW50aWNVaURhdGFQYWNrYWdlLmdldEJpbmFyeUZpbGUocGF0aCk7XG59O1xuXG5maWxlSGFuZGxlci5nZXRCaW5hcnlGaWxlQnVmZmVyID0gZnVuY3Rpb24ocGF0aCkge1xuICB2YXIgYmluYXJ5Q29udGVudCA9IHNlbWFudGljVWlEYXRhUGFja2FnZS5nZXRCaW5hcnlGaWxlKHBhdGgpO1xuICByZXR1cm4gbmV3IEJ1ZmZlcihiaW5hcnlDb250ZW50KTtcbn07XG5cbmZpbGVIYW5kbGVyLmZpbGVFeGlzdHMgPSBmdW5jdGlvbihiYXNlUGF0aCwgcmVsYXRpdmVQYXRoKSB7XG4gIHZhciBmaWxlID0gcGF0aC5qb2luKGJhc2VQYXRoLCByZWxhdGl2ZVBhdGgpO1xuICByZXR1cm4gZnMuZXhpc3RzU3luYyhmaWxlKTtcbn07XG5cbmZpbGVIYW5kbGVyLnJlYWRUZXh0RmlsZSA9IGZ1bmN0aW9uKGJhc2VQYXRoLCByZWxhdGl2ZVBhdGgpIHtcbiAgdmFyIGZpbGUgPSBwYXRoLmpvaW4oYmFzZVBhdGgsIHJlbGF0aXZlUGF0aCk7XG4gIHJldHVybiBmcy5yZWFkRmlsZVN5bmMoZmlsZSwgeyBlbmNvZGluZzogJ3V0ZjgnIH0pO1xufTtcblxuZmlsZUhhbmRsZXIuY3JlYXRlRGlyID0gZnVuY3Rpb24oYmFzZVBhdGgsIHJlbGF0aXZlUGF0aCkge1xuICB2YXIgc3BsaXRlZFBhdGggPSByZWxhdGl2ZVBhdGguc3BsaXQoJy8nKTtcbiAgXy5yZWR1Y2Uoc3BsaXRlZFBhdGgsIGZ1bmN0aW9uKHJlc3VsdFBhdGgsIHBhcnRQYXRoKSB7XG4gICAgcmVzdWx0UGF0aCA9IHBhdGguam9pbihyZXN1bHRQYXRoLCBwYXJ0UGF0aCk7XG4gICAgaWYgKCFmcy5leGlzdHNTeW5jKHJlc3VsdFBhdGgpKSB7XG4gICAgICBmcy5ta2RpclN5bmMocmVzdWx0UGF0aCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRQYXRoO1xuICB9LCBiYXNlUGF0aCk7XG59O1xuXG5maWxlSGFuZGxlci53cml0ZVRleHRGaWxlID0gZnVuY3Rpb24oYmFzZVBhdGgsIHJlbGF0aXZlRmlsZVBhdGgsIGNvbnRlbnQpIHtcbiAgZmlsZUhhbmRsZXIuY3JlYXRlRGlyKGJhc2VQYXRoLCBwYXRoLmRpcm5hbWUocmVsYXRpdmVGaWxlUGF0aCkpO1xuICBmcy53cml0ZUZpbGVTeW5jKHBhdGguam9pbihiYXNlUGF0aCwgcmVsYXRpdmVGaWxlUGF0aCksIGNvbnRlbnQsIHsgZW5jb2Rpbmc6ICd1dGY4JyB9KTtcbn07XG5cbmZpbGVIYW5kbGVyLndyaXRlVGV4dEZpbGVGcm9tQ29udGVudHMgPSBmdW5jdGlvbihiYXNlUGF0aCwgcmVsYXRpdmVGaWxlUGF0aCwgY29udGVudHMpIHtcbiAgZmlsZUhhbmRsZXIuY3JlYXRlRGlyKGJhc2VQYXRoLCBwYXRoLmRpcm5hbWUocmVsYXRpdmVGaWxlUGF0aCkpO1xuICBmcy53cml0ZUZpbGVTeW5jKHBhdGguam9pbihiYXNlUGF0aCwgcmVsYXRpdmVGaWxlUGF0aCksIGNvbnRlbnRzLmpvaW4oJ1xcbicpLCB7IGVuY29kaW5nOiAndXRmOCcgfSk7XG59O1xuXG5maWxlSGFuZGxlci53cml0ZUJpbmFyeUZpbGUgPSBmdW5jdGlvbihiYXNlUGF0aCwgcmVsYXRpdmVGaWxlUGF0aCwgYmluYXJ5Q29udGVudCkge1xuICBmaWxlSGFuZGxlci5jcmVhdGVEaXIocGF0aC5kaXJuYW1lKHJlbGF0aXZlRmlsZVBhdGgpKTtcbiAgdmFyIGJ1ZmZlciA9IG5ldyBCdWZmZXIoYmluYXJ5Q29udGVudCk7XG4gIHZhciB3c3RyZWFtID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0ocGF0aC5qb2luKGJhc2VQYXRoLCByZWxhdGl2ZUZpbGVQYXRoKSk7XG4gIHdzdHJlYW0ud3JpdGUoYnVmZmVyKTtcbiAgd3N0cmVhbS5lbmQoKTtcbn07XG5cbmZpbGVIYW5kbGVyLnJlbW92ZUZpbGUgPSBmdW5jdGlvbihmaWxlUGF0aCkge1xuICBpZiAoIWZzLmV4aXN0c1N5bmMoZmlsZVBhdGgpKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGZzLnVubGlua1N5bmMoZmlsZVBhdGgpO1xufTtcblxuZmlsZUhhbmRsZXIucmVtb3ZlRGlyID0gZnVuY3Rpb24oZGlyUGF0aCkge1xuICBpZiAoIWZzLmV4aXN0c1N5bmMoZGlyUGF0aCkpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZmlsZXNUb0RlbGV0ZSA9IGZzLnJlYWRkaXJTeW5jKGRpclBhdGgpO1xuICBfLmVhY2goZmlsZXNUb0RlbGV0ZSwgZnVuY3Rpb24oZikge1xuICAgIHZhciBmaWxlUGF0aCA9IHBhdGguam9pbihkaXJQYXRoLCBmKTtcbiAgICBpZiAoZnMuc3RhdFN5bmMoZmlsZVBhdGgpLmlzRGlyZWN0b3J5KCkpIHtcbiAgICAgIGZpbGVIYW5kbGVyLnJlbW92ZURpcihmaWxlUGF0aCk7XG4gICAgfSBlbHNlIGlmIChmcy5zdGF0U3luYyhmaWxlUGF0aCkuaXNGaWxlKCkpIHtcbiAgICAgIGZpbGVIYW5kbGVyLnJlbW92ZUZpbGUoZmlsZVBhdGgpO1xuICAgIH1cbiAgfSk7XG4gIGZzLnJtZGlyU3luYyhkaXJQYXRoKTtcbn07XG4iLCJ2YXIgXyA9IE5wbS5yZXF1aXJlKCdsb2Rhc2gnKTtcbnZhciBwYXRoID0gTnBtLnJlcXVpcmUoJ3BhdGgnKTtcbnZhciBmcyA9IE5wbS5yZXF1aXJlKCdmcycpO1xuXG5kZWZpbml0aW9uc0dlbmVyYXRvciA9IHt9O1xuLyoqXG4gIEdlbmVyYXRlcyB0aGUgZGVmaW5pdGlvbnMgZm9sZGVyLlxuKi9cbmRlZmluaXRpb25zR2VuZXJhdG9yLmdlbmVyYXRlID0gZnVuY3Rpb24oYmFzZVBhdGgsIGN1c3RvbVNlbWFudGljRGF0YSwgZGVmaW5pdGlvbnNEYXRhKSB7XG4gIGNsZWFuVXAoYmFzZVBhdGgpO1xuICB2YXIgZGVmaW5pdGlvbnNmaWxlcyA9IHJlcXVpcmVkRGVmaW5pdGlvbnNmaWxlcyhkZWZpbml0aW9uc0RhdGEsIGN1c3RvbVNlbWFudGljRGF0YSk7XG4gIHZhciBmaWxlcyA9IGRlZmluaXRpb25zZmlsZXMubGVzcy5jb25jYXQoZGVmaW5pdGlvbnNmaWxlcy5qcyk7XG4gIF8uZWFjaChmaWxlcywgZnVuY3Rpb24oZmlsZVBhdGgpIHtcbiAgICBjcmVhdGVEZWZpbml0aW9uc0ZpbGUoZmlsZVBhdGgsIGJhc2VQYXRoKTtcbiAgfSk7XG4gIGNyZWF0ZVNlbWFudGljTGVzc0ZpbGUoYmFzZVBhdGgsIGN1c3RvbVNlbWFudGljRGF0YSk7XG59O1xuXG52YXIgY2xlYW5VcCA9IGZ1bmN0aW9uKGJhc2VQYXRoKSB7XG4gIGZpbGVIYW5kbGVyLnJlbW92ZURpcihwYXRoLmpvaW4oYmFzZVBhdGgsICdkZWZpbml0aW9ucycpKTtcbiAgZmlsZUhhbmRsZXIucmVtb3ZlRmlsZShwYXRoLmpvaW4oYmFzZVBhdGgsICdzZW1hbnRpYy5sZXNzJykpO1xufTtcblxudmFyIGNyZWF0ZVNlbWFudGljTGVzc0ZpbGUgPSBmdW5jdGlvbihiYXNlUGF0aCwgY3VzdG9tU2VtYW50aWNEYXRhKSB7XG4gIHZhciBmaWxlID0gZmlsZUhhbmRsZXIuZ2V0VGV4dEZpbGUoc2VtYW50aWNVaVBhY2thZ2UuZGVmaW5pdGlvbnNEYXRhLnNlbWFudGljTGVzc0ZpbGUpO1xuICB2YXIgbGluZXMgPSBmaWxlLnNwbGl0KCdcXG4nKTtcbiAgdmFyIG5ld0xpbmVzID0gW107XG4gIHZhciBkZWZpbml0aW9uc05hbWVzID0gY3VzdG9tU2VtYW50aWNEYXRhLnJlcXVpcmVkRGVmaW5pdGlvbnNOYW1lcygpO1xuICBfLmVhY2gobGluZXMsIGZ1bmN0aW9uKGwpIHtcbiAgICBpZiAobC5tYXRjaCgvQGltcG9ydC8pKSB7XG4gICAgICB2YXIgbWF0Y2hlZERlZmluaXRpb25OYW1lID0gXy5maW5kKGRlZmluaXRpb25zTmFtZXMsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGwuc2VhcmNoKFwiL1wiICsgZCArIFwiLlwiKSAhPSAtMTtcbiAgICAgIH0pO1xuICAgICAgaWYgKG1hdGNoZWREZWZpbml0aW9uTmFtZSkge1xuICAgICAgICBuZXdMaW5lcy5wdXNoKGwpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBuZXdMaW5lcy5wdXNoKGwpO1xuICAgIH1cbiAgfSk7XG4gIGZpbGVIYW5kbGVyLndyaXRlVGV4dEZpbGUoYmFzZVBhdGgsICdzZW1hbnRpYy5sZXNzJywgbmV3TGluZXMuam9pbignXFxuJykpO1xufTtcblxudmFyIGNyZWF0ZURlZmluaXRpb25zRmlsZSA9IGZ1bmN0aW9uKHNvdXJjZVBhdGgsIGJhc2VQYXRoKSB7XG4gIHZhciBjb250ZW50ID0gZmlsZUhhbmRsZXIuZ2V0VGV4dEZpbGUoc291cmNlUGF0aCk7XG4gIHZhciByZWxhdGl2ZVBhdGggPSBzb3VyY2VQYXRoLm1hdGNoKC9kZWZpbml0aW9uc1xcLy4rLylbMF07XG4gIGZpbGVIYW5kbGVyLndyaXRlVGV4dEZpbGUoYmFzZVBhdGgsIHJlbGF0aXZlUGF0aCwgY29udGVudCk7XG59O1xuXG52YXIgcmVxdWlyZWREZWZpbml0aW9uc2ZpbGVzID0gZnVuY3Rpb24oZGVmaW5pdGlvbnNEYXRhLCBjdXN0b21TZW1hbnRpY0RhdGEpIHtcbiAgdmFyIGZpbGVzID0ge307XG4gIGZpbGVzLmxlc3MgPSBjdXN0b21TZW1hbnRpY0RhdGEuZmlsdGVyRGVmaW5pdGlvbnMoZGVmaW5pdGlvbnNEYXRhLmxlc3NGaWxlUGF0aHMoKSk7XG4gIGZpbGVzLmpzID0gY3VzdG9tU2VtYW50aWNEYXRhLmZpbHRlckRlZmluaXRpb25zKGRlZmluaXRpb25zRGF0YS5qc0ZpbGVQYXRocygpKTtcblxuICByZXR1cm4gZmlsZXM7XG59O1xuIiwidmFyIF8gPSBOcG0ucmVxdWlyZSgnbG9kYXNoJyk7XG52YXIgcGF0aCA9IE5wbS5yZXF1aXJlKCdwYXRoJyk7XG52YXIgZnMgPSBOcG0ucmVxdWlyZSgnZnMnKTtcblxudGhlbWVzR2VuZXJhdG9yID0ge307XG5cbi8qKlxuICBBbHdheXMgZ2VuZXJhdGVzIGFzc2V0cyBldmVyeXRpbWUgdGhlIHNlcnZlciByZXN0YXJ0cyBvciByZWZyZXNoZXNcbiovXG50aGVtZXNHZW5lcmF0b3IuZ2VuZXJhdGVBc3NldHMgPSBmdW5jdGlvbihiYXNlUGF0aCwgY3VzdG9tU2VtYW50aWNEYXRhLCB0aGVtZXNEYXRhLCBjdXN0b21Kc29uRmlsZSkge1xuICB2YXIgdGhlbWVzRmlsZXMgPSByZXF1aXJlZFRoZW1lc0ZpbGVzKHRoZW1lc0RhdGEsIGN1c3RvbVNlbWFudGljRGF0YSk7XG4gIGNyZWF0ZUFzc2V0RmlsZXMoY3VzdG9tSnNvbkZpbGUsIHRoZW1lc0ZpbGVzLmFzc2V0cyk7XG59O1xuXG4vKipcbiAgR2VuZXJhdGVzIHRoZSB0aGVtZXMgZm9sZGVyLlxuKi9cbnRoZW1lc0dlbmVyYXRvci5nZW5lcmF0ZSA9IGZ1bmN0aW9uKGJhc2VQYXRoLCBjdXN0b21TZW1hbnRpY0RhdGEsIHRoZW1lc0RhdGEpIHtcbiAgY2xlYW5VcChiYXNlUGF0aCk7XG5cbiAgdmFyIHRoZW1lc0ZpbGVzID0gcmVxdWlyZWRUaGVtZXNGaWxlcyh0aGVtZXNEYXRhLCBjdXN0b21TZW1hbnRpY0RhdGEpO1xuICB2YXIgZmlsZXMgPSB0aGVtZXNGaWxlcy5vdmVycmlkZXMuY29uY2F0KHRoZW1lc0ZpbGVzLnZhcmlhYmxlcyk7XG4gIF8uZWFjaChmaWxlcywgZnVuY3Rpb24oZmlsZVBhdGgpIHtcbiAgICBjcmVhdGVUaGVtZUZpbGUoZmlsZVBhdGgsIGJhc2VQYXRoKTtcbiAgfSk7XG4gIGNyZWF0ZVRoZW1lQ29uZmlnRmlsZShiYXNlUGF0aCwgdGhlbWVzRGF0YSk7XG4gIGNyZWF0ZVRoZW1lTGVzc0ZpbGUoYmFzZVBhdGgsIHRoZW1lc0RhdGEpO1xufTtcblxudmFyIGNsZWFuVXAgPSBmdW5jdGlvbihiYXNlUGF0aCkge1xuICBmaWxlSGFuZGxlci5yZW1vdmVEaXIocGF0aC5qb2luKGJhc2VQYXRoLCAndGhlbWVzJykpO1xuICBmaWxlSGFuZGxlci5yZW1vdmVGaWxlKHBhdGguam9pbihiYXNlUGF0aCwgJ3RoZW1lLmNvbmZpZycpKTtcbiAgZmlsZUhhbmRsZXIucmVtb3ZlRmlsZShwYXRoLmpvaW4oYmFzZVBhdGgsICd0aGVtZS5pbXBvcnQubGVzcycpKTtcbn07XG5cbnZhciBjcmVhdGVBc3NldEZpbGVzID0gZnVuY3Rpb24oY3VzdG9tSnNvbkZpbGUsIGFzc2V0c0ZpbGVzKSB7XG4gIF8uZWFjaChhc3NldHNGaWxlcywgZnVuY3Rpb24oZmlsZVBhdGgpIHtcbiAgICBjdXN0b21Kc29uRmlsZS5hZGRBc3NldCh7XG4gICAgICBwYXRoOiBmaWxlUGF0aCxcbiAgICAgIGRhdGE6IGZpbGVIYW5kbGVyLmdldEJpbmFyeUZpbGVCdWZmZXIoZmlsZVBhdGgpXG4gICAgfSk7XG4gIH0pO1xufTtcblxuLyoqXG4gIENyZWF0ZXMgdGhlIGZpbGUgdGhlbWUuY29uZmlnLmltcG9ydC5sZXNzIGlmIGl0IGRvZXMgbm90IGV4aXN0LlxuKi9cbnZhciBjcmVhdGVUaGVtZUNvbmZpZ0ZpbGUgPSBmdW5jdGlvbihiYXNlUGF0aCwgdGhlbWVzRGF0YSkge1xuICBpZiAoZnMuZXhpc3RzU3luYyhwYXRoLmpvaW4oYmFzZVBhdGgsICd0aGVtZS5jb25maWcuaW1wb3J0Lmxlc3MnKSkpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIGNvbmZpZyA9IGZpbGVIYW5kbGVyLmdldFRleHRGaWxlKHRoZW1lc0RhdGEudGhlbWVDb25maWdGaWxlKTtcbiAgZmlsZUhhbmRsZXIud3JpdGVUZXh0RmlsZShiYXNlUGF0aCwgJ3RoZW1lLmNvbmZpZy5pbXBvcnQubGVzcycsIGNvbmZpZyk7XG59O1xuXG52YXIgY3JlYXRlVGhlbWVMZXNzRmlsZSA9IGZ1bmN0aW9uKGJhc2VQYXRoLCB0aGVtZXNEYXRhKSB7XG4gIGZpbGVIYW5kbGVyLndyaXRlVGV4dEZpbGUoYmFzZVBhdGgsICd0aGVtZS5pbXBvcnQubGVzcycsIGZpbGVIYW5kbGVyLmdldFRleHRGaWxlKHRoZW1lc0RhdGEudGhlbWVMZXNzRmlsZSkpO1xufTtcblxudmFyIGNyZWF0ZVRoZW1lRmlsZSA9IGZ1bmN0aW9uKHNvdXJjZVBhdGgsIGJhc2VQYXRoKSB7XG4gIHZhciBjb250ZW50ID0gZmlsZUhhbmRsZXIuZ2V0VGV4dEZpbGUoc291cmNlUGF0aCk7XG4gIHZhciByZWxhdGl2ZVBhdGggPSBzb3VyY2VQYXRoLm1hdGNoKC90aGVtZXNcXC8uKy8pWzBdO1xuICBmaWxlSGFuZGxlci53cml0ZVRleHRGaWxlKGJhc2VQYXRoLCByZWxhdGl2ZVBhdGgsIGNvbnRlbnQpO1xufTtcblxudmFyIHJlcXVpcmVkVGhlbWVzRmlsZXMgPSBmdW5jdGlvbih0aGVtZXNEYXRhLCBjdXN0b21TZW1hbnRpY0RhdGEpIHtcbiAgdmFyIGZpbGVzID0ge307XG4gIGZpbGVzLm92ZXJyaWRlcyA9IHRoZW1lc0RhdGEub3ZlcnJpZGVzRmlsZVBhdGhzKCk7XG4gIGZpbGVzLnZhcmlhYmxlcyA9IHRoZW1lc0RhdGEudmFyaWFibGVzRmlsZVBhdGhzKCk7XG4gIGZpbGVzLmFzc2V0cyA9IHRoZW1lc0RhdGEuYXNzZXRzRmlsZVBhdGhzKCk7XG5cbiAgZmlsZXMub3ZlcnJpZGVzID0gY3VzdG9tU2VtYW50aWNEYXRhLmZpbHRlclRoZW1lcyhmaWxlcy5vdmVycmlkZXMpO1xuICBmaWxlcy52YXJpYWJsZXMgPSBjdXN0b21TZW1hbnRpY0RhdGEuZmlsdGVyVGhlbWVzKGZpbGVzLnZhcmlhYmxlcyk7XG4gIGZpbGVzLmFzc2V0cyA9IGN1c3RvbVNlbWFudGljRGF0YS5maWx0ZXJUaGVtZXMoZmlsZXMuYXNzZXRzKTtcblxuICBmaWxlcy5vdmVycmlkZXMgPSBjdXN0b21TZW1hbnRpY0RhdGEuZmlsdGVyRGVmaW5pdGlvbnMoZmlsZXMub3ZlcnJpZGVzKTtcbiAgZmlsZXMudmFyaWFibGVzID0gY3VzdG9tU2VtYW50aWNEYXRhLmZpbHRlckRlZmluaXRpb25zKGZpbGVzLnZhcmlhYmxlcyk7XG4gIGZpbGVzLmFzc2V0cyA9IGN1c3RvbVNlbWFudGljRGF0YS5maWx0ZXJEZWZpbml0aW9ucyhmaWxlcy5hc3NldHMsIGZ1bmN0aW9uKHN0cmluZywgbmFtZSkge1xuICAgIC8vIGljb24gYW5kIGZsYWcgaW4gYXNzZXRzIGVuZCB3aXRoIGEgJ3MnXG4gICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cChcIlxcXFxXXCIgKyBuYW1lICsgXCJcXFxcd1xcXFxXXCIsICdnJyk7XG4gICAgcmV0dXJuIHN0cmluZy5tYXRjaChyZWdleCkgIT09IG51bGw7XG4gIH0pO1xuICByZXR1cm4gZmlsZXM7XG59O1xuIiwidmFyIF8gPSBOcG0ucmVxdWlyZSgnbG9kYXNoJyk7XG52YXIgcGF0aCA9IE5wbS5yZXF1aXJlKCdwYXRoJyk7XG52YXIgZnMgPSBOcG0ucmVxdWlyZSgnZnMnKTtcblxuc2l0ZXNHZW5lcmF0b3IgPSB7fTtcblxuLyoqXG4gIEdlbmVyYXRlcyB0aGUgc2l0ZSBmb2xkZXIgaWYgaXQgZG9lcyBub3QgZXhpc3QuXG4qL1xuc2l0ZXNHZW5lcmF0b3IuZ2VuZXJhdGUgPSBmdW5jdGlvbihiYXNlUGF0aCwgY3VzdG9tU2VtYW50aWNEYXRhLCBzaXRlc0RhdGEpIHtcbiAgaWYgKGZzLmV4aXN0c1N5bmMocGF0aC5qb2luKGJhc2VQYXRoLCAnc2l0ZScpKSkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgc2l0ZXNGaWxlcyA9IHJlcXVpcmVTaXRlc0ZpbGVzKHNpdGVzRGF0YSwgY3VzdG9tU2VtYW50aWNEYXRhKTtcbiAgdmFyIGZpbGVzID0gc2l0ZXNGaWxlcy5vdmVycmlkZXMuY29uY2F0KHNpdGVzRmlsZXMudmFyaWFibGVzKTtcbiAgXy5lYWNoKGZpbGVzLCBmdW5jdGlvbihmaWxlUGF0aCkge1xuICAgIGNyZWF0ZVNpdGVzRmlsZShmaWxlUGF0aCwgYmFzZVBhdGgpO1xuICB9KTtcbn07XG5cbnZhciBjcmVhdGVTaXRlc0ZpbGUgPSBmdW5jdGlvbihzb3VyY2VQYXRoLCBiYXNlUGF0aCkge1xuICB2YXIgY29udGVudCA9IGZpbGVIYW5kbGVyLmdldFRleHRGaWxlKHNvdXJjZVBhdGgpO1xuICB2YXIgcmVsYXRpdmVQYXRoID0gc291cmNlUGF0aC5tYXRjaCgvc2l0ZVxcLy4rLylbMF07XG4gIGZpbGVIYW5kbGVyLndyaXRlVGV4dEZpbGUoYmFzZVBhdGgsIHJlbGF0aXZlUGF0aCwgY29udGVudCk7XG59O1xuXG52YXIgcmVxdWlyZVNpdGVzRmlsZXMgPSBmdW5jdGlvbihzaXRlc0RhdGEsIGN1c3RvbVNlbWFudGljRGF0YSkge1xuICB2YXIgZmlsZXMgPSB7fTtcblxuICBmaWxlcy5vdmVycmlkZXMgPSBzaXRlc0RhdGEub3ZlcnJpZGVzRmlsZVBhdGhzKCk7XG4gIGZpbGVzLnZhcmlhYmxlcyA9IHNpdGVzRGF0YS52YXJpYWJsZXNGaWxlUGF0aHMoKTtcbiAgLy8gUHJvdmlkZSBhIGN1c3RvbSBtYXRjaGVyIGZ1bmN0aW9uIGJlY2F1c2UgZGVmaW5pdGlvbiBoYXMgbmFtZSBcInNpdGVcIiBhbmQgYWxsIHRoZSBwYXRoIGhhcyBcIl9zaXRlXCIuXG4gIGZpbGVzLm92ZXJyaWRlcyA9IGN1c3RvbVNlbWFudGljRGF0YS5maWx0ZXJEZWZpbml0aW9ucyhmaWxlcy5vdmVycmlkZXMsIGZ1bmN0aW9uKHN0cmluZywgbmFtZSkge1xuICAgIHJldHVybiBzdHJpbmcuc2VhcmNoKG5hbWUgKyBcIi5vdmVycmlkZXNcIikgIT0gLTE7XG4gIH0pO1xuICBmaWxlcy52YXJpYWJsZXMgPSBjdXN0b21TZW1hbnRpY0RhdGEuZmlsdGVyRGVmaW5pdGlvbnMoZmlsZXMudmFyaWFibGVzLCBmdW5jdGlvbihzdHJpbmcsIG5hbWUpIHtcbiAgICByZXR1cm4gc3RyaW5nLnNlYXJjaChuYW1lICsgXCIudmFyaWFibGVzXCIpICE9IC0xO1xuICB9KTtcbiAgcmV0dXJuIGZpbGVzO1xufTtcbiIsInZhciBfID0gTnBtLnJlcXVpcmUoJ2xvZGFzaCcpO1xudmFyIHBhdGggPSBOcG0ucmVxdWlyZSgncGF0aCcpO1xuXG5jdXN0b21Kc29uR2VuZXJhdG9yID0ge307XG5cbi8qKlxuICBHZW5lcmF0ZXMgdGhlIGN1c3RvbSBzZW1hbnRpYyBqc29uIGZpbGUgb25seSBpZiB0aGUgZmlsZSBpcyBlbXB0eS5cbiovXG5jdXN0b21Kc29uR2VuZXJhdG9yLmdlbmVyYXRlID0gZnVuY3Rpb24oYmFzZVBhdGgsIGRlZmluaXRpb25zRGF0YSwgdGhlbWVzRGF0YSkge1xuICB2YXIgY3VzdG9tSnNvbiA9IHt9O1xuICBhZGREZWZpbml0aW9ucyhjdXN0b21Kc29uLCBkZWZpbml0aW9uc0RhdGEpO1xuICBhZGRUaGVtZXMoY3VzdG9tSnNvbiwgdGhlbWVzRGF0YSk7XG4gIGNyZWF0ZUN1c3RvbVNlbWFudGljSnNvbkZpbGUoYmFzZVBhdGgsIGN1c3RvbUpzb24pO1xufTtcblxudmFyIGFkZERlZmluaXRpb25zID0gZnVuY3Rpb24oY3VzdG9tSnNvbiwgZGVmaW5pdGlvbnNEYXRhKSB7XG4gIGN1c3RvbUpzb24uZGVmaW5pdGlvbnMgPSB7fTtcbiAgXy5lYWNoKGRlZmluaXRpb25zRGF0YS5kYXRhLCBmdW5jdGlvbihkKSB7XG4gICAgY3VzdG9tSnNvbi5kZWZpbml0aW9uc1tkLm5hbWVdID0gdHJ1ZTtcbiAgfSk7XG59O1xuXG52YXIgYWRkVGhlbWVzID0gZnVuY3Rpb24oY3VzdG9tSnNvbiwgdGhlbWVzRGF0YSkge1xuICBjdXN0b21Kc29uLnRoZW1lcyA9IHt9O1xuICBfLmVhY2godGhlbWVzRGF0YS5kYXRhLCBmdW5jdGlvbihkKSB7XG4gICAgY3VzdG9tSnNvbi50aGVtZXNbZC5uYW1lXSA9IGZhbHNlO1xuICB9KTtcbiAgY3VzdG9tSnNvbi50aGVtZXMuZGVmYXVsdCA9IHRydWU7XG59O1xuXG52YXIgY3JlYXRlQ3VzdG9tU2VtYW50aWNKc29uRmlsZSA9IGZ1bmN0aW9uKGJhc2VQYXRoLCBjdXN0b21Kc29uKSB7XG4gIGZpbGVIYW5kbGVyLndyaXRlVGV4dEZpbGUoYmFzZVBhdGgsIFwiY3VzdG9tLnNlbWFudGljLmpzb25cIiwgRUpTT04uc3RyaW5naWZ5KGN1c3RvbUpzb24sIHtpbmRlbnQ6IHRydWUsIGNhbm9uaWNhbDogdHJ1ZX0pKTtcbn07XG4iLCJjb25zdCBfID0gTnBtLnJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgcGF0aCA9IE5wbS5yZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBkaWZmID0gTnBtLnJlcXVpcmUoJ2RpZmYnKTtcblxuUGx1Z2luLnJlZ2lzdGVyQ29tcGlsZXIoe1xuICBleHRlbnNpb25zOiBbJ3NlbWFudGljLmpzb24nXSxcbiAgYXJjaE1hdGNoaW5nOiAnd2ViJ1xufSwgKCkgPT4gbmV3IFNlbWFudGljR2VuZXJhdG9yKCkpO1xuXG5jbGFzcyBTZW1hbnRpY0dlbmVyYXRvciB7XG4gIHByb2Nlc3NGaWxlc0ZvclRhcmdldChmaWxlcykge1xuICAgIHZhciBjdXN0b21Kc29uRmlsZSA9IGZpbGVzWzBdO1xuICAgIHRyeSB7XG4gICAgICBnZW5lcmF0ZShjdXN0b21Kc29uRmlsZSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGN1c3RvbUpzb25GaWxlLmVycm9yKHtcbiAgICAgICAgbWVzc2FnZTogXCJTZW1hbnRpYyBVSSBHZW5lcmF0b3I6IFwiICsgZXJyb3IubWVzc2FnZSxcbiAgICAgICAgc291cmNlUGF0aDogZXJyb3IuZmlsZW5hbWUgfHwgY3VzdG9tSnNvbkZpbGUuZ2V0UGF0aEluUGFja2FnZSgpLFxuICAgICAgICBsaW5lOiBlcnJvci5saW5lLFxuICAgICAgICBjb2x1bW46IGVycm9yLmNvbHVtblxuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG59XG5cbnZhciBnZW5lcmF0ZSA9IGZ1bmN0aW9uKGN1c3RvbUpzb25GaWxlKSB7XG4gIHZhciBjdXN0b21Kc29uQ29udGVudCA9IGN1c3RvbUpzb25GaWxlLmdldENvbnRlbnRzQXNTdHJpbmcoKTtcbiAgdmFyIGJhc2VQYXRoID0gY3VzdG9tSnNvbkZpbGUuZ2V0RGlybmFtZSgpO1xuXG4gIGlmIChjdXN0b21Kc29uQ29udGVudCAhPT0gJycpIHtcbiAgICBzZW1hbnRpY1VpUGFja2FnZS5jdXN0b21TZW1hbnRpY0RhdGEuZGF0YSA9IEpTT04ucGFyc2UoY3VzdG9tSnNvbkNvbnRlbnQpO1xuXG4gICAgaWYgKGlzR2VuZXJhdGluZ05lZWRlZChiYXNlUGF0aCwgY3VzdG9tSnNvbkNvbnRlbnQpKSB7XG4gICAgICBzZW1hbnRpY1VpUGFja2FnZS5jdXN0b21TZW1hbnRpY0RhdGEudmFsaWRhdGUoc2VtYW50aWNVaVBhY2thZ2UuZGVmaW5pdGlvbnNEYXRhLCBzZW1hbnRpY1VpUGFja2FnZS50aGVtZXNEYXRhKTtcbiAgICAgIGRlZmluaXRpb25zR2VuZXJhdG9yLmdlbmVyYXRlKGJhc2VQYXRoLCBzZW1hbnRpY1VpUGFja2FnZS5jdXN0b21TZW1hbnRpY0RhdGEsIHNlbWFudGljVWlQYWNrYWdlLmRlZmluaXRpb25zRGF0YSk7XG4gICAgICB0aGVtZXNHZW5lcmF0b3IuZ2VuZXJhdGUoYmFzZVBhdGgsIHNlbWFudGljVWlQYWNrYWdlLmN1c3RvbVNlbWFudGljRGF0YSwgc2VtYW50aWNVaVBhY2thZ2UudGhlbWVzRGF0YSk7XG4gICAgICBzaXRlc0dlbmVyYXRvci5nZW5lcmF0ZShiYXNlUGF0aCwgc2VtYW50aWNVaVBhY2thZ2UuY3VzdG9tU2VtYW50aWNEYXRhLCBzZW1hbnRpY1VpUGFja2FnZS5zaXRlc0RhdGEpO1xuICAgICAgZmlsZUhhbmRsZXIud3JpdGVUZXh0RmlsZShiYXNlUGF0aCwgJy5jdXN0b20uc2VtYW50aWMuanNvbicsIGN1c3RvbUpzb25Db250ZW50KTtcbiAgICB9XG4gICAgLy8gQWx3YXlzIGdlbmVyYXRlIGFzc2V0c1xuICAgIHRoZW1lc0dlbmVyYXRvci5nZW5lcmF0ZUFzc2V0cyhiYXNlUGF0aCwgc2VtYW50aWNVaVBhY2thZ2UuY3VzdG9tU2VtYW50aWNEYXRhLCBzZW1hbnRpY1VpUGFja2FnZS50aGVtZXNEYXRhLCBjdXN0b21Kc29uRmlsZSk7XG4gIH0gZWxzZSB7XG4gICAgY3VzdG9tSnNvbkdlbmVyYXRvci5nZW5lcmF0ZShiYXNlUGF0aCwgc2VtYW50aWNVaVBhY2thZ2UuZGVmaW5pdGlvbnNEYXRhLCBzZW1hbnRpY1VpUGFja2FnZS50aGVtZXNEYXRhKTtcbiAgICBmaWxlSGFuZGxlci53cml0ZVRleHRGaWxlKGJhc2VQYXRoLCAnLmN1c3RvbS5zZW1hbnRpYy5qc29uJywgZmlsZUhhbmRsZXIucmVhZFRleHRGaWxlKGJhc2VQYXRoLCAnY3VzdG9tLnNlbWFudGljLmpzb24nKSk7XG4gIH1cbn07XG5cbnZhciBpc0dlbmVyYXRpbmdOZWVkZWQgPSBmdW5jdGlvbihiYXNlUGF0aCwgY3VzdG9tSnNvbkNvbnRlbnQpIHtcbiAgaWYgKGN1c3RvbUpzb25Db250ZW50ID09PSAnJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmICghZmlsZUhhbmRsZXIuZmlsZUV4aXN0cyhiYXNlUGF0aCwgJy5jdXN0b20uc2VtYW50aWMuanNvbicpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICB2YXIgZG90Q3VzdG9tSnNvbkNvbnRlbnQgPSBmaWxlSGFuZGxlci5yZWFkVGV4dEZpbGUoYmFzZVBhdGgsICcuY3VzdG9tLnNlbWFudGljLmpzb24nKTtcblxuICB2YXIgZG90Q3VzdG9tSnNvbjtcbiAgdHJ5IHtcbiAgICBkb3RDdXN0b21Kc29uID0gSlNPTi5wYXJzZShkb3RDdXN0b21Kc29uQ29udGVudCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgdmFyIGRpZmZSZXN1bHQgPSAgZGlmZi5kaWZmSnNvbihkb3RDdXN0b21Kc29uLCBKU09OLnBhcnNlKGN1c3RvbUpzb25Db250ZW50KSk7XG5cbiAgcmV0dXJuIGRpZmZSZXN1bHQubGVuZ3RoID09IDEgPyBmYWxzZSA6IHRydWU7XG59O1xuIl19
